[
    {
        "    Proj": "maven_bugs-dot-jar_MNG-1205_1bdeeccc",
        "   Class": "org.apache.maven.artifact.resolver.ResolutionNode",
        "     Cat": "STYLE",
        "  Abbrev": "UwF",
        "    Type": "UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "ResolutionNode.children not initialized in constructor and dereferenced in org.apache.maven.artifact.resolver.ResolutionNode.getChildrenIterator()",
        "  Method": "getChildrenIterator",
        "   Field": "children",
        "   Lines": [
            [
                152,
                152,
                null
            ]
        ]
    },
    {
        "    Proj": "maven_bugs-dot-jar_MNG-2408_b92af0e4",
        "   Class": "org.apache.maven.artifact.repository.metadata.AbstractRepositoryMetadata",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_DEFAULT_ENCODING",
        "Priority": "1",
        "    Rank": "19",
        "     Msg": "Found reliance on default encoding in org.apache.maven.artifact.repository.metadata.AbstractRepositoryMetadata.updateRepositoryMetadata(ArtifactRepository, ArtifactRepository): new java.io.FileWriter(File)",
        "  Method": "updateRepositoryMetadata",
        "   Field": "",
        "   Lines": [
            [
                123,
                123,
                null
            ]
        ]
    },
    {
        "    Proj": "maven_bugs-dot-jar_MNG-2408_b92af0e4",
        "   Class": "org.apache.maven.artifact.repository.metadata.AbstractRepositoryMetadata",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "RV",
        "    Type": "RV_RETURN_VALUE_IGNORED_BAD_PRACTICE",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Exceptional return value of java.io.File.mkdirs() ignored in org.apache.maven.artifact.repository.metadata.AbstractRepositoryMetadata.updateRepositoryMetadata(ArtifactRepository, ArtifactRepository)",
        "  Method": "updateRepositoryMetadata",
        "   Field": "",
        "   Lines": [
            [
                122,
                122,
                null
            ]
        ]
    },
    {
        "    Proj": "maven_bugs-dot-jar_MNG-2408_b92af0e4",
        "   Class": "org.apache.maven.artifact.repository.metadata.AbstractRepositoryMetadata",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "RV",
        "    Type": "RV_RETURN_VALUE_IGNORED_BAD_PRACTICE",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Exceptional return value of java.io.File.mkdirs() ignored in org.apache.maven.artifact.repository.metadata.AbstractRepositoryMetadata.updateRepositoryMetadata(ArtifactRepository, ArtifactRepository)",
        "  Method": "updateRepositoryMetadata",
        "   Field": "",
        "   Lines": [
            [
                122,
                122,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1348_6ff92b12",
        "   Class": "org.apache.accumulo.core.util.shell.Shell",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.accumulo.core.util.shell.Shell.getInstance() may expose internal representation by returning Shell.instance",
        "  Method": "getInstance",
        "   Field": "instance",
        "   Lines": [
            [
                411,
                411,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1348_6ff92b12",
        "   Class": "org.apache.accumulo.core.util.shell.Shell",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.accumulo.core.util.shell.Shell(ConsoleReader, PrintWriter) may expose internal representation by storing an externally mutable object into Shell.writer",
        "  Method": "<init>",
        "   Field": "writer",
        "   Lines": [
            [
                216,
                216,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1348_6ff92b12",
        "   Class": "org.apache.accumulo.core.util.shell.Shell",
        "     Cat": "STYLE",
        "  Abbrev": "REC",
        "    Type": "REC_CATCH_EXCEPTION",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Exception is caught when Exception is not thrown in org.apache.accumulo.core.util.shell.Shell.config(String[])",
        "  Method": "config",
        "   Field": "",
        "   Lines": [
            [
                241,
                241,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1348_ef0f6ddc",
        "   Class": "org.apache.accumulo.core.util.shell.Shell",
        "     Cat": "STYLE",
        "  Abbrev": "ICAST",
        "    Type": "ICAST_INTEGER_MULTIPLY_CAST_TO_LONG",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Result of integer multiplication cast to long in org.apache.accumulo.core.util.shell.Shell.config(String[])",
        "  Method": "config",
        "   Field": "",
        "   Lines": [
            [
                231,
                231,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-334_9d8cc45d",
        "   Class": "org.apache.accumulo.core.iterators.user.TimestampFilter",
        "     Cat": "STYLE",
        "  Abbrev": "REC",
        "    Type": "REC_CATCH_EXCEPTION",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Exception is caught when Exception is not thrown in org.apache.accumulo.core.iterators.user.TimestampFilter.validateOptions(Map)",
        "  Method": "validateOptions",
        "   Field": "",
        "   Lines": [
            [
                142,
                142,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1183_742960f1",
        "   Class": "org.apache.accumulo.proxy.ProxyServer",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_CONVERT_CASE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.accumulo.proxy.ProxyServer.getIteratorScope(IteratorScope)",
        "  Method": "getIteratorScope",
        "   Field": "",
        "   Lines": [
            [
                1013,
                1013,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1183_742960f1",
        "   Class": "org.apache.accumulo.proxy.ProxyServer",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_CONVERT_CASE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.accumulo.proxy.ProxyServer.getProxyIteratorScopes(Set)",
        "  Method": "getProxyIteratorScopes",
        "   Field": "",
        "   Lines": [
            [
                1027,
                1027,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1183_cfbf5999",
        "   Class": "org.apache.accumulo.proxy.ProxyServer",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_CONVERT_CASE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.accumulo.proxy.ProxyServer.getIteratorScope(IteratorScope)",
        "  Method": "getIteratorScope",
        "   Field": "",
        "   Lines": [
            [
                1013,
                1013,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1183_cfbf5999",
        "   Class": "org.apache.accumulo.proxy.ProxyServer",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_CONVERT_CASE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.accumulo.proxy.ProxyServer.getProxyIteratorScopes(Set)",
        "  Method": "getProxyIteratorScopes",
        "   Field": "",
        "   Lines": [
            [
                1027,
                1027,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1190_e29dc4f5",
        "   Class": "org.apache.accumulo.proxy.ProxyServer",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_CONVERT_CASE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.accumulo.proxy.ProxyServer.getIteratorScope(IteratorScope)",
        "  Method": "getIteratorScope",
        "   Field": "",
        "   Lines": [
            [
                1026,
                1026,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1190_e29dc4f5",
        "   Class": "org.apache.accumulo.proxy.ProxyServer",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_CONVERT_CASE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.accumulo.proxy.ProxyServer.getProxyIteratorScopes(Set)",
        "  Method": "getProxyIteratorScopes",
        "   Field": "",
        "   Lines": [
            [
                1040,
                1040,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1190_e29dc4f5",
        "   Class": "org.apache.accumulo.proxy.ProxyServer",
        "     Cat": "STYLE",
        "  Abbrev": "REC",
        "    Type": "REC_CATCH_EXCEPTION",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Exception is caught when Exception is not thrown in org.apache.accumulo.proxy.ProxyServer.update(String, Map)",
        "  Method": "update",
        "   Field": "",
        "   Lines": [
            [
                974,
                974,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1199_813109d7",
        "   Class": "org.apache.accumulo.proxy.ProxyServer",
        "     Cat": "STYLE",
        "  Abbrev": "REC",
        "    Type": "REC_CATCH_EXCEPTION",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Exception is caught when Exception is not thrown in org.apache.accumulo.proxy.ProxyServer.flush(String)",
        "  Method": "flush",
        "   Field": "",
        "   Lines": [
            [
                1016,
                1016,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1199_813109d7",
        "   Class": "org.apache.accumulo.proxy.ProxyServer",
        "     Cat": "STYLE",
        "  Abbrev": "REC",
        "    Type": "REC_CATCH_EXCEPTION",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Exception is caught when Exception is not thrown in org.apache.accumulo.proxy.ProxyServer.update(String, Map)",
        "  Method": "update",
        "   Field": "",
        "   Lines": [
            [
                1001,
                1001,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1190_e29dc4f5",
        "   Class": "org.apache.accumulo.proxy.ProxyServer",
        "     Cat": "STYLE",
        "  Abbrev": "BC",
        "    Type": "BC_UNCONFIRMED_CAST_OF_RETURN_VALUE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Unchecked/unconfirmed cast from Throwable to Exception of return value in org.apache.accumulo.proxy.ProxyServer.translateException(Exception)",
        "  Method": "translateException",
        "   Field": "",
        "   Lines": [
            [
                179,
                179,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1199_813109d7",
        "   Class": "org.apache.accumulo.proxy.ProxyServer",
        "     Cat": "STYLE",
        "  Abbrev": "BC",
        "    Type": "BC_UNCONFIRMED_CAST_OF_RETURN_VALUE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Unchecked/unconfirmed cast from Throwable to Exception of return value in org.apache.accumulo.proxy.ProxyServer.translateException(Exception)",
        "  Method": "translateException",
        "   Field": "",
        "   Lines": [
            [
                197,
                197,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1800_3143b9c5",
        "   Class": "org.apache.accumulo.proxy.ProxyServer",
        "     Cat": "STYLE",
        "  Abbrev": "BC",
        "    Type": "BC_UNCONFIRMED_CAST_OF_RETURN_VALUE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Unchecked/unconfirmed cast from Throwable to org.apache.accumulo.core.client.impl.thrift.ThriftTableOperationException of return value in org.apache.accumulo.proxy.ProxyServer.handleAccumuloException(AccumuloException)",
        "  Method": "handleAccumuloException",
        "   Field": "",
        "   Lines": [
            [
                184,
                184,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-3474_cfb832a1",
        "   Class": "org.apache.accumulo.proxy.ProxyServer",
        "     Cat": "STYLE",
        "  Abbrev": "BC",
        "    Type": "BC_UNCONFIRMED_CAST_OF_RETURN_VALUE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Unchecked/unconfirmed cast from Throwable to org.apache.accumulo.core.client.impl.thrift.ThriftTableOperationException of return value in org.apache.accumulo.proxy.ProxyServer.handleAccumuloException(AccumuloException)",
        "  Method": "handleAccumuloException",
        "   Field": "",
        "   Lines": [
            [
                185,
                185,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1312_d9ab8449",
        "   Class": "org.apache.accumulo.core.client.impl.ConnectorImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.accumulo.core.client.impl.ConnectorImpl(Instance, Credentials) may expose internal representation by storing an externally mutable object into ConnectorImpl.instance",
        "  Method": "<init>",
        "   Field": "instance",
        "   Lines": [
            [
                58,
                58,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1312_d9ab8449",
        "   Class": "org.apache.accumulo.core.client.mock.MockConnector",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockConnector.createBatchScanner(String, Authorizations, int)",
        "  Method": "createBatchScanner",
        "   Field": "tables",
        "   Lines": [
            [
                55,
                55,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1312_d9ab8449",
        "   Class": "org.apache.accumulo.core.client.mock.MockInstance",
        "     Cat": "STYLE",
        "  Abbrev": "BC",
        "    Type": "BC_UNCONFIRMED_CAST",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Unchecked/unconfirmed cast from org.apache.accumulo.core.client.security.tokens.AuthenticationToken to org.apache.accumulo.core.client.security.tokens.PasswordToken in org.apache.accumulo.core.client.mock.MockInstance.getConnector(String, AuthenticationToken)",
        "  Method": "getConnector",
        "   Field": "",
        "   Lines": [
            [
                155,
                155,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1312_d9ab8449",
        "   Class": "org.apache.accumulo.core.client.mock.MockInstance",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field users in org.apache.accumulo.core.client.mock.MockInstance.getConnector(String, AuthenticationToken)",
        "  Method": "getConnector",
        "   Field": "users",
        "   Lines": [
            [
                154,
                154,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1348_6ff92b12",
        "   Class": "org.apache.accumulo.core.util.shell.Shell",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_DEFAULT_ENCODING",
        "Priority": "1",
        "    Rank": "19",
        "     Msg": "Found reliance on default encoding in org.apache.accumulo.core.util.shell.Shell.start(): new java.util.Scanner(File)",
        "  Method": "start",
        "   Field": "",
        "   Lines": [
            [
                448,
                448,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-3383_97f16db4",
        "   Class": "org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "DP",
        "    Type": "DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.accumulo.start.classloader.vfs.AccumuloVFSClassLoader.getClassLoader() creates a org.apache.commons.vfs2.impl.VFSClassLoader classloader, which should be performed within a doPrivileged block",
        "  Method": "getClassLoader",
        "   Field": "",
        "   Lines": [
            [
                222,
                222,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1732_941e3cb1",
        "   Class": "org.apache.accumulo.core.client.mapred.AbstractInputFormat",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Dm",
        "    Type": "DM_NEXTINT_VIA_NEXTDOUBLE",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.accumulo.core.client.mapred.AbstractInputFormat.getSplits(JobConf, int) uses the nextDouble method of Random to generate a random integer; using nextInt is more efficient",
        "  Method": "getSplits",
        "   Field": "",
        "   Lines": [
            [
                468,
                468,
                null
            ],
            [
                487,
                487,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1732_941e3cb1",
        "   Class": "org.apache.accumulo.core.client.mapreduce.AbstractInputFormat",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Dm",
        "    Type": "DM_NEXTINT_VIA_NEXTDOUBLE",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.accumulo.core.client.mapreduce.AbstractInputFormat.getSplits(JobContext) uses the nextDouble method of Random to generate a random integer; using nextInt is more efficient",
        "  Method": "getSplits",
        "   Field": "",
        "   Lines": [
            [
                496,
                496,
                null
            ],
            [
                516,
                516,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-193_8ad5a888",
        "   Class": "org.apache.accumulo.core.data.Key",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_DEFAULT_ENCODING",
        "Priority": "1",
        "    Rank": "19",
        "     Msg": "Found reliance on default encoding in org.apache.accumulo.core.data.Key.toStringNoTime(): new String(byte[], int, int)",
        "  Method": "toStringNoTime",
        "   Field": "",
        "   Lines": [
            [
                480,
                480,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-193_c831e44d",
        "   Class": "org.apache.accumulo.core.data.Key",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_DEFAULT_ENCODING",
        "Priority": "1",
        "    Rank": "19",
        "     Msg": "Found reliance on default encoding in org.apache.accumulo.core.data.Key.toStringNoTime(): new String(byte[], int, int)",
        "  Method": "toStringNoTime",
        "   Field": "",
        "   Lines": [
            [
                480,
                480,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-193_8ad5a888",
        "   Class": "org.apache.accumulo.core.data.Key",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_DEFAULT_ENCODING",
        "Priority": "1",
        "    Rank": "19",
        "     Msg": "Found reliance on default encoding in org.apache.accumulo.core.data.Key.toStringNoTime(): new String(byte[], int, int)",
        "  Method": "toStringNoTime",
        "   Field": "",
        "   Lines": [
            [
                480,
                480,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-193_c831e44d",
        "   Class": "org.apache.accumulo.core.data.Key",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_DEFAULT_ENCODING",
        "Priority": "1",
        "    Rank": "19",
        "     Msg": "Found reliance on default encoding in org.apache.accumulo.core.data.Key.toStringNoTime(): new String(byte[], int, int)",
        "  Method": "toStringNoTime",
        "   Field": "",
        "   Lines": [
            [
                480,
                480,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-209_397f86f6",
        "   Class": "org.apache.accumulo.core.iterators.user.RegExFilter",
        "     Cat": "STYLE",
        "  Abbrev": "RV",
        "    Type": "RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Return value of java.util.regex.Pattern.matcher(CharSequence) ignored, but method has no side effect",
        "  Method": "validateOptions",
        "   Field": "",
        "   Lines": [
            [
                152,
                152,
                null
            ],
            [
                155,
                155,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                158,
                158,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                161,
                161,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-209_76d727f0",
        "   Class": "org.apache.accumulo.core.iterators.user.RegExFilter",
        "     Cat": "STYLE",
        "  Abbrev": "RV",
        "    Type": "RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Return value of java.util.regex.Pattern.matcher(CharSequence) ignored, but method has no side effect",
        "  Method": "validateOptions",
        "   Field": "",
        "   Lines": [
            [
                152,
                152,
                null
            ],
            [
                155,
                155,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                158,
                158,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                161,
                161,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-334_9d8cc45d",
        "   Class": "org.apache.accumulo.core.iterators.user.RegExFilter",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Dead store to $L2 in org.apache.accumulo.core.iterators.user.RegExFilter.validateOptions(Map)",
        "  Method": "validateOptions",
        "   Field": "",
        "   Lines": [
            [
                178,
                178,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-334_9d8cc45d",
        "   Class": "org.apache.accumulo.core.iterators.user.RegExFilter",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_DEFAULT_ENCODING",
        "Priority": "1",
        "    Rank": "19",
        "     Msg": "Found reliance on default encoding in org.apache.accumulo.core.iterators.user.RegExFilter.validateOptions(Map): String.getBytes()",
        "  Method": "validateOptions",
        "   Field": "",
        "   Lines": [
            [
                178,
                178,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-209_397f86f6",
        "   Class": "org.apache.accumulo.core.iterators.user.RegExFilter",
        "     Cat": "STYLE",
        "  Abbrev": "RV",
        "    Type": "RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Return value of java.util.regex.Pattern.matcher(CharSequence) ignored, but method has no side effect",
        "  Method": "validateOptions",
        "   Field": "",
        "   Lines": [
            [
                152,
                152,
                null
            ],
            [
                155,
                155,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                158,
                158,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                161,
                161,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-209_76d727f0",
        "   Class": "org.apache.accumulo.core.iterators.user.RegExFilter",
        "     Cat": "STYLE",
        "  Abbrev": "RV",
        "    Type": "RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Return value of java.util.regex.Pattern.matcher(CharSequence) ignored, but method has no side effect",
        "  Method": "validateOptions",
        "   Field": "",
        "   Lines": [
            [
                152,
                152,
                null
            ],
            [
                155,
                155,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                158,
                158,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                161,
                161,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-334_9d8cc45d",
        "   Class": "org.apache.accumulo.core.iterators.user.RegExFilter",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "1",
        "    Rank": "15",
        "     Msg": "Dead store to $L2 in org.apache.accumulo.core.iterators.user.RegExFilter.validateOptions(Map)",
        "  Method": "validateOptions",
        "   Field": "",
        "   Lines": [
            [
                178,
                178,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-334_9d8cc45d",
        "   Class": "org.apache.accumulo.core.iterators.user.RegExFilter",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_DEFAULT_ENCODING",
        "Priority": "1",
        "    Rank": "19",
        "     Msg": "Found reliance on default encoding in org.apache.accumulo.core.iterators.user.RegExFilter.validateOptions(Map): String.getBytes()",
        "  Method": "validateOptions",
        "   Field": "",
        "   Lines": [
            [
                178,
                178,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_46f62443",
        "   Class": "org.apache.accumulo.core.client.admin.TableOperationsHelper",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_CONVERT_CASE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.accumulo.core.client.admin.TableOperationsHelper.getIteratorSetting(String, String, IteratorUtil$IteratorScope)",
        "  Method": "getIteratorSetting",
        "   Field": "",
        "   Lines": [
            [
                71,
                71,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_46f62443",
        "   Class": "org.apache.accumulo.core.client.admin.TableOperationsHelper",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_CONVERT_CASE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.accumulo.core.client.admin.TableOperationsHelper.listIterators(String)",
        "  Method": "listIterators",
        "   Field": "",
        "   Lines": [
            [
                96,
                96,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_add180fb",
        "   Class": "org.apache.accumulo.core.client.admin.TableOperationsHelper",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_CONVERT_CASE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.accumulo.core.client.admin.TableOperationsHelper.getIteratorSetting(String, String, IteratorUtil$IteratorScope)",
        "  Method": "getIteratorSetting",
        "   Field": "",
        "   Lines": [
            [
                71,
                71,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_add180fb",
        "   Class": "org.apache.accumulo.core.client.admin.TableOperationsHelper",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_CONVERT_CASE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.accumulo.core.client.admin.TableOperationsHelper.listIterators(String)",
        "  Method": "listIterators",
        "   Field": "",
        "   Lines": [
            [
                96,
                96,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_46f62443",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field settings in org.apache.accumulo.core.client.mock.MockTableOperations.removeProperty(String, String)",
        "  Method": "removeProperty",
        "   Field": "settings",
        "   Lines": [
            [
                131,
                131,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_46f62443",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field settings in org.apache.accumulo.core.client.mock.MockTableOperations.setProperty(String, String, String)",
        "  Method": "setProperty",
        "   Field": "settings",
        "   Lines": [
            [
                126,
                126,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_46f62443",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.removeProperty(String, String)",
        "  Method": "removeProperty",
        "   Field": "tables",
        "   Lines": [
            [
                131,
                131,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_46f62443",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.setProperty(String, String, String)",
        "  Method": "setProperty",
        "   Field": "tables",
        "   Lines": [
            [
                126,
                126,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_add180fb",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field settings in org.apache.accumulo.core.client.mock.MockTableOperations.setProperty(String, String, String)",
        "  Method": "setProperty",
        "   Field": "settings",
        "   Lines": [
            [
                127,
                127,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_add180fb",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.delete(String)",
        "  Method": "delete",
        "   Field": "tables",
        "   Lines": [
            [
                112,
                112,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_add180fb",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.rename(String, String)",
        "  Method": "rename",
        "   Field": "tables",
        "   Lines": [
            [
                118,
                118,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_add180fb",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.setProperty(String, String, String)",
        "  Method": "setProperty",
        "   Field": "tables",
        "   Lines": [
            [
                127,
                127,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2544_7ec60f1b",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field settings in org.apache.accumulo.core.client.mock.MockTableOperations.setProperty(String, String, String)",
        "  Method": "setProperty",
        "   Field": "settings",
        "   Lines": [
            [
                155,
                155,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2544_7ec60f1b",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.setProperty(String, String, String)",
        "  Method": "setProperty",
        "   Field": "tables",
        "   Lines": [
            [
                155,
                155,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2748_ff8c2383",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field settings in org.apache.accumulo.core.client.mock.MockTableOperations.setProperty(String, String, String)",
        "  Method": "setProperty",
        "   Field": "settings",
        "   Lines": [
            [
                155,
                155,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2748_ff8c2383",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.setProperty(String, String, String)",
        "  Method": "setProperty",
        "   Field": "tables",
        "   Lines": [
            [
                155,
                155,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_46f62443",
        "   Class": "org.apache.accumulo.core.client.admin.TableOperationsHelper",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_CONVERT_CASE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.accumulo.core.client.admin.TableOperationsHelper.getIteratorSetting(String, String, IteratorUtil$IteratorScope)",
        "  Method": "getIteratorSetting",
        "   Field": "",
        "   Lines": [
            [
                71,
                71,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_46f62443",
        "   Class": "org.apache.accumulo.core.client.admin.TableOperationsHelper",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_CONVERT_CASE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.accumulo.core.client.admin.TableOperationsHelper.listIterators(String)",
        "  Method": "listIterators",
        "   Field": "",
        "   Lines": [
            [
                96,
                96,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_add180fb",
        "   Class": "org.apache.accumulo.core.client.admin.TableOperationsHelper",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_CONVERT_CASE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.accumulo.core.client.admin.TableOperationsHelper.getIteratorSetting(String, String, IteratorUtil$IteratorScope)",
        "  Method": "getIteratorSetting",
        "   Field": "",
        "   Lines": [
            [
                71,
                71,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_add180fb",
        "   Class": "org.apache.accumulo.core.client.admin.TableOperationsHelper",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_CONVERT_CASE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.accumulo.core.client.admin.TableOperationsHelper.listIterators(String)",
        "  Method": "listIterators",
        "   Field": "",
        "   Lines": [
            [
                96,
                96,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_46f62443",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field settings in org.apache.accumulo.core.client.mock.MockTableOperations.removeProperty(String, String)",
        "  Method": "removeProperty",
        "   Field": "settings",
        "   Lines": [
            [
                131,
                131,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_46f62443",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.removeProperty(String, String)",
        "  Method": "removeProperty",
        "   Field": "tables",
        "   Lines": [
            [
                131,
                131,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_add180fb",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field settings in org.apache.accumulo.core.client.mock.MockTableOperations.removeProperty(String, String)",
        "  Method": "removeProperty",
        "   Field": "settings",
        "   Lines": [
            [
                132,
                132,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_add180fb",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field settings in org.apache.accumulo.core.client.mock.MockTableOperations.setProperty(String, String, String)",
        "  Method": "setProperty",
        "   Field": "settings",
        "   Lines": [
            [
                127,
                127,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_add180fb",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.removeProperty(String, String)",
        "  Method": "removeProperty",
        "   Field": "tables",
        "   Lines": [
            [
                132,
                132,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_add180fb",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.setProperty(String, String, String)",
        "  Method": "setProperty",
        "   Field": "tables",
        "   Lines": [
            [
                127,
                127,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2544_7ec60f1b",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field settings in org.apache.accumulo.core.client.mock.MockTableOperations.getProperties(String)",
        "  Method": "getProperties",
        "   Field": "settings",
        "   Lines": [
            [
                167,
                167,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2544_7ec60f1b",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field settings in org.apache.accumulo.core.client.mock.MockTableOperations.removeProperty(String, String)",
        "  Method": "removeProperty",
        "   Field": "settings",
        "   Lines": [
            [
                160,
                160,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2544_7ec60f1b",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.getProperties(String)",
        "  Method": "getProperties",
        "   Field": "tables",
        "   Lines": [
            [
                167,
                167,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2544_7ec60f1b",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.importDirectory(String, String, String, boolean)",
        "  Method": "importDirectory",
        "   Field": "tables",
        "   Lines": [
            [
                196,
                196,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2544_7ec60f1b",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.removeProperty(String, String)",
        "  Method": "removeProperty",
        "   Field": "tables",
        "   Lines": [
            [
                160,
                160,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2544_7ec60f1b",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.rename(String, String)",
        "  Method": "rename",
        "   Field": "tables",
        "   Lines": [
            [
                145,
                145,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2748_ff8c2383",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field settings in org.apache.accumulo.core.client.mock.MockTableOperations.getProperties(String)",
        "  Method": "getProperties",
        "   Field": "settings",
        "   Lines": [
            [
                167,
                167,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2748_ff8c2383",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field settings in org.apache.accumulo.core.client.mock.MockTableOperations.removeProperty(String, String)",
        "  Method": "removeProperty",
        "   Field": "settings",
        "   Lines": [
            [
                160,
                160,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2748_ff8c2383",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.getProperties(String)",
        "  Method": "getProperties",
        "   Field": "tables",
        "   Lines": [
            [
                167,
                167,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2748_ff8c2383",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.importDirectory(String, String, String, boolean)",
        "  Method": "importDirectory",
        "   Field": "tables",
        "   Lines": [
            [
                196,
                196,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2748_ff8c2383",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.removeProperty(String, String)",
        "  Method": "removeProperty",
        "   Field": "tables",
        "   Lines": [
            [
                160,
                160,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2748_ff8c2383",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.rename(String, String)",
        "  Method": "rename",
        "   Field": "tables",
        "   Lines": [
            [
                145,
                145,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-843_65390f8c",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.delete(String)",
        "  Method": "delete",
        "   Field": "tables",
        "   Lines": [
            [
                122,
                122,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-843_65390f8c",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.getProperties(String)",
        "  Method": "getProperties",
        "   Field": "tables",
        "   Lines": [
            [
                153,
                153,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-843_65390f8c",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.rename(String, String)",
        "  Method": "rename",
        "   Field": "tables",
        "   Lines": [
            [
                132,
                132,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-843_65390f8c",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.setProperty(String, String, String)",
        "  Method": "setProperty",
        "   Field": "tables",
        "   Lines": [
            [
                141,
                141,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2544_7ec60f1b",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.exists(String)",
        "  Method": "exists",
        "   Field": "tables",
        "   Lines": [
            [
                74,
                74,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2748_ff8c2383",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.exists(String)",
        "  Method": "exists",
        "   Field": "tables",
        "   Lines": [
            [
                74,
                74,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-843_65390f8c",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.exists(String)",
        "  Method": "exists",
        "   Field": "tables",
        "   Lines": [
            [
                73,
                73,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2544_7ec60f1b",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.exists(String)",
        "  Method": "exists",
        "   Field": "tables",
        "   Lines": [
            [
                74,
                74,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2748_ff8c2383",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.exists(String)",
        "  Method": "exists",
        "   Field": "tables",
        "   Lines": [
            [
                74,
                74,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-843_65390f8c",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.exists(String)",
        "  Method": "exists",
        "   Field": "tables",
        "   Lines": [
            [
                73,
                73,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2487_f2920c26",
        "   Class": "org.apache.accumulo.core.data.Value",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.accumulo.core.data.Value.get() may expose internal representation by returning Value.value",
        "  Method": "get",
        "   Field": "value",
        "   Lines": [
            [
                115,
                115,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2487_f2920c26",
        "   Class": "org.apache.accumulo.core.data.Value",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.accumulo.core.data.Value.set(byte[]) may expose internal representation by storing an externally mutable object into Value.value",
        "  Method": "set",
        "   Field": "value",
        "   Lines": [
            [
                123,
                123,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_46f62443",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.list()",
        "  Method": "list",
        "   Field": "tables",
        "   Lines": [
            [
                58,
                58,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_add180fb",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.list()",
        "  Method": "list",
        "   Field": "tables",
        "   Lines": [
            [
                59,
                59,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2544_7ec60f1b",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field table in org.apache.accumulo.core.client.mock.MockTableOperations.deleteRows(String, Text, Text)",
        "  Method": "deleteRows",
        "   Field": "table",
        "   Lines": [
            [
                317,
                317,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2748_ff8c2383",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field table in org.apache.accumulo.core.client.mock.MockTableOperations.deleteRows(String, Text, Text)",
        "  Method": "deleteRows",
        "   Field": "table",
        "   Lines": [
            [
                321,
                321,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-843_65390f8c",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.getMaxRow(String, Authorizations, Text, boolean, Text, boolean)",
        "  Method": "getMaxRow",
        "   Field": "tables",
        "   Lines": [
            [
                321,
                321,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2742_1f7dd2d5",
        "   Class": "org.apache.accumulo.core.util.shell.commands.HistoryCommand",
        "     Cat": "STYLE",
        "  Abbrev": "UwF",
        "    Type": "UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "HistoryCommand.disablePaginationOpt not initialized in constructor and dereferenced in org.apache.accumulo.core.util.shell.commands.HistoryCommand.execute(String, CommandLine, Shell)",
        "  Method": "execute",
        "   Field": "disablePaginationOpt",
        "   Lines": [
            [
                43,
                43,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2544_7ec60f1b",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field table in org.apache.accumulo.core.client.mock.MockTableOperations.deleteRows(String, Text, Text)",
        "  Method": "deleteRows",
        "   Field": "table",
        "   Lines": [
            [
                317,
                317,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-843_65390f8c",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.removeProperty(String, String)",
        "  Method": "removeProperty",
        "   Field": "tables",
        "   Lines": [
            [
                146,
                146,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2544_7ec60f1b",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.tableIdMap()",
        "  Method": "tableIdMap",
        "   Field": "tables",
        "   Lines": [
            [
                299,
                299,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2748_ff8c2383",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.tableIdMap()",
        "  Method": "tableIdMap",
        "   Field": "tables",
        "   Lines": [
            [
                299,
                299,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2899_31aea2ad",
        "   Class": "org.apache.accumulo.tserver.Tablet",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "IS",
        "    Type": "IS2_INCONSISTENT_SYNC",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Inconsistent synchronization of org.apache.accumulo.tserver.Tablet.currentLogs; locked 83% of time",
        "  Method": "",
        "   Field": "currentLogs",
        "   Lines": [
            [
                3641,
                3641,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                3642,
                3642,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                3667,
                3667,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                3702,
                3702,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                3736,
                3736,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                3750,
                3750,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                3747,
                3747,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                3760,
                3760,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                2167,
                2167,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                2168,
                2168,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                2751,
                2751,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                2752,
                2752,
                "SOURCE_LINE_SYNC_ACCESS"
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2899_31aea2ad",
        "   Class": "org.apache.accumulo.tserver.log.DfsLogger",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_DEFAULT_ENCODING",
        "Priority": "1",
        "    Rank": "19",
        "     Msg": "Found reliance on default encoding in org.apache.accumulo.tserver.log.DfsLogger.readHeaderAndReturnStream(VolumeManager, Path, AccumuloConfiguration): String.getBytes()",
        "  Method": "readHeaderAndReturnStream",
        "   Field": "",
        "   Lines": [
            [
                236,
                236,
                null
            ],
            [
                258,
                258,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2899_31aea2ad",
        "   Class": "org.apache.accumulo.tserver.log.DfsLogger",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "IS",
        "    Type": "IS2_INCONSISTENT_SYNC",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Inconsistent synchronization of org.apache.accumulo.tserver.log.DfsLogger.logPath; locked 66% of time",
        "  Method": "",
        "   Field": "logPath",
        "   Lines": [
            [
                545,
                545,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                404,
                404,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                317,
                317,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                321,
                321,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                328,
                328,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                326,
                326,
                "SOURCE_LINE_SYNC_ACCESS"
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1544_0cf2ff72",
        "   Class": "org.apache.accumulo.minicluster.MiniAccumuloCluster",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.accumulo.minicluster.MiniAccumuloCluster.getDebugPorts() may expose internal representation by returning MiniAccumuloCluster.debugPorts",
        "  Method": "getDebugPorts",
        "   Field": "debugPorts",
        "   Lines": [
            [
                375,
                375,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-3150_72fd6bec",
        "   Class": "org.apache.accumulo.minicluster.MiniAccumuloCluster",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "IS",
        "    Type": "IS2_INCONSISTENT_SYNC",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Inconsistent synchronization of org.apache.accumulo.minicluster.MiniAccumuloCluster.executor; locked 80% of time",
        "  Method": "",
        "   Field": "executor",
        "   Lines": [
            [
                437,
                437,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                442,
                442,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                374,
                374,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                423,
                423,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                424,
                424,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                431,
                431,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                446,
                446,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                455,
                455,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                348,
                348,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                349,
                349,
                "SOURCE_LINE_SYNC_ACCESS"
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-3242_15e83709",
        "   Class": "org.apache.accumulo.fate.zookeeper.ZooUtil",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "MS",
        "    Type": "MS_MUTABLE_COLLECTION_PKGPROTECT",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.accumulo.fate.zookeeper.ZooUtil.PRIVATE is a mutable collection which should be package protected",
        "  Method": "",
        "   Field": "PRIVATE",
        "   Lines": [
            [
                101,
                101,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-3242_15e83709",
        "   Class": "org.apache.accumulo.fate.zookeeper.ZooUtil",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "MS",
        "    Type": "MS_MUTABLE_COLLECTION_PKGPROTECT",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.accumulo.fate.zookeeper.ZooUtil.PUBLIC is a mutable collection which should be package protected",
        "  Method": "",
        "   Field": "PUBLIC",
        "   Lines": [
            [
                103,
                103,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-334_9d8cc45d",
        "   Class": "org.apache.accumulo.core.iterators.VersioningIterator",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "Nm",
        "    Type": "NM_SAME_SIMPLE_NAME_AS_SUPERCLASS",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "The class name org.apache.accumulo.core.iterators.VersioningIterator shadows the simple name of the superclass org.apache.accumulo.core.iterators.user.VersioningIterator",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                29,
                33,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-3408_81d25bc2",
        "   Class": "org.apache.accumulo.monitor.servlets.PreciseNumberType",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "Se",
        "    Type": "SE_COMPARATOR_SHOULD_BE_SERIALIZABLE",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "org.apache.accumulo.monitor.servlets.PreciseNumberType implements Comparator but not Serializable",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                24,
                30,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-3408_81d25bc2",
        "   Class": "org.apache.accumulo.monitor.util.celltypes.NumberType",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "Se",
        "    Type": "SE_COMPARATOR_SHOULD_BE_SERIALIZABLE",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "org.apache.accumulo.monitor.util.celltypes.NumberType implements Comparator but not Serializable",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                21,
                116,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1348_6ff92b12",
        "   Class": "org.apache.accumulo.core.util.shell.Shell",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.accumulo.core.util.shell.Shell.getInstance() may expose internal representation by returning Shell.instance",
        "  Method": "getInstance",
        "   Field": "instance",
        "   Lines": [
            [
                411,
                411,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1348_6ff92b12",
        "   Class": "org.apache.accumulo.core.util.shell.Shell",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.accumulo.core.util.shell.Shell(ConsoleReader, PrintWriter) may expose internal representation by storing an externally mutable object into Shell.writer",
        "  Method": "<init>",
        "   Field": "writer",
        "   Lines": [
            [
                216,
                216,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1348_6ff92b12",
        "   Class": "org.apache.accumulo.core.util.shell.Shell",
        "     Cat": "STYLE",
        "  Abbrev": "REC",
        "    Type": "REC_CATCH_EXCEPTION",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Exception is caught when Exception is not thrown in org.apache.accumulo.core.util.shell.Shell.config(String[])",
        "  Method": "config",
        "   Field": "",
        "   Lines": [
            [
                241,
                241,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1348_ef0f6ddc",
        "   Class": "org.apache.accumulo.core.util.shell.Shell",
        "     Cat": "STYLE",
        "  Abbrev": "ICAST",
        "    Type": "ICAST_INTEGER_MULTIPLY_CAST_TO_LONG",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Result of integer multiplication cast to long in org.apache.accumulo.core.util.shell.Shell.config(String[])",
        "  Method": "config",
        "   Field": "",
        "   Lines": [
            [
                231,
                231,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1986_adee0f12",
        "   Class": "org.apache.accumulo.core.data.Mutation",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.accumulo.core.data.Mutation.getRow() may expose internal representation by returning Mutation.row",
        "  Method": "getRow",
        "   Field": "row",
        "   Lines": [
            [
                201,
                201,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-412_5594b2e0",
        "   Class": "org.apache.accumulo.server.client.BulkImporter",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field tablet_extent in org.apache.accumulo.server.client.BulkImporter.findOverlappingTablets(AccumuloConfiguration, FileSystem, TabletLocator, Path, Text, Text)",
        "  Method": "findOverlappingTablets",
        "   Field": "tablet_extent",
        "   Lines": [
            [
                673,
                673,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-412_be2fdba7",
        "   Class": "org.apache.accumulo.server.client.BulkImporter",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field tablet_extent in org.apache.accumulo.server.client.BulkImporter.findOverlappingTablets(AccumuloConfiguration, FileSystem, TabletLocator, Path, Text, Text)",
        "  Method": "findOverlappingTablets",
        "   Field": "tablet_extent",
        "   Lines": [
            [
                673,
                673,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-412_5594b2e0",
        "   Class": "org.apache.accumulo.server.client.BulkImporter",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field tablet_extent in org.apache.accumulo.server.client.BulkImporter.findOverlappingTablets(AccumuloConfiguration, FileSystem, TabletLocator, Path, Text, Text)",
        "  Method": "findOverlappingTablets",
        "   Field": "tablet_extent",
        "   Lines": [
            [
                673,
                673,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-412_be2fdba7",
        "   Class": "org.apache.accumulo.server.client.BulkImporter",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field tablet_extent in org.apache.accumulo.server.client.BulkImporter.findOverlappingTablets(AccumuloConfiguration, FileSystem, TabletLocator, Path, Text, Text)",
        "  Method": "findOverlappingTablets",
        "   Field": "tablet_extent",
        "   Lines": [
            [
                673,
                673,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-334_9d8cc45d",
        "   Class": "org.apache.accumulo.core.iterators.user.TimestampFilter",
        "     Cat": "STYLE",
        "  Abbrev": "REC",
        "    Type": "REC_CATCH_EXCEPTION",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Exception is caught when Exception is not thrown in org.apache.accumulo.core.iterators.user.TimestampFilter.validateOptions(Map)",
        "  Method": "validateOptions",
        "   Field": "",
        "   Lines": [
            [
                142,
                142,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-821_a450ac2f",
        "   Class": "org.apache.accumulo.core.client.mock.MockBatchScanner",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field table in org.apache.accumulo.core.client.mock.MockBatchScanner.iterator()",
        "  Method": "iterator",
        "   Field": "table",
        "   Lines": [
            [
                80,
                80,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1505_994df698",
        "   Class": "org.apache.accumulo.core.client.mock.MockTable",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.accumulo.core.client.mock.MockTable.getLocalityGroups() may expose internal representation by returning MockTable.localityGroups",
        "  Method": "getLocalityGroups",
        "   Field": "localityGroups",
        "   Lines": [
            [
                133,
                133,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1505_994df698",
        "   Class": "org.apache.accumulo.core.client.mock.MockTable",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.accumulo.core.client.mock.MockTable.getSplits() may expose internal representation by returning MockTable.splits",
        "  Method": "getSplits",
        "   Field": "splits",
        "   Lines": [
            [
                126,
                126,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1505_994df698",
        "   Class": "org.apache.accumulo.core.client.mock.MockTable",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.accumulo.core.client.mock.MockTable.setLocalityGroups(Map) may expose internal representation by storing an externally mutable object into MockTable.localityGroups",
        "  Method": "setLocalityGroups",
        "   Field": "localityGroups",
        "   Lines": [
            [
                130,
                130,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1505_b082fc1e",
        "   Class": "org.apache.accumulo.core.client.mock.MockTable",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.accumulo.core.client.mock.MockTable.getLocalityGroups() may expose internal representation by returning MockTable.localityGroups",
        "  Method": "getLocalityGroups",
        "   Field": "localityGroups",
        "   Lines": [
            [
                133,
                133,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1505_b082fc1e",
        "   Class": "org.apache.accumulo.core.client.mock.MockTable",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.accumulo.core.client.mock.MockTable.getSplits() may expose internal representation by returning MockTable.splits",
        "  Method": "getSplits",
        "   Field": "splits",
        "   Lines": [
            [
                126,
                126,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-1505_b082fc1e",
        "   Class": "org.apache.accumulo.core.client.mock.MockTable",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.accumulo.core.client.mock.MockTable.setLocalityGroups(Map) may expose internal representation by storing an externally mutable object into MockTable.localityGroups",
        "  Method": "setLocalityGroups",
        "   Field": "localityGroups",
        "   Lines": [
            [
                130,
                130,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_46f62443",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field settings in org.apache.accumulo.core.client.mock.MockTableOperations.removeProperty(String, String)",
        "  Method": "removeProperty",
        "   Field": "settings",
        "   Lines": [
            [
                131,
                131,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_46f62443",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field settings in org.apache.accumulo.core.client.mock.MockTableOperations.setProperty(String, String, String)",
        "  Method": "setProperty",
        "   Field": "settings",
        "   Lines": [
            [
                126,
                126,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_46f62443",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.removeProperty(String, String)",
        "  Method": "removeProperty",
        "   Field": "tables",
        "   Lines": [
            [
                131,
                131,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_46f62443",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.setProperty(String, String, String)",
        "  Method": "setProperty",
        "   Field": "tables",
        "   Lines": [
            [
                126,
                126,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_add180fb",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field settings in org.apache.accumulo.core.client.mock.MockTableOperations.removeProperty(String, String)",
        "  Method": "removeProperty",
        "   Field": "settings",
        "   Lines": [
            [
                132,
                132,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_add180fb",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field settings in org.apache.accumulo.core.client.mock.MockTableOperations.setProperty(String, String, String)",
        "  Method": "setProperty",
        "   Field": "settings",
        "   Lines": [
            [
                127,
                127,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_add180fb",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.removeProperty(String, String)",
        "  Method": "removeProperty",
        "   Field": "tables",
        "   Lines": [
            [
                132,
                132,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-217_add180fb",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.setProperty(String, String, String)",
        "  Method": "setProperty",
        "   Field": "tables",
        "   Lines": [
            [
                127,
                127,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2857_9fcca2ed",
        "   Class": "org.apache.accumulo.core.client.mock.MockTable",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.accumulo.core.client.mock.MockTable.getSplits() may expose internal representation by returning MockTable.splits",
        "  Method": "getSplits",
        "   Field": "splits",
        "   Lines": [
            [
                128,
                128,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2857_9fcca2ed",
        "   Class": "org.apache.accumulo.core.client.mock.MockTable",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.accumulo.core.client.mock.MockTable.setLocalityGroups(Map) may expose internal representation by storing an externally mutable object into MockTable.localityGroups",
        "  Method": "setLocalityGroups",
        "   Field": "localityGroups",
        "   Lines": [
            [
                132,
                132,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-843_65390f8c",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.rename(String, String)",
        "  Method": "rename",
        "   Field": "tables",
        "   Lines": [
            [
                132,
                132,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2544_7ec60f1b",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field settings in org.apache.accumulo.core.client.mock.MockTableOperations.getProperties(String)",
        "  Method": "getProperties",
        "   Field": "settings",
        "   Lines": [
            [
                167,
                167,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2544_7ec60f1b",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field settings in org.apache.accumulo.core.client.mock.MockTableOperations.removeProperty(String, String)",
        "  Method": "removeProperty",
        "   Field": "settings",
        "   Lines": [
            [
                160,
                160,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2544_7ec60f1b",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.deleteRows(String, Text, Text)",
        "  Method": "deleteRows",
        "   Field": "tables",
        "   Lines": [
            [
                316,
                316,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2544_7ec60f1b",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.getProperties(String)",
        "  Method": "getProperties",
        "   Field": "tables",
        "   Lines": [
            [
                167,
                167,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2544_7ec60f1b",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.removeProperty(String, String)",
        "  Method": "removeProperty",
        "   Field": "tables",
        "   Lines": [
            [
                160,
                160,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2544_7ec60f1b",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.setLocalityGroups(String, Map)",
        "  Method": "setLocalityGroups",
        "   Field": "tables",
        "   Lines": [
            [
                174,
                174,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2544_7ec60f1b",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.tableIdMap()",
        "  Method": "tableIdMap",
        "   Field": "tables",
        "   Lines": [
            [
                299,
                299,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2748_ff8c2383",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field table in org.apache.accumulo.core.client.mock.MockTableOperations.deleteRows(String, Text, Text)",
        "  Method": "deleteRows",
        "   Field": "table",
        "   Lines": [
            [
                321,
                321,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2748_ff8c2383",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field settings in org.apache.accumulo.core.client.mock.MockTableOperations.getProperties(String)",
        "  Method": "getProperties",
        "   Field": "settings",
        "   Lines": [
            [
                167,
                167,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2748_ff8c2383",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field settings in org.apache.accumulo.core.client.mock.MockTableOperations.removeProperty(String, String)",
        "  Method": "removeProperty",
        "   Field": "settings",
        "   Lines": [
            [
                160,
                160,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2748_ff8c2383",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.deleteRows(String, Text, Text)",
        "  Method": "deleteRows",
        "   Field": "tables",
        "   Lines": [
            [
                316,
                316,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2748_ff8c2383",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.getProperties(String)",
        "  Method": "getProperties",
        "   Field": "tables",
        "   Lines": [
            [
                167,
                167,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2748_ff8c2383",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.removeProperty(String, String)",
        "  Method": "removeProperty",
        "   Field": "tables",
        "   Lines": [
            [
                160,
                160,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2748_ff8c2383",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.setLocalityGroups(String, Map)",
        "  Method": "setLocalityGroups",
        "   Field": "tables",
        "   Lines": [
            [
                174,
                174,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-2748_ff8c2383",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.tableIdMap()",
        "  Method": "tableIdMap",
        "   Field": "tables",
        "   Lines": [
            [
                299,
                299,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-843_65390f8c",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.getMaxRow(String, Authorizations, Text, boolean, Text, boolean)",
        "  Method": "getMaxRow",
        "   Field": "tables",
        "   Lines": [
            [
                321,
                321,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-843_65390f8c",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.importDirectory(String, String, String, boolean)",
        "  Method": "importDirectory",
        "   Field": "tables",
        "   Lines": [
            [
                176,
                176,
                null
            ]
        ]
    },
    {
        "    Proj": "accumulo_bugs-dot-jar_ACCUMULO-843_65390f8c",
        "   Class": "org.apache.accumulo.core.client.mock.MockTableOperations",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field tables in org.apache.accumulo.core.client.mock.MockTableOperations.tableIdMap()",
        "  Method": "tableIdMap",
        "   Field": "tables",
        "   Lines": [
            [
                279,
                279,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-4038_557eec4f",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.property.PropertyIndexPlan",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "UrF",
        "    Type": "URF_UNREAD_FIELD",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Unread field: org.apache.jackrabbit.oak.plugins.index.property.PropertyIndexPlan.root",
        "  Method": "",
        "   Field": "root",
        "   Lines": [
            [
                101,
                101,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2691_d2da7499",
        "   Class": "org.apache.jackrabbit.oak.plugins.identifier.ClusterRepositoryInfo",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.identifier.ClusterRepositoryInfo.getId(NodeStore) due to return value of called method",
        "  Method": "getId",
        "   Field": "",
        "   Lines": [
            [
                61,
                61,
                "SOURCE_LINE_DEREF"
            ],
            [
                61,
                61,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1035_b2ca8baa",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.property.strategy.ContentMirrorStoreStrategy",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.index.property.strategy.ContentMirrorStoreStrategy.count(NodeState, Set, int) due to return value of called method",
        "  Method": "count",
        "   Field": "",
        "   Lines": [
            [
                171,
                171,
                "SOURCE_LINE_DEREF"
            ],
            [
                170,
                170,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1076_9238264d",
        "   Class": "org.apache.jackrabbit.oak.query.ast.SelectorImpl",
        "     Cat": "STYLE",
        "  Abbrev": "BC",
        "    Type": "BC_VACUOUS_INSTANCEOF",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "instanceof will always return true for all non-null values in org.apache.jackrabbit.oak.query.ast.SelectorImpl.equals(Object), since all org.apache.jackrabbit.oak.query.ast.SelectorImpl are instances of org.apache.jackrabbit.oak.query.ast.SelectorImpl",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                654,
                654,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1076_9238264d",
        "   Class": "org.apache.jackrabbit.oak.query.ast.SelectorImpl",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "SIO",
        "    Type": "SIO_SUPERFLUOUS_INSTANCEOF",
        "Priority": "3",
        "    Rank": "10",
        "     Msg": "org.apache.jackrabbit.oak.query.ast.SelectorImpl.equals(Object) does an unnecessary type check using instanceof operator when it can be determined statically",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                654,
                654,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1168_c05cec12",
        "   Class": "org.apache.jackrabbit.oak.namepath.NamePathMapperImpl",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.jackrabbit.oak.namepath.NamePathMapperImpl.needsFullMapping(String) where default case is missing",
        "  Method": "needsFullMapping",
        "   Field": "",
        "   Lines": [
            [
                241,
                251,
                null
            ],
            [
                256,
                280,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1215_a9efe3c4",
        "   Class": "org.apache.jackrabbit.oak.query.ast.PropertyValueImpl",
        "     Cat": "STYLE",
        "  Abbrev": "UC",
        "    Type": "UC_USELESS_CONDITION",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "Useless condition: it's known that asterisk == true at this point",
        "  Method": "currentProperty",
        "   Field": "",
        "   Lines": [
            [
                120,
                120,
                "SOURCE_UNREACHABLE_CODE"
            ],
            [
                119,
                119,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1076_9238264d",
        "   Class": "org.apache.jackrabbit.oak.query.ast.SelectorImpl",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field query in org.apache.jackrabbit.oak.query.ast.SelectorImpl.getTree(String)",
        "  Method": "getTree",
        "   Field": "query",
        "   Lines": [
            [
                487,
                487,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1215_a9efe3c4",
        "   Class": "org.apache.jackrabbit.oak.query.ast.SelectorImpl",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "BC",
        "    Type": "BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Equals method for org.apache.jackrabbit.oak.query.ast.SelectorImpl assumes the argument is of type SelectorImpl",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                464,
                464,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1215_a9efe3c4",
        "   Class": "org.apache.jackrabbit.oak.query.ast.SelectorImpl",
        "     Cat": "STYLE",
        "  Abbrev": "BC",
        "    Type": "BC_VACUOUS_INSTANCEOF",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "instanceof will always return true for all non-null values in org.apache.jackrabbit.oak.query.ast.SelectorImpl.equals(Object), since all org.apache.jackrabbit.oak.query.ast.SelectorImpl are instances of org.apache.jackrabbit.oak.query.ast.SelectorImpl",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                461,
                461,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1215_a9efe3c4",
        "   Class": "org.apache.jackrabbit.oak.query.ast.SelectorImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.query.ast.SelectorImpl.restrictSelector(ConstraintImpl) may expose internal representation by storing an externally mutable object into SelectorImpl.selectorCondition",
        "  Method": "restrictSelector",
        "   Field": "selectorCondition",
        "   Lines": [
            [
                451,
                451,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1215_a9efe3c4",
        "   Class": "org.apache.jackrabbit.oak.query.ast.SelectorImpl",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "SIO",
        "    Type": "SIO_SUPERFLUOUS_INSTANCEOF",
        "Priority": "3",
        "    Rank": "10",
        "     Msg": "org.apache.jackrabbit.oak.query.ast.SelectorImpl.equals(Object) does an unnecessary type check using instanceof operator when it can be determined statically",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                461,
                461,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2062_5c4589bd",
        "   Class": "org.apache.jackrabbit.oak.query.ast.SelectorImpl",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field query in org.apache.jackrabbit.oak.query.ast.SelectorImpl.getTree(String)",
        "  Method": "getTree",
        "   Field": "query",
        "   Lines": [
            [
                505,
                505,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1227_117b0a3d",
        "   Class": "org.apache.jackrabbit.oak.jcr.session.NodeImpl",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.jcr.session.NodeImpl.hasNode(String) due to return value of called method",
        "  Method": "hasNode",
        "   Field": "",
        "   Lines": [
            [
                801,
                801,
                "SOURCE_LINE_DEREF"
            ],
            [
                801,
                801,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1227_117b0a3d",
        "   Class": "org.apache.jackrabbit.oak.jcr.session.NodeImpl",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.jcr.session.NodeImpl.hasProperty(String) due to return value of called method",
        "  Method": "hasProperty",
        "   Field": "",
        "   Lines": [
            [
                812,
                812,
                "SOURCE_LINE_DEREF"
            ],
            [
                812,
                812,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1235_1beb2a50",
        "   Class": "org.apache.jackrabbit.oak.upgrade.RepositoryUpgrade",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.jackrabbit.oak.upgrade.RepositoryUpgrade(RepositoryContext, NodeStore) may expose internal representation by storing an externally mutable object into RepositoryUpgrade.source",
        "  Method": "<init>",
        "   Field": "source",
        "   Lines": [
            [
                161,
                161,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1235_1beb2a50",
        "   Class": "org.apache.jackrabbit.oak.upgrade.RepositoryUpgrade",
        "     Cat": "STYLE",
        "  Abbrev": "REC",
        "    Type": "REC_CATCH_EXCEPTION",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Exception is caught when Exception is not thrown in org.apache.jackrabbit.oak.upgrade.RepositoryUpgrade.copy()",
        "  Method": "copy",
        "   Field": "",
        "   Lines": [
            [
                198,
                198,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1719_c3773d53",
        "   Class": "org.apache.jackrabbit.oak.upgrade.RepositoryUpgrade",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.jackrabbit.oak.upgrade.RepositoryUpgrade(RepositoryContext, NodeStore) may expose internal representation by storing an externally mutable object into RepositoryUpgrade.source",
        "  Method": "<init>",
        "   Field": "source",
        "   Lines": [
            [
                184,
                184,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1731_024e5d37",
        "   Class": "org.apache.jackrabbit.oak.upgrade.RepositoryUpgrade",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.jackrabbit.oak.upgrade.RepositoryUpgrade(RepositoryContext, NodeStore) may expose internal representation by storing an externally mutable object into RepositoryUpgrade.source",
        "  Method": "<init>",
        "   Field": "source",
        "   Lines": [
            [
                193,
                193,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1129_2f95b81f",
        "   Class": "org.apache.jackrabbit.oak.plugins.mongomk.MongoNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.mongomk.MongoNodeStore.moveOrCopyNode(boolean, String, String, Commit) due to return value of called method",
        "  Method": "moveOrCopyNode",
        "   Field": "",
        "   Lines": [
            [
                1151,
                1151,
                "SOURCE_LINE_INVOKED"
            ],
            [
                1151,
                1151,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1516_7c62bd81",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndex",
        "     Cat": "STYLE",
        "  Abbrev": "PZLA",
        "    Type": "PZLA_PREFER_ZERO_LENGTH_ARRAYS",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Should org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndex.extractMatchingTokens(IndexReader, String) return a zero length array rather than null?",
        "  Method": "extractMatchingTokens",
        "   Field": "",
        "   Lines": [
            [
                732,
                732,
                null
            ],
            [
                748,
                748,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2999_3bf07779",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexEditor",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_PARAM_DEREF",
        "Priority": "1",
        "    Rank": "6",
        "     Msg": "Null passed for non-null parameter of org.apache.jackrabbit.oak.spi.state.NodeState.hasProperty(String) in org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexEditor.isPropertyNotNull(NodeState, PropertyDefinition)",
        "  Method": "isPropertyNotNull",
        "   Field": "nonRelativeName",
        "   Lines": [
            [
                611,
                611,
                "SOURCE_LINE_INVOKED"
            ],
            [
                611,
                611,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2999_3bf07779",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexEditor",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_PARAM_DEREF",
        "Priority": "1",
        "    Rank": "6",
        "     Msg": "Null passed for non-null parameter of org.apache.jackrabbit.oak.spi.state.NodeState.hasProperty(String) in org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexEditor.isPropertyNull(NodeState, PropertyDefinition)",
        "  Method": "isPropertyNull",
        "   Field": "nonRelativeName",
        "   Lines": [
            [
                595,
                595,
                "SOURCE_LINE_INVOKED"
            ],
            [
                595,
                595,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2999_3bf07779",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexEditor",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field nodeState in org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexEditor.indexAggregatedNode(String, List, Aggregate$NodeIncludeResult)",
        "  Method": "indexAggregatedNode",
        "   Field": "nodeState",
        "   Lines": [
            [
                698,
                698,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3020_147515ae",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexEditor",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field nodeState in org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexEditor.indexAggregatedNode(String, List, Aggregate$NodeIncludeResult)",
        "  Method": "indexAggregatedNode",
        "   Field": "nodeState",
        "   Lines": [
            [
                692,
                692,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3105_311e8b33",
        "   Class": "org.apache.jackrabbit.oak.plugins.segment.SegmentWriter",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "IS",
        "    Type": "IS2_INCONSISTENT_SYNC",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Inconsistent synchronization of org.apache.jackrabbit.oak.plugins.segment.SegmentWriter.segment; locked 93% of time",
        "  Method": "",
        "   Field": "segment",
        "   Lines": [
            [
                1138,
                1138,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                180,
                180,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                225,
                225,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                245,
                245,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                246,
                246,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                246,
                246,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                341,
                341,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                347,
                347,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                343,
                343,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                282,
                282,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                335,
                335,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                305,
                305,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                315,
                315,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                971,
                971,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                996,
                996,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1002,
                1002,
                "SOURCE_LINE_SYNC_ACCESS"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1770_192ee9e4",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.NodeDocument",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "WMI",
        "    Type": "WMI_WRONG_MAP_ITERATOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.NodeDocument.split(RevisionContext) makes inefficient use of keySet iterator instead of entrySet iterator",
        "  Method": "split",
        "   Field": "",
        "   Lines": [
            [
                960,
                960,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1822_016df669",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.NodeDocument",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "WMI",
        "    Type": "WMI_WRONG_MAP_ITERATOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.NodeDocument.split(RevisionContext) makes inefficient use of keySet iterator instead of entrySet iterator",
        "  Method": "split",
        "   Field": "",
        "   Lines": [
            [
                975,
                975,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1822_3e83a4c1",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.NodeDocument",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "WMI",
        "    Type": "WMI_WRONG_MAP_ITERATOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.NodeDocument.split(RevisionContext) makes inefficient use of keySet iterator instead of entrySet iterator",
        "  Method": "split",
        "   Field": "",
        "   Lines": [
            [
                975,
                975,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1429_c2f5ca6c",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "BC",
        "    Type": "BC_UNCONFIRMED_CAST_OF_RETURN_VALUE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Unchecked/unconfirmed cast from Throwable to org.apache.jackrabbit.mk.api.MicroKernelException of return value in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diff(String, String, String)",
        "  Method": "diff",
        "   Field": "",
        "   Lines": [
            [
                1159,
                1159,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1429_c2f5ca6c",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision) due to return value of called method",
        "  Method": "diffFewChildren",
        "   Field": "",
        "   Lines": [
            [
                1518,
                1518,
                "SOURCE_LINE_INVOKED"
            ],
            [
                1512,
                1512,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1429_c2f5ca6c",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision) due to return value of called method",
        "  Method": "diffFewChildren",
        "   Field": "",
        "   Lines": [
            [
                1519,
                1519,
                "SOURCE_LINE_INVOKED"
            ],
            [
                1513,
                1513,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1429_c2f5ca6c",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field children in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.applyChanges(Revision, Revision, String, boolean, boolean, boolean, boolean, List, List, List)",
        "  Method": "applyChanges",
        "   Field": "children",
        "   Lines": [
            [
                840,
                840,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1429_c2f5ca6c",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field children in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision)",
        "  Method": "diffFewChildren",
        "   Field": "children",
        "   Lines": [
            [
                1526,
                1526,
                null
            ],
            [
                1508,
                1508,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1662_3efb5cbf",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.applyChanges(Revision, String, boolean, boolean, boolean, List, List, List, DiffCache$Entry) due to return value of called method",
        "  Method": "applyChanges",
        "   Field": "",
        "   Lines": [
            [
                849,
                849,
                "SOURCE_LINE_DEREF"
            ],
            [
                849,
                849,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1662_3efb5cbf",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, String, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision) due to return value of called method",
        "  Method": "diffFewChildren",
        "   Field": "",
        "   Lines": [
            [
                1552,
                1552,
                "SOURCE_LINE_INVOKED"
            ],
            [
                1546,
                1546,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1662_3efb5cbf",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, String, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision) due to return value of called method",
        "  Method": "diffFewChildren",
        "   Field": "",
        "   Lines": [
            [
                1553,
                1553,
                "SOURCE_LINE_INVOKED"
            ],
            [
                1547,
                1547,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1662_3efb5cbf",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diff(String, String, String) where default case is missing",
        "  Method": "diff",
        "   Field": "",
        "   Lines": [
            [
                1173,
                1187,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1779_9d36bede",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field childNames in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.readChildDocs(String, String, int)",
        "  Method": "readChildDocs",
        "   Field": "childNames",
        "   Lines": [
            [
                821,
                821,
                null
            ],
            [
                793,
                793,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                788,
                788,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                804,
                804,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2311_ca85ecce",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field childNames in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.readChildDocs(String, String, int)",
        "  Method": "readChildDocs",
        "   Field": "childNames",
        "   Lines": [
            [
                875,
                875,
                null
            ],
            [
                846,
                846,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                841,
                841,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                857,
                857,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2345_a0dc4c89",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field childNames in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.readChildDocs(String, String, int)",
        "  Method": "readChildDocs",
        "   Field": "childNames",
        "   Lines": [
            [
                868,
                868,
                null
            ],
            [
                839,
                839,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                834,
                834,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                850,
                850,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2363_90ea7aa5",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field childNames in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.readChildDocs(String, String, int)",
        "  Method": "readChildDocs",
        "   Field": "childNames",
        "   Lines": [
            [
                878,
                878,
                null
            ],
            [
                849,
                849,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                844,
                844,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                860,
                860,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2363_90ea7aa5",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field children in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.readChildren(DocumentNodeState, String, int)",
        "  Method": "readChildren",
        "   Field": "children",
        "   Lines": [
            [
                789,
                789,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2642_36fe017c",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getRevisionComparator() may expose internal representation by returning DocumentNodeStore.revisionComparator",
        "  Method": "getRevisionComparator",
        "   Field": "revisionComparator",
        "   Lines": [
            [
                1490,
                1490,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2642_36fe017c",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.checkpointInfo(String) due to return value of called method",
        "  Method": "checkpointInfo",
        "   Field": "",
        "   Lines": [
            [
                1449,
                1449,
                "SOURCE_LINE_DEREF"
            ],
            [
                1449,
                1449,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2695_0598498e",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getRevisionComparator() may expose internal representation by returning DocumentNodeStore.revisionComparator",
        "  Method": "getRevisionComparator",
        "   Field": "revisionComparator",
        "   Lines": [
            [
                1538,
                1538,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2695_0598498e",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.checkpointInfo(String) due to return value of called method",
        "  Method": "checkpointInfo",
        "   Field": "",
        "   Lines": [
            [
                1497,
                1497,
                "SOURCE_LINE_DEREF"
            ],
            [
                1497,
                1497,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2695_0598498e",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field children in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getChildren(DocumentNodeState, String, int)",
        "  Method": "getChildren",
        "   Field": "children",
        "   Lines": [
            [
                789,
                789,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2695_0598498e",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field children in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.readChildren(DocumentNodeState, String, int)",
        "  Method": "readChildren",
        "   Field": "children",
        "   Lines": [
            [
                847,
                847,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3028_89317b28",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field children in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getChildren(DocumentNodeState, String, int)",
        "  Method": "getChildren",
        "   Field": "children",
        "   Lines": [
            [
                854,
                854,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3028_89317b28",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diff(String, String, String) where default case is missing",
        "  Method": "diff",
        "   Field": "",
        "   Lines": [
            [
                1431,
                1445,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3433_b76b31f7",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field childNames in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.applyChanges(Revision, String, boolean, List, List, List, DiffCache$Entry)",
        "  Method": "applyChanges",
        "   Field": "childNames",
        "   Lines": [
            [
                1165,
                1165,
                null
            ],
            [
                1189,
                1189,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3433_b76b31f7",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diff(String, String, String) where default case is missing",
        "  Method": "diff",
        "   Field": "",
        "   Lines": [
            [
                1474,
                1488,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3549_9772f5b2",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field childNames in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.applyChanges(Revision, String, boolean, List, List, List, DiffCache$Entry)",
        "  Method": "applyChanges",
        "   Field": "childNames",
        "   Lines": [
            [
                1153,
                1153,
                null
            ],
            [
                1177,
                1177,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3549_9772f5b2",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "UL",
        "    Type": "UL_UNRELEASED_LOCK",
        "Priority": "1",
        "    Rank": "12",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.newMergeCommit(Revision, int) does not release lock on all paths",
        "  Method": "newMergeCommit",
        "   Field": "",
        "   Lines": [
            [
                670,
                670,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3579_2565d74a",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field childNames in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.applyChanges(Revision, String, boolean, List, List, List, DiffCache$Entry)",
        "  Method": "applyChanges",
        "   Field": "childNames",
        "   Lines": [
            [
                1156,
                1156,
                null
            ],
            [
                1180,
                1180,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3897_94c6c575",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getRoot() may expose internal representation by returning DocumentNodeStore.root",
        "  Method": "getRoot",
        "   Field": "root",
        "   Lines": [
            [
                1461,
                1461,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3897_94c6c575",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field children in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getChildren(DocumentNodeState, String, int)",
        "  Method": "getChildren",
        "   Field": "children",
        "   Lines": [
            [
                852,
                852,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3903_690fb9f4",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field children in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getChildren(DocumentNodeState, String, int)",
        "  Method": "getChildren",
        "   Field": "children",
        "   Lines": [
            [
                855,
                855,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2249_6dde8e9d",
        "   Class": "org.apache.jackrabbit.oak.query.xpath.Statement",
        "     Cat": "STYLE",
        "  Abbrev": "UwF",
        "    Type": "UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Statement.selectors not initialized in constructor and dereferenced in org.apache.jackrabbit.oak.query.xpath.Statement.toString()",
        "  Method": "toString",
        "   Field": "selectors",
        "   Lines": [
            [
                129,
                129,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1460_f1ba7a42",
        "   Class": "org.apache.jackrabbit.oak.plugins.commit.ChildOrderConflictHandler",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field handler in org.apache.jackrabbit.oak.plugins.commit.ChildOrderConflictHandler.addExistingProperty(NodeBuilder, PropertyState, PropertyState)",
        "  Method": "addExistingProperty",
        "   Field": "handler",
        "   Lines": [
            [
                50,
                50,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1662_3efb5cbf",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.Commit",
        "     Cat": "STYLE",
        "  Abbrev": "BC",
        "    Type": "BC_UNCONFIRMED_CAST_OF_RETURN_VALUE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Unchecked/unconfirmed cast from org.apache.jackrabbit.oak.plugins.document.Document to org.apache.jackrabbit.oak.plugins.document.NodeDocument of return value in org.apache.jackrabbit.oak.plugins.document.Commit.updateParentChildStatus()",
        "  Method": "updateParentChildStatus",
        "   Field": "",
        "   Lines": [
            [
                411,
                411,
                null
            ],
            [
                404,
                404,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1761_f37ce716",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diff(String, String, String) where default case is missing",
        "  Method": "diff",
        "   Field": "",
        "   Lines": [
            [
                1202,
                1216,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1429_279bb3ce",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.NodeDocument",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field value in org.apache.jackrabbit.oak.plugins.document.NodeDocument.getLiveRevision(RevisionContext, Revision, Set)",
        "  Method": "getLiveRevision",
        "   Field": "value",
        "   Lines": [
            [
                589,
                589,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1208_cb3ac20d",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndex",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to tokens in org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndex.tokenToQuery(String, Analyzer)",
        "  Method": "tokenToQuery",
        "   Field": "",
        "   Lines": [
            [
                646,
                646,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1270_70564c7c",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndex",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to tokens in org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndex.tokenToQuery(String, Analyzer)",
        "  Method": "tokenToQuery",
        "   Field": "",
        "   Lines": [
            [
                653,
                653,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2029_e30023ba",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexEditorContext",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "RV",
        "    Type": "RV_RETURN_VALUE_IGNORED_BAD_PRACTICE",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Exceptional return value of java.io.File.mkdirs() ignored in org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexEditorContext.newIndexDirectory(NodeBuilder)",
        "  Method": "newIndexDirectory",
        "   Field": "",
        "   Lines": [
            [
                79,
                79,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2235_29d3d8f1",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexEditorContext",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "RV",
        "    Type": "RV_RETURN_VALUE_IGNORED_BAD_PRACTICE",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Exceptional return value of java.io.File.mkdirs() ignored in org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexEditorContext.newIndexDirectory(NodeBuilder)",
        "  Method": "newIndexDirectory",
        "   Field": "",
        "   Lines": [
            [
                74,
                74,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-4036_f4324736",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexProviderService",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "UrF",
        "    Type": "URF_UNREAD_FIELD",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "Unread field: org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexProviderService.extractedTextProvider",
        "  Method": "",
        "   Field": "extractedTextProvider",
        "   Lines": [
            [
                487,
                487,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1770_192ee9e4",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.NodeDocument",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field data in org.apache.jackrabbit.oak.plugins.document.NodeDocument.referencesOldDocAfterSplit(NodeDocument, NodeDocument)",
        "  Method": "referencesOldDocAfterSplit",
        "   Field": "data",
        "   Lines": [
            [
                1378,
                1378,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1719_c3773d53",
        "   Class": "org.apache.jackrabbit.oak.upgrade.RepositoryUpgrade",
        "     Cat": "STYLE",
        "  Abbrev": "UCF",
        "    Type": "UCF_USELESS_CONTROL_FLOW",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Useless control flow in org.apache.jackrabbit.oak.upgrade.RepositoryUpgrade.copyPropertyDefinition(QPropertyDefinition, NodeBuilder)",
        "  Method": "copyPropertyDefinition",
        "   Field": "",
        "   Lines": [
            [
                489,
                489,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1731_024e5d37",
        "   Class": "org.apache.jackrabbit.oak.upgrade.RepositoryUpgrade",
        "     Cat": "STYLE",
        "  Abbrev": "UCF",
        "    Type": "UCF_USELESS_CONTROL_FLOW",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Useless control flow in org.apache.jackrabbit.oak.upgrade.RepositoryUpgrade.copyPropertyDefinition(QPropertyDefinition, NodeBuilder)",
        "  Method": "copyPropertyDefinition",
        "   Field": "",
        "   Lines": [
            [
                549,
                549,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2420_24cb1908",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "UL",
        "    Type": "UL_UNRELEASED_LOCK",
        "Priority": "1",
        "    Rank": "12",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.newMergeCommit(Revision, int) does not release lock on all paths",
        "  Method": "newMergeCommit",
        "   Field": "",
        "   Lines": [
            [
                593,
                593,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1877_716e1237",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_LOAD_OF_KNOWN_NULL_VALUE",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Load of known null value in org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run()",
        "  Method": "run",
        "   Field": "",
        "   Lines": [
            [
                234,
                234,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1877_716e1237",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate",
        "     Cat": "STYLE",
        "  Abbrev": "RCN",
        "    Type": "RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Redundant nullcheck of exception which is known to be null in org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run()",
        "  Method": "run",
        "   Field": "",
        "   Lines": [
            [
                234,
                234,
                "SOURCE_REDUNDANT_NULL_CHECK"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1877_716e1237",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "RpC",
        "    Type": "RpC_REPEATED_CONDITIONAL_TEST",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Repeated conditional test in org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run()",
        "  Method": "run",
        "   Field": "",
        "   Lines": [
            [
                234,
                234,
                null
            ],
            [
                234,
                234,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3249_64712735",
        "   Class": "org.apache.jackrabbit.oak.upgrade.RepositoryUpgrade",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.upgrade.RepositoryUpgrade.setCustomCommitHooks(List) may expose internal representation by storing an externally mutable object into RepositoryUpgrade.customCommitHooks",
        "  Method": "setCustomCommitHooks",
        "   Field": "customCommitHooks",
        "   Lines": [
            [
                263,
                263,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1789_07646fba",
        "   Class": "org.apache.jackrabbit.oak.upgrade.JackrabbitNodeState",
        "     Cat": "STYLE",
        "  Abbrev": "REC",
        "    Type": "REC_CATCH_EXCEPTION",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Exception is caught when Exception is not thrown in org.apache.jackrabbit.oak.upgrade.JackrabbitNodeState.createProperties(NodePropBundle)",
        "  Method": "createProperties",
        "   Field": "",
        "   Lines": [
            [
                307,
                307,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1789_9f7c1df0",
        "   Class": "org.apache.jackrabbit.oak.upgrade.JackrabbitNodeState",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to primary in org.apache.jackrabbit.oak.upgrade.JackrabbitNodeState.createProperties(NodePropBundle)",
        "  Method": "createProperties",
        "   Field": "",
        "   Lines": [
            [
                317,
                317,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1789_08ba79d4",
        "   Class": "org.apache.jackrabbit.oak.upgrade.JackrabbitNodeState",
        "     Cat": "STYLE",
        "  Abbrev": "REC",
        "    Type": "REC_CATCH_EXCEPTION",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Exception is caught when Exception is not thrown in org.apache.jackrabbit.oak.upgrade.JackrabbitNodeState.createProperties(NodePropBundle)",
        "  Method": "createProperties",
        "   Field": "",
        "   Lines": [
            [
                288,
                288,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1789_9f7c1df0",
        "   Class": "org.apache.jackrabbit.oak.upgrade.JackrabbitNodeState",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to primary in org.apache.jackrabbit.oak.upgrade.JackrabbitNodeState.createProperties(NodePropBundle)",
        "  Method": "createProperties",
        "   Field": "",
        "   Lines": [
            [
                317,
                317,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1822_016df669",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore",
        "     Cat": "STYLE",
        "  Abbrev": "DB",
        "    Type": "DB_DUPLICATE_SWITCH_CLAUSES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore.createUpdate(UpdateOp) uses the same code for two switch clauses",
        "  Method": "createUpdate",
        "   Field": "",
        "   Lines": [
            [
                984,
                985,
                null
            ],
            [
                992,
                993,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1822_016df669",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore.createUpdate(UpdateOp) where default case is missing",
        "  Method": "createUpdate",
        "   Field": "",
        "   Lines": [
            [
                982,
                996,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1822_3e83a4c1",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore",
        "     Cat": "STYLE",
        "  Abbrev": "DB",
        "    Type": "DB_DUPLICATE_SWITCH_CLAUSES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore.createUpdate(UpdateOp) uses the same code for two switch clauses",
        "  Method": "createUpdate",
        "   Field": "",
        "   Lines": [
            [
                984,
                985,
                null
            ],
            [
                992,
                993,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1822_3e83a4c1",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore.createUpdate(UpdateOp) where default case is missing",
        "  Method": "createUpdate",
        "   Field": "",
        "   Lines": [
            [
                982,
                996,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1822_016df669",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore",
        "     Cat": "STYLE",
        "  Abbrev": "DB",
        "    Type": "DB_DUPLICATE_SWITCH_CLAUSES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore.createUpdate(UpdateOp) uses the same code for two switch clauses",
        "  Method": "createUpdate",
        "   Field": "",
        "   Lines": [
            [
                984,
                985,
                null
            ],
            [
                992,
                993,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1822_016df669",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore.createUpdate(UpdateOp) where default case is missing",
        "  Method": "createUpdate",
        "   Field": "",
        "   Lines": [
            [
                982,
                996,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1822_3e83a4c1",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore",
        "     Cat": "STYLE",
        "  Abbrev": "DB",
        "    Type": "DB_DUPLICATE_SWITCH_CLAUSES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore.createUpdate(UpdateOp) uses the same code for two switch clauses",
        "  Method": "createUpdate",
        "   Field": "",
        "   Lines": [
            [
                984,
                985,
                null
            ],
            [
                992,
                993,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1822_3e83a4c1",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore.createUpdate(UpdateOp) where default case is missing",
        "  Method": "createUpdate",
        "   Field": "",
        "   Lines": [
            [
                982,
                996,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1829_ca36450e",
        "   Class": "org.apache.jackrabbit.oak.query.ast.LowerCaseImpl",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_CONVERT_CASE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Use of non-localized String.toUpperCase() or String.toLowerCase() in org.apache.jackrabbit.oak.query.ast.LowerCaseImpl.currentProperty()",
        "  Method": "currentProperty",
        "   Field": "",
        "   Lines": [
            [
                77,
                77,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1874_3ae276c1",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.IndexUpdate",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.index.IndexUpdate.collectIndexEditors(NodeBuilder) due to return value of called method",
        "  Method": "collectIndexEditors",
        "   Field": "",
        "   Lines": [
            [
                131,
                131,
                "SOURCE_LINE_INVOKED"
            ],
            [
                130,
                130,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1877_716e1237",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.IndexUpdate",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.index.IndexUpdate.collectIndexEditors(NodeBuilder, NodeState) due to return value of called method",
        "  Method": "collectIndexEditors",
        "   Field": "",
        "   Lines": [
            [
                145,
                145,
                "SOURCE_LINE_INVOKED"
            ],
            [
                142,
                142,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1749_591e4d4a",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "ES",
        "    Type": "ES_COMPARING_STRINGS_WITH_EQ",
        "Priority": "3",
        "    Rank": "14",
        "     Msg": "Comparison of String objects using == or != in org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isFinished()",
        "  Method": "isFinished",
        "   Field": "",
        "   Lines": [
            [
                318,
                318,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1749_591e4d4a",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isAlreadyRunning(NodeStore, String) due to return value of called method",
        "  Method": "isAlreadyRunning",
        "   Field": "",
        "   Lines": [
            [
                266,
                266,
                "SOURCE_LINE_DEREF"
            ],
            [
                265,
                265,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1784_2426deae",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "ES",
        "    Type": "ES_COMPARING_STRINGS_WITH_EQ",
        "Priority": "3",
        "    Rank": "14",
        "     Msg": "Comparison of String objects using == or != in org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isFinished()",
        "  Method": "isFinished",
        "   Field": "",
        "   Lines": [
            [
                316,
                316,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1784_2426deae",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isAlreadyRunning(NodeStore, String) due to return value of called method",
        "  Method": "isAlreadyRunning",
        "   Field": "",
        "   Lines": [
            [
                264,
                264,
                "SOURCE_LINE_DEREF"
            ],
            [
                263,
                263,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1877_716e1237",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_LOAD_OF_KNOWN_NULL_VALUE",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Load of known null value in org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run()",
        "  Method": "run",
        "   Field": "",
        "   Lines": [
            [
                234,
                234,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1877_716e1237",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.isAlreadyRunning(NodeStore, String) due to return value of called method",
        "  Method": "isAlreadyRunning",
        "   Field": "",
        "   Lines": [
            [
                300,
                300,
                "SOURCE_LINE_DEREF"
            ],
            [
                299,
                299,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1877_716e1237",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate",
        "     Cat": "STYLE",
        "  Abbrev": "RCN",
        "    Type": "RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Redundant nullcheck of exception which is known to be null in org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run()",
        "  Method": "run",
        "   Field": "",
        "   Lines": [
            [
                234,
                234,
                "SOURCE_REDUNDANT_NULL_CHECK"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1877_716e1237",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "RpC",
        "    Type": "RpC_REPEATED_CONDITIONAL_TEST",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Repeated conditional test in org.apache.jackrabbit.oak.plugins.index.AsyncIndexUpdate.run()",
        "  Method": "run",
        "   Field": "",
        "   Lines": [
            [
                234,
                234,
                null
            ],
            [
                234,
                234,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1429_279bb3ce",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.NodeDocument",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field value in org.apache.jackrabbit.oak.plugins.document.NodeDocument.getLiveRevision(RevisionContext, Revision, Set)",
        "  Method": "getLiveRevision",
        "   Field": "value",
        "   Lines": [
            [
                589,
                589,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1817_78c37386",
        "   Class": "org.apache.jackrabbit.oak.plugins.segment.SegmentWriter",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "ES",
        "    Type": "ES_COMPARING_STRINGS_WITH_EQ",
        "Priority": "2",
        "    Rank": "11",
        "     Msg": "Comparison of String objects using == or != in org.apache.jackrabbit.oak.plugins.segment.SegmentWriter.writeNode(NodeState)",
        "  Method": "writeNode",
        "   Field": "",
        "   Lines": [
            [
                943,
                943,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1932_913c2f53",
        "   Class": "org.apache.jackrabbit.oak.plugins.segment.SegmentWriter",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "ES",
        "    Type": "ES_COMPARING_STRINGS_WITH_EQ",
        "Priority": "2",
        "    Rank": "11",
        "     Msg": "Comparison of String objects using == or != in org.apache.jackrabbit.oak.plugins.segment.SegmentWriter.writeNode(NodeState)",
        "  Method": "writeNode",
        "   Field": "",
        "   Lines": [
            [
                974,
                974,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3105_311e8b33",
        "   Class": "org.apache.jackrabbit.oak.plugins.segment.SegmentWriter",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "ES",
        "    Type": "ES_COMPARING_STRINGS_WITH_EQ",
        "Priority": "2",
        "    Rank": "11",
        "     Msg": "Comparison of String objects using == or != in org.apache.jackrabbit.oak.plugins.segment.SegmentWriter.writeTemplate(Template)",
        "  Method": "writeTemplate",
        "   Field": "",
        "   Lines": [
            [
                948,
                948,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3105_311e8b33",
        "   Class": "org.apache.jackrabbit.oak.plugins.segment.SegmentWriter",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "IS",
        "    Type": "IS2_INCONSISTENT_SYNC",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Inconsistent synchronization of org.apache.jackrabbit.oak.plugins.segment.SegmentWriter.segment; locked 93% of time",
        "  Method": "",
        "   Field": "segment",
        "   Lines": [
            [
                1138,
                1138,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                180,
                180,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                225,
                225,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                245,
                245,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                246,
                246,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                246,
                246,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                341,
                341,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                347,
                347,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                343,
                343,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                282,
                282,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                335,
                335,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                305,
                305,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                315,
                315,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                971,
                971,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                996,
                996,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1002,
                1002,
                "SOURCE_LINE_SYNC_ACCESS"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1932_913c2f53",
        "   Class": "org.apache.jackrabbit.oak.plugins.segment.file.FileStore",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "IS",
        "    Type": "IS2_INCONSISTENT_SYNC",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Inconsistent synchronization of org.apache.jackrabbit.oak.plugins.segment.file.FileStore.writer; locked 88% of time",
        "  Method": "",
        "   Field": "writer",
        "   Lines": [
            [
                346,
                346,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                386,
                386,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                552,
                552,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                557,
                557,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                581,
                581,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                586,
                586,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                601,
                601,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                435,
                435,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                518,
                518,
                "SOURCE_LINE_SYNC_ACCESS"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1035_b2ca8baa",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.property.strategy.ContentMirrorStoreStrategy",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.index.property.strategy.ContentMirrorStoreStrategy.count(NodeState, Set, int) due to return value of called method",
        "  Method": "count",
        "   Field": "",
        "   Lines": [
            [
                171,
                171,
                "SOURCE_LINE_DEREF"
            ],
            [
                170,
                170,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1899_b6f89048",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.property.strategy.OrderedContentMirrorStoreStrategy",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_LOAD_OF_KNOWN_NULL_VALUE",
        "Priority": "3",
        "    Rank": "19",
        "     Msg": "Load of known null value in org.apache.jackrabbit.oak.plugins.index.property.strategy.OrderedContentMirrorStoreStrategy.query(Filter, String, NodeState, String, Filter$PropertyRestriction)",
        "  Method": "query",
        "   Field": "",
        "   Lines": [
            [
                332,
                332,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1899_df59fb45",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.property.strategy.OrderedContentMirrorStoreStrategy",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_LOAD_OF_KNOWN_NULL_VALUE",
        "Priority": "3",
        "    Rank": "19",
        "     Msg": "Load of known null value in org.apache.jackrabbit.oak.plugins.index.property.strategy.OrderedContentMirrorStoreStrategy.query(Filter, String, NodeState, String, Filter$PropertyRestriction)",
        "  Method": "query",
        "   Field": "",
        "   Lines": [
            [
                332,
                332,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1697_1552be04",
        "   Class": "org.apache.jackrabbit.oak.security.authentication.token.TokenProviderImpl",
        "     Cat": "STYLE",
        "  Abbrev": "RCN",
        "    Type": "RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Redundant nullcheck of parentPath, which is known to be non-null in org.apache.jackrabbit.oak.security.authentication.token.TokenProviderImpl.getTokenParent(String)",
        "  Method": "getTokenParent",
        "   Field": "",
        "   Lines": [
            [
                390,
                390,
                "SOURCE_REDUNDANT_NULL_CHECK"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1985_f620b79b",
        "   Class": "org.apache.jackrabbit.oak.security.authentication.token.TokenProviderImpl",
        "     Cat": "STYLE",
        "  Abbrev": "RCN",
        "    Type": "RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Redundant nullcheck of parentPath, which is known to be non-null in org.apache.jackrabbit.oak.security.authentication.token.TokenProviderImpl.getTokenParent(String)",
        "  Method": "getTokenParent",
        "   Field": "",
        "   Lines": [
            [
                387,
                387,
                "SOURCE_REDUNDANT_NULL_CHECK"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3249_64712735",
        "   Class": "org.apache.jackrabbit.oak.upgrade.RepositoryUpgrade",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.upgrade.RepositoryUpgrade.setCustomCommitHooks(List) may expose internal representation by storing an externally mutable object into RepositoryUpgrade.customCommitHooks",
        "  Method": "setCustomCommitHooks",
        "   Field": "customCommitHooks",
        "   Lines": [
            [
                263,
                263,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1076_9238264d",
        "   Class": "org.apache.jackrabbit.oak.query.ast.SelectorImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.query.ast.SelectorImpl.restrictSelector(ConstraintImpl) may expose internal representation by storing an externally mutable object into SelectorImpl.selectorCondition",
        "  Method": "restrictSelector",
        "   Field": "selectorCondition",
        "   Lines": [
            [
                644,
                644,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2345_a0dc4c89",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.retrieve(String) due to return value of called method",
        "  Method": "retrieve",
        "   Field": "",
        "   Lines": [
            [
                1392,
                1392,
                "SOURCE_LINE_DEREF"
            ],
            [
                1392,
                1392,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3028_89317b28",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.compare(DocumentNodeState, DocumentNodeState, NodeStateDiff) due to return value of called method",
        "  Method": "compare",
        "   Field": "",
        "   Lines": [
            [
                1390,
                1390,
                "SOURCE_LINE_INVOKED"
            ],
            [
                1390,
                1390,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3897_94c6c575",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.compare(DocumentNodeState, DocumentNodeState, NodeStateDiff) due to return value of called method",
        "  Method": "compare",
        "   Field": "",
        "   Lines": [
            [
                1392,
                1392,
                "SOURCE_LINE_INVOKED"
            ],
            [
                1392,
                1392,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2336_d0f6715d",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.NodeDocument",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field revision in org.apache.jackrabbit.oak.plugins.document.NodeDocument.getNodeAtRevision(DocumentNodeStore, Revision, Revision)",
        "  Method": "getNodeAtRevision",
        "   Field": "revision",
        "   Lines": [
            [
                778,
                778,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1662_3efb5cbf",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field children in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, String, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision)",
        "  Method": "diffFewChildren",
        "   Field": "children",
        "   Lines": [
            [
                1541,
                1541,
                null
            ],
            [
                1560,
                1560,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1761_f37ce716",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, String, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision) due to return value of called method",
        "  Method": "diffFewChildren",
        "   Field": "",
        "   Lines": [
            [
                1582,
                1582,
                "SOURCE_LINE_INVOKED"
            ],
            [
                1576,
                1576,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1761_f37ce716",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, String, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision) due to return value of called method",
        "  Method": "diffFewChildren",
        "   Field": "",
        "   Lines": [
            [
                1583,
                1583,
                "SOURCE_LINE_INVOKED"
            ],
            [
                1577,
                1577,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1761_f37ce716",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field children in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, String, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision)",
        "  Method": "diffFewChildren",
        "   Field": "children",
        "   Lines": [
            [
                1571,
                1571,
                null
            ],
            [
                1590,
                1590,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2695_0598498e",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getRevisionComparator() may expose internal representation by returning DocumentNodeStore.revisionComparator",
        "  Method": "getRevisionComparator",
        "   Field": "revisionComparator",
        "   Lines": [
            [
                1538,
                1538,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3897_94c6c575",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getBranches() may expose internal representation by returning DocumentNodeStore.branches",
        "  Method": "getBranches",
        "   Field": "branches",
        "   Lines": [
            [
                1565,
                1565,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1770_192ee9e4",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.NodeDocument",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field data in org.apache.jackrabbit.oak.plugins.document.NodeDocument.split(RevisionContext)",
        "  Method": "split",
        "   Field": "data",
        "   Lines": [
            [
                903,
                903,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2929_a2950285",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.NodeDocument",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field data in org.apache.jackrabbit.oak.plugins.document.NodeDocument.getLocalMap(String)",
        "  Method": "getLocalMap",
        "   Field": "data",
        "   Lines": [
            [
                1452,
                1452,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3411_978c77ff",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.NodeDocument",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field data in org.apache.jackrabbit.oak.plugins.document.NodeDocument.getLocalMap(String)",
        "  Method": "getLocalMap",
        "   Field": "data",
        "   Lines": [
            [
                1449,
                1449,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2311_ca85ecce",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getRevisionComparator() may expose internal representation by returning DocumentNodeStore.revisionComparator",
        "  Method": "getRevisionComparator",
        "   Field": "revisionComparator",
        "   Lines": [
            [
                1409,
                1409,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2345_a0dc4c89",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getBranches() may expose internal representation by returning DocumentNodeStore.branches",
        "  Method": "getBranches",
        "   Field": "branches",
        "   Lines": [
            [
                1409,
                1409,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2363_90ea7aa5",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.retrieve(String) due to return value of called method",
        "  Method": "retrieve",
        "   Field": "",
        "   Lines": [
            [
                1407,
                1407,
                "SOURCE_LINE_DEREF"
            ],
            [
                1407,
                1407,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1429_c2f5ca6c",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "BC",
        "    Type": "BC_UNCONFIRMED_CAST_OF_RETURN_VALUE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Unchecked/unconfirmed cast from Throwable to org.apache.jackrabbit.mk.api.MicroKernelException of return value in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.batchUpdateCommitRoot(UpdateOp)",
        "  Method": "batchUpdateCommitRoot",
        "   Field": "",
        "   Lines": [
            [
                931,
                931,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1429_c2f5ca6c",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field childNames in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.applyChanges(Revision, Revision, String, boolean, boolean, boolean, boolean, List, List, List)",
        "  Method": "applyChanges",
        "   Field": "childNames",
        "   Lines": [
            [
                862,
                862,
                null
            ],
            [
                886,
                886,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1662_3efb5cbf",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field childNames in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.applyChanges(Revision, String, boolean, boolean, boolean, List, List, List, DiffCache$Entry)",
        "  Method": "applyChanges",
        "   Field": "childNames",
        "   Lines": [
            [
                884,
                884,
                null
            ],
            [
                908,
                908,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1761_f37ce716",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.applyChanges(Revision, String, boolean, boolean, boolean, List, List, List, DiffCache$Entry) due to return value of called method",
        "  Method": "applyChanges",
        "   Field": "",
        "   Lines": [
            [
                874,
                874,
                "SOURCE_LINE_DEREF"
            ],
            [
                874,
                874,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1761_f37ce716",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field children in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.applyChanges(Revision, String, boolean, boolean, boolean, List, List, List, DiffCache$Entry)",
        "  Method": "applyChanges",
        "   Field": "children",
        "   Lines": [
            [
                887,
                887,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1761_f37ce716",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field childNames in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.applyChanges(Revision, String, boolean, boolean, boolean, List, List, List, DiffCache$Entry)",
        "  Method": "applyChanges",
        "   Field": "childNames",
        "   Lines": [
            [
                909,
                909,
                null
            ],
            [
                933,
                933,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1779_9d36bede",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field childNames in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.applyChanges(Revision, String, boolean, boolean, boolean, List, List, List, DiffCache$Entry)",
        "  Method": "applyChanges",
        "   Field": "childNames",
        "   Lines": [
            [
                932,
                932,
                null
            ],
            [
                956,
                956,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2311_ca85ecce",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field childNames in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.readChildDocs(String, String, int)",
        "  Method": "readChildDocs",
        "   Field": "childNames",
        "   Lines": [
            [
                875,
                875,
                null
            ],
            [
                846,
                846,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                841,
                841,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                857,
                857,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2345_a0dc4c89",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field children in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.applyChanges(Revision, String, boolean, List, List, List, DiffCache$Entry)",
        "  Method": "applyChanges",
        "   Field": "children",
        "   Lines": [
            [
                943,
                943,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2420_24cb1908",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field childNames in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.readChildDocs(String, String, int)",
        "  Method": "readChildDocs",
        "   Field": "childNames",
        "   Lines": [
            [
                926,
                926,
                null
            ],
            [
                897,
                897,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                892,
                892,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                908,
                908,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2642_36fe017c",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field childNames in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.readChildDocs(String, String, int)",
        "  Method": "readChildDocs",
        "   Field": "childNames",
        "   Lines": [
            [
                907,
                907,
                null
            ],
            [
                878,
                878,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                873,
                873,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                889,
                889,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2695_0598498e",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field childNames in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.readChildDocs(String, String, int)",
        "  Method": "readChildDocs",
        "   Field": "childNames",
        "   Lines": [
            [
                912,
                912,
                null
            ],
            [
                907,
                907,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                949,
                949,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                923,
                923,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3549_9772f5b2",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field children in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.readChildren(DocumentNodeState, String, int)",
        "  Method": "readChildren",
        "   Field": "children",
        "   Lines": [
            [
                943,
                943,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3579_2565d74a",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field children in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getChildren(DocumentNodeState, String, int)",
        "  Method": "getChildren",
        "   Field": "children",
        "   Lines": [
            [
                888,
                888,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3579_2565d74a",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field children in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.readChildren(DocumentNodeState, String, int)",
        "  Method": "readChildren",
        "   Field": "children",
        "   Lines": [
            [
                946,
                946,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1516_7c62bd81",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndex",
        "     Cat": "STYLE",
        "  Abbrev": "PZLA",
        "    Type": "PZLA_PREFER_ZERO_LENGTH_ARRAYS",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Should org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndex.extractMatchingTokens(IndexReader, String) return a zero length array rather than null?",
        "  Method": "extractMatchingTokens",
        "   Field": "",
        "   Lines": [
            [
                732,
                732,
                null
            ],
            [
                748,
                748,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1729_7ba9dd66",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.NodeDocument",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field value in org.apache.jackrabbit.oak.plugins.document.NodeDocument.getLiveRevision(RevisionContext, Revision, Map)",
        "  Method": "getLiveRevision",
        "   Field": "value",
        "   Lines": [
            [
                806,
                806,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1770_192ee9e4",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.NodeDocument",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field value in org.apache.jackrabbit.oak.plugins.document.NodeDocument.getLiveRevision(RevisionContext, Revision, Map)",
        "  Method": "getLiveRevision",
        "   Field": "value",
        "   Lines": [
            [
                808,
                808,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1429_c2f5ca6c",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision) due to return value of called method",
        "  Method": "diffFewChildren",
        "   Field": "",
        "   Lines": [
            [
                1518,
                1518,
                "SOURCE_LINE_INVOKED"
            ],
            [
                1512,
                1512,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1429_c2f5ca6c",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision) due to return value of called method",
        "  Method": "diffFewChildren",
        "   Field": "",
        "   Lines": [
            [
                1519,
                1519,
                "SOURCE_LINE_INVOKED"
            ],
            [
                1513,
                1513,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1429_c2f5ca6c",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "3",
        "    Rank": "11",
        "     Msg": "Read of unwritten field children in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision)",
        "  Method": "diffFewChildren",
        "   Field": "children",
        "   Lines": [
            [
                1526,
                1526,
                null
            ],
            [
                1508,
                1508,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1429_c2f5ca6c",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "UL",
        "    Type": "UL_UNRELEASED_LOCK",
        "Priority": "1",
        "    Rank": "12",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.newMergeCommit(Revision, int) does not release lock on all paths",
        "  Method": "newMergeCommit",
        "   Field": "",
        "   Lines": [
            [
                473,
                473,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1662_3efb5cbf",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, String, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision) due to return value of called method",
        "  Method": "diffFewChildren",
        "   Field": "",
        "   Lines": [
            [
                1552,
                1552,
                "SOURCE_LINE_INVOKED"
            ],
            [
                1546,
                1546,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1662_3efb5cbf",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, String, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision) due to return value of called method",
        "  Method": "diffFewChildren",
        "   Field": "",
        "   Lines": [
            [
                1553,
                1553,
                "SOURCE_LINE_INVOKED"
            ],
            [
                1547,
                1547,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1662_3efb5cbf",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field children in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, String, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision)",
        "  Method": "diffFewChildren",
        "   Field": "children",
        "   Lines": [
            [
                1541,
                1541,
                null
            ],
            [
                1560,
                1560,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1662_3efb5cbf",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "UL",
        "    Type": "UL_UNRELEASED_LOCK",
        "Priority": "1",
        "    Rank": "12",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.newCommit(Revision) does not release lock on all paths",
        "  Method": "newCommit",
        "   Field": "",
        "   Lines": [
            [
                471,
                471,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1662_3efb5cbf",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "UL",
        "    Type": "UL_UNRELEASED_LOCK",
        "Priority": "1",
        "    Rank": "12",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.newMergeCommit(Revision, int) does not release lock on all paths",
        "  Method": "newMergeCommit",
        "   Field": "",
        "   Lines": [
            [
                500,
                500,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1761_f37ce716",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getDocumentStore() may expose internal representation by returning DocumentNodeStore.store",
        "  Method": "getDocumentStore",
        "   Field": "store",
        "   Lines": [
            [
                465,
                465,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1761_f37ce716",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "UL",
        "    Type": "UL_UNRELEASED_LOCK",
        "Priority": "1",
        "    Rank": "12",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.newCommit(Revision) does not release lock on all paths",
        "  Method": "newCommit",
        "   Field": "",
        "   Lines": [
            [
                495,
                495,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1779_9d36bede",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getDocumentStore() may expose internal representation by returning DocumentNodeStore.store",
        "  Method": "getDocumentStore",
        "   Field": "store",
        "   Lines": [
            [
                478,
                478,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2345_a0dc4c89",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getDocumentStore() may expose internal representation by returning DocumentNodeStore.store",
        "  Method": "getDocumentStore",
        "   Field": "store",
        "   Lines": [
            [
                496,
                496,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2363_90ea7aa5",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getDocumentStore() may expose internal representation by returning DocumentNodeStore.store",
        "  Method": "getDocumentStore",
        "   Field": "store",
        "   Lines": [
            [
                505,
                505,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2363_90ea7aa5",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, String, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision) due to return value of called method",
        "  Method": "diffFewChildren",
        "   Field": "",
        "   Lines": [
            [
                1793,
                1793,
                "SOURCE_LINE_INVOKED"
            ],
            [
                1787,
                1787,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2363_90ea7aa5",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, String, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision) due to return value of called method",
        "  Method": "diffFewChildren",
        "   Field": "",
        "   Lines": [
            [
                1794,
                1794,
                "SOURCE_LINE_INVOKED"
            ],
            [
                1788,
                1788,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2420_24cb1908",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getRevisionComparator() may expose internal representation by returning DocumentNodeStore.revisionComparator",
        "  Method": "getRevisionComparator",
        "   Field": "revisionComparator",
        "   Lines": [
            [
                1509,
                1509,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2420_24cb1908",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "JLM",
        "    Type": "JLM_JSR166_UTILCONCURRENT_MONITORENTER",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Synchronization performed on java.util.concurrent.atomic.AtomicBoolean in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.dispose()",
        "  Method": "dispose",
        "   Field": "isDisposed",
        "   Lines": [
            [
                474,
                474,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2642_36fe017c",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "JLM",
        "    Type": "JLM_JSR166_UTILCONCURRENT_MONITORENTER",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Synchronization performed on java.util.concurrent.atomic.AtomicBoolean in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.dispose()",
        "  Method": "dispose",
        "   Field": "isDisposed",
        "   Lines": [
            [
                464,
                464,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2695_0598498e",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getBranches() may expose internal representation by returning DocumentNodeStore.branches",
        "  Method": "getBranches",
        "   Field": "branches",
        "   Lines": [
            [
                1528,
                1528,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2695_0598498e",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getPendingModifications() may expose internal representation by returning DocumentNodeStore.unsavedLastRevisions",
        "  Method": "getPendingModifications",
        "   Field": "unsavedLastRevisions",
        "   Lines": [
            [
                1533,
                1533,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2695_0598498e",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getRevisionComparator() may expose internal representation by returning DocumentNodeStore.revisionComparator",
        "  Method": "getRevisionComparator",
        "   Field": "revisionComparator",
        "   Lines": [
            [
                1538,
                1538,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2695_0598498e",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "JLM",
        "    Type": "JLM_JSR166_UTILCONCURRENT_MONITORENTER",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Synchronization performed on java.util.concurrent.atomic.AtomicBoolean in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.dispose()",
        "  Method": "dispose",
        "   Field": "isDisposed",
        "   Lines": [
            [
                484,
                484,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3028_89317b28",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.checkpointInfo(String) due to return value of called method",
        "  Method": "checkpointInfo",
        "   Field": "",
        "   Lines": [
            [
                1558,
                1558,
                "SOURCE_LINE_DEREF"
            ],
            [
                1558,
                1558,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3549_9772f5b2",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "JLM",
        "    Type": "JLM_JSR166_UTILCONCURRENT_MONITORENTER",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Synchronization performed on java.util.concurrent.atomic.AtomicBoolean in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.dispose()",
        "  Method": "dispose",
        "   Field": "isDisposed",
        "   Lines": [
            [
                557,
                557,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3549_9772f5b2",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.checkpointInfo(String) due to return value of called method",
        "  Method": "checkpointInfo",
        "   Field": "",
        "   Lines": [
            [
                1555,
                1555,
                "SOURCE_LINE_DEREF"
            ],
            [
                1555,
                1555,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3579_2565d74a",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.checkpointInfo(String) due to return value of called method",
        "  Method": "checkpointInfo",
        "   Field": "",
        "   Lines": [
            [
                1558,
                1558,
                "SOURCE_LINE_DEREF"
            ],
            [
                1558,
                1558,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3903_690fb9f4",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getBranches() may expose internal representation by returning DocumentNodeStore.branches",
        "  Method": "getBranches",
        "   Field": "branches",
        "   Lines": [
            [
                1550,
                1550,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3903_690fb9f4",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getPendingModifications() may expose internal representation by returning DocumentNodeStore.unsavedLastRevisions",
        "  Method": "getPendingModifications",
        "   Field": "unsavedLastRevisions",
        "   Lines": [
            [
                1555,
                1555,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2691_d2da7499",
        "   Class": "org.apache.jackrabbit.oak.plugins.identifier.ClusterRepositoryInfo",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.identifier.ClusterRepositoryInfo.getId(NodeStore) due to return value of called method",
        "  Method": "getId",
        "   Field": "",
        "   Lines": [
            [
                61,
                61,
                "SOURCE_LINE_DEREF"
            ],
            [
                61,
                61,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-276_1bf5c550",
        "   Class": "org.apache.jackrabbit.mk.persistence.H2Persistence",
        "     Cat": "EXPERIMENTAL",
        "  Abbrev": "OBL",
        "    Type": "OBL_UNSATISFIED_OBLIGATION",
        "Priority": "2",
        "    Rank": "20",
        "     Msg": "org.apache.jackrabbit.mk.persistence.H2Persistence.initialize(File) may fail to clean up java.sql.Statement",
        "  Method": "initialize",
        "   Field": "",
        "   Lines": [
            [
                71,
                71,
                "SOURCE_LINE_OBLIGATION_CREATED"
            ],
            [
                72,
                72,
                "SOURCE_LINE_PATH_CONTINUES"
            ],
            [
                73,
                73,
                "SOURCE_LINE_PATH_CONTINUES"
            ],
            [
                74,
                74,
                "SOURCE_LINE_PATH_CONTINUES"
            ],
            [
                81,
                81,
                "SOURCE_LINE_PATH_CONTINUES"
            ],
            [
                82,
                82,
                "SOURCE_LINE_PATH_CONTINUES"
            ],
            [
                83,
                83,
                "SOURCE_LINE_PATH_CONTINUES"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-276_1bf5c550",
        "   Class": "org.apache.jackrabbit.mk.persistence.H2Persistence",
        "     Cat": "EXPERIMENTAL",
        "  Abbrev": "OBL",
        "    Type": "OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE",
        "Priority": "2",
        "    Rank": "20",
        "     Msg": "org.apache.jackrabbit.mk.persistence.H2Persistence.readHead() may fail to clean up java.sql.ResultSet on checked exception",
        "  Method": "readHead",
        "   Field": "",
        "   Lines": [
            [
                93,
                93,
                "SOURCE_LINE_OBLIGATION_CREATED"
            ],
            [
                94,
                94,
                "SOURCE_LINE_PATH_CONTINUES"
            ],
            [
                95,
                95,
                "SOURCE_LINE_PATH_CONTINUES"
            ],
            [
                101,
                101,
                "SOURCE_LINE_PATH_CONTINUES"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-276_1bf5c550",
        "   Class": "org.apache.jackrabbit.mk.persistence.H2Persistence",
        "     Cat": "EXPERIMENTAL",
        "  Abbrev": "OBL",
        "    Type": "OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE",
        "Priority": "2",
        "    Rank": "20",
        "     Msg": "org.apache.jackrabbit.mk.persistence.H2Persistence.readHead() may fail to clean up java.sql.Statement on checked exception",
        "  Method": "readHead",
        "   Field": "",
        "   Lines": [
            [
                92,
                92,
                "SOURCE_LINE_OBLIGATION_CREATED"
            ],
            [
                93,
                93,
                "SOURCE_LINE_PATH_CONTINUES"
            ],
            [
                94,
                94,
                "SOURCE_LINE_PATH_CONTINUES"
            ],
            [
                95,
                95,
                "SOURCE_LINE_PATH_CONTINUES"
            ],
            [
                101,
                101,
                "SOURCE_LINE_PATH_CONTINUES"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-276_1bf5c550",
        "   Class": "org.apache.jackrabbit.mk.persistence.H2Persistence",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "ODR",
        "    Type": "ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH",
        "Priority": "3",
        "    Rank": "19",
        "     Msg": "org.apache.jackrabbit.mk.persistence.H2Persistence.readHead() may fail to close database resource on exception",
        "  Method": "readHead",
        "   Field": "",
        "   Lines": [
            [
                92,
                92,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-278_db19e70f",
        "   Class": "org.apache.jackrabbit.oak.core.TreeImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.core.TreeImpl.remove() may expose internal representation by storing an externally mutable object into TreeImpl.parent",
        "  Method": "remove",
        "   Field": "parent",
        "   Lines": [
            [
                257,
                257,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2999_3bf07779",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexEditor",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_PARAM_DEREF",
        "Priority": "1",
        "    Rank": "6",
        "     Msg": "Null passed for non-null parameter of org.apache.jackrabbit.oak.spi.state.NodeState.hasProperty(String) in org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexEditor.isPropertyNull(NodeState, PropertyDefinition)",
        "  Method": "isPropertyNull",
        "   Field": "nonRelativeName",
        "   Lines": [
            [
                595,
                595,
                "SOURCE_LINE_INVOKED"
            ],
            [
                595,
                595,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3020_147515ae",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexEditor",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_PARAM_DEREF",
        "Priority": "1",
        "    Rank": "6",
        "     Msg": "Null passed for non-null parameter of org.apache.jackrabbit.oak.spi.state.NodeState.hasProperty(String) in org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexEditor.isPropertyNotNull(NodeState, PropertyDefinition)",
        "  Method": "isPropertyNotNull",
        "   Field": "nonRelativeName",
        "   Lines": [
            [
                603,
                603,
                "SOURCE_LINE_INVOKED"
            ],
            [
                603,
                603,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1662_3efb5cbf",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diff(String, String, String) where default case is missing",
        "  Method": "diff",
        "   Field": "",
        "   Lines": [
            [
                1173,
                1187,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3549_9772f5b2",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field childNames in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.applyChanges(Revision, String, boolean, List, List, List, DiffCache$Entry)",
        "  Method": "applyChanges",
        "   Field": "childNames",
        "   Lines": [
            [
                1153,
                1153,
                null
            ],
            [
                1177,
                1177,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1770_192ee9e4",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.NodeDocument",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field data in org.apache.jackrabbit.oak.plugins.document.NodeDocument.referencesOldDocAfterSplit(NodeDocument, NodeDocument)",
        "  Method": "referencesOldDocAfterSplit",
        "   Field": "data",
        "   Lines": [
            [
                1378,
                1378,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3110_d10362c0",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.lucene.IndexCopier",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "JLM",
        "    Type": "JLM_JSR166_UTILCONCURRENT_MONITORENTER",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Synchronization performed on java.util.concurrent.atomic.AtomicInteger in org.apache.jackrabbit.oak.plugins.index.lucene.IndexCopier.updateMaxInProgress(int)",
        "  Method": "updateMaxInProgress",
        "   Field": "maxCopyInProgressCount",
        "   Lines": [
            [
                1036,
                1036,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3123_f3c9c818",
        "   Class": "org.apache.jackrabbit.oak.plugins.segment.RecordIdMap",
        "     Cat": "STYLE",
        "  Abbrev": "UwF",
        "    Type": "UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "RecordIdMap.keys not initialized in constructor and dereferenced in org.apache.jackrabbit.oak.plugins.segment.RecordIdMap.getKey(int)",
        "  Method": "getKey",
        "   Field": "keys",
        "   Lines": [
            [
                110,
                110,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3123_f3c9c818",
        "   Class": "org.apache.jackrabbit.oak.plugins.segment.RecordIdMap",
        "     Cat": "STYLE",
        "  Abbrev": "UwF",
        "    Type": "UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "RecordIdMap.values not initialized in constructor and dereferenced in org.apache.jackrabbit.oak.plugins.segment.RecordIdMap.getRecordId(int)",
        "  Method": "getRecordId",
        "   Field": "values",
        "   Lines": [
            [
                121,
                121,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1719_c3773d53",
        "   Class": "org.apache.jackrabbit.oak.upgrade.RepositoryUpgrade",
        "     Cat": "STYLE",
        "  Abbrev": "UCF",
        "    Type": "UCF_USELESS_CONTROL_FLOW",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Useless control flow in org.apache.jackrabbit.oak.upgrade.RepositoryUpgrade.copyPropertyDefinition(QPropertyDefinition, NodeBuilder)",
        "  Method": "copyPropertyDefinition",
        "   Field": "",
        "   Lines": [
            [
                489,
                489,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3424_f4349a96",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.ClusterNodeInfo",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "IS",
        "    Type": "IS2_INCONSISTENT_SYNC",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Inconsistent synchronization of org.apache.jackrabbit.oak.plugins.document.ClusterNodeInfo.leaseCheckFailed; locked 83% of time",
        "  Method": "",
        "   Field": "leaseCheckFailed",
        "   Lines": [
            [
                517,
                517,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                649,
                649,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                692,
                692,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                698,
                698,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                740,
                740,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                541,
                541,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                583,
                583,
                "SOURCE_LINE_SYNC_ACCESS"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3424_f4349a96",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.ClusterNodeInfo",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_LOAD_OF_KNOWN_NULL_VALUE",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Load of known null value in org.apache.jackrabbit.oak.plugins.document.ClusterNodeInfo.createInstance(DocumentStore, String, String, int)",
        "  Method": "createInstance",
        "   Field": "",
        "   Lines": [
            [
                463,
                463,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3424_f4349a96",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.ClusterNodeInfo",
        "     Cat": "STYLE",
        "  Abbrev": "RCN",
        "    Type": "RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "Redundant nullcheck of leaseEnd which is known to be null in org.apache.jackrabbit.oak.plugins.document.ClusterNodeInfo.createInstance(DocumentStore, String, String, int)",
        "  Method": "createInstance",
        "   Field": "",
        "   Lines": [
            [
                463,
                463,
                "SOURCE_REDUNDANT_NULL_CHECK"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1429_c2f5ca6c",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getClusterInfo() may expose internal representation by returning DocumentNodeStore.clusterNodeInfo",
        "  Method": "getClusterInfo",
        "   Field": "clusterNodeInfo",
        "   Lines": [
            [
                512,
                512,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1761_f37ce716",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "UL",
        "    Type": "UL_UNRELEASED_LOCK",
        "Priority": "1",
        "    Rank": "12",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.newCommit(Revision) does not release lock on all paths",
        "  Method": "newCommit",
        "   Field": "",
        "   Lines": [
            [
                495,
                495,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2311_ca85ecce",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getBlobStore() may expose internal representation by returning DocumentNodeStore.blobStore",
        "  Method": "getBlobStore",
        "   Field": "blobStore",
        "   Lines": [
            [
                1904,
                1904,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2345_a0dc4c89",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getDocumentStore() may expose internal representation by returning DocumentNodeStore.store",
        "  Method": "getDocumentStore",
        "   Field": "store",
        "   Lines": [
            [
                496,
                496,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2363_90ea7aa5",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getBlobStore() may expose internal representation by returning DocumentNodeStore.blobStore",
        "  Method": "getBlobStore",
        "   Field": "blobStore",
        "   Lines": [
            [
                2034,
                2034,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2363_90ea7aa5",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getDocumentStore() may expose internal representation by returning DocumentNodeStore.store",
        "  Method": "getDocumentStore",
        "   Field": "store",
        "   Lines": [
            [
                505,
                505,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2363_90ea7aa5",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, String, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision) due to return value of called method",
        "  Method": "diffFewChildren",
        "   Field": "",
        "   Lines": [
            [
                1793,
                1793,
                "SOURCE_LINE_INVOKED"
            ],
            [
                1787,
                1787,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2363_90ea7aa5",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, String, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision) due to return value of called method",
        "  Method": "diffFewChildren",
        "   Field": "",
        "   Lines": [
            [
                1794,
                1794,
                "SOURCE_LINE_INVOKED"
            ],
            [
                1788,
                1788,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2363_90ea7aa5",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field children in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, String, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision)",
        "  Method": "diffFewChildren",
        "   Field": "children",
        "   Lines": [
            [
                1782,
                1782,
                null
            ],
            [
                1801,
                1801,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2420_24cb1908",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, String, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision) due to return value of called method",
        "  Method": "diffFewChildren",
        "   Field": "",
        "   Lines": [
            [
                2083,
                2083,
                "SOURCE_LINE_INVOKED"
            ],
            [
                2077,
                2077,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2420_24cb1908",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, String, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision) due to return value of called method",
        "  Method": "diffFewChildren",
        "   Field": "",
        "   Lines": [
            [
                2084,
                2084,
                "SOURCE_LINE_INVOKED"
            ],
            [
                2078,
                2078,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2420_24cb1908",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field children in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, String, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision)",
        "  Method": "diffFewChildren",
        "   Field": "children",
        "   Lines": [
            [
                2072,
                2072,
                null
            ],
            [
                2091,
                2091,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2642_36fe017c",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getDocumentStore() may expose internal representation by returning DocumentNodeStore.store",
        "  Method": "getDocumentStore",
        "   Field": "store",
        "   Lines": [
            [
                510,
                510,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2642_36fe017c",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, String, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision) due to return value of called method",
        "  Method": "diffFewChildren",
        "   Field": "",
        "   Lines": [
            [
                2037,
                2037,
                "SOURCE_LINE_INVOKED"
            ],
            [
                2031,
                2031,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2642_36fe017c",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, String, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision) due to return value of called method",
        "  Method": "diffFewChildren",
        "   Field": "",
        "   Lines": [
            [
                2038,
                2038,
                "SOURCE_LINE_INVOKED"
            ],
            [
                2032,
                2032,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2642_36fe017c",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field children in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diffFewChildren(JsopWriter, String, DocumentNodeState$Children, Revision, DocumentNodeState$Children, Revision)",
        "  Method": "diffFewChildren",
        "   Field": "children",
        "   Lines": [
            [
                2026,
                2026,
                null
            ],
            [
                2045,
                2045,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3579_2565d74a",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getBlobStore() may expose internal representation by returning DocumentNodeStore.blobStore",
        "  Method": "getBlobStore",
        "   Field": "blobStore",
        "   Lines": [
            [
                2654,
                2654,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1822_016df669",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore.createQueryForUpdate(UpdateOp, boolean) where default case is missing",
        "  Method": "createQueryForUpdate",
        "   Field": "",
        "   Lines": [
            [
                947,
                950,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1822_3e83a4c1",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.jackrabbit.oak.plugins.document.mongo.MongoDocumentStore.createQueryForUpdate(UpdateOp, boolean) where default case is missing",
        "  Method": "createQueryForUpdate",
        "   Field": "",
        "   Lines": [
            [
                947,
                950,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3634_90ad50da",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.rdb.RDBDocumentStore",
        "     Cat": "STYLE",
        "  Abbrev": "BC",
        "    Type": "BC_UNCONFIRMED_CAST_OF_RETURN_VALUE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Unchecked/unconfirmed cast from org.apache.jackrabbit.oak.plugins.document.Document to org.apache.jackrabbit.oak.plugins.document.NodeDocument of return value in org.apache.jackrabbit.oak.plugins.document.rdb.RDBDocumentStore.internalUpdate(Collection, List, UpdateOp)",
        "  Method": "internalUpdate",
        "   Field": "",
        "   Lines": [
            [
                1301,
                1301,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3634_90ad50da",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.rdb.RDBDocumentStore",
        "     Cat": "STYLE",
        "  Abbrev": "BC",
        "    Type": "BC_UNCONFIRMED_CAST_OF_RETURN_VALUE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Unchecked/unconfirmed cast from org.apache.jackrabbit.oak.plugins.document.Document to org.apache.jackrabbit.oak.plugins.document.NodeDocument of return value in org.apache.jackrabbit.oak.plugins.document.rdb.RDBDocumentStore.internalUpdate(Collection, List, UpdateOp)",
        "  Method": "internalUpdate",
        "   Field": "",
        "   Lines": [
            [
                1301,
                1301,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-185_7fe28a0e",
        "   Class": "org.apache.jackrabbit.oak.jcr.NodeDelegate",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "GC",
        "    Type": "GC_UNRELATED_TYPES",
        "Priority": "1",
        "    Rank": "1",
        "     Msg": "org.apache.jackrabbit.oak.api.PropertyState is incompatible with expected argument type String in org.apache.jackrabbit.oak.jcr.NodeDelegate.orderBefore(String, String)",
        "  Method": "orderBefore",
        "   Field": "",
        "   Lines": [
            [
                259,
                259,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3872_c13708e3",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.rdb.RDBBlobStore",
        "     Cat": "SECURITY",
        "  Abbrev": "SQL",
        "    Type": "SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING",
        "Priority": "3",
        "    Rank": "15",
        "     Msg": "A prepared statement is generated from a nonconstant String in org.apache.jackrabbit.oak.plugins.document.rdb.RDBBlobStore.countDeleteChunks(List, long)",
        "  Method": "countDeleteChunks",
        "   Field": "",
        "   Lines": [
            [
                513,
                513,
                null
            ],
            [
                514,
                514,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1429_c2f5ca6c",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getRevisionComparator() may expose internal representation by returning DocumentNodeStore.revisionComparator",
        "  Method": "getRevisionComparator",
        "   Field": "revisionComparator",
        "   Lines": [
            [
                1254,
                1254,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1662_3efb5cbf",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getBranches() may expose internal representation by returning DocumentNodeStore.branches",
        "  Method": "getBranches",
        "   Field": "branches",
        "   Lines": [
            [
                1277,
                1277,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1662_3efb5cbf",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getPendingModifications() may expose internal representation by returning DocumentNodeStore.unsavedLastRevisions",
        "  Method": "getPendingModifications",
        "   Field": "unsavedLastRevisions",
        "   Lines": [
            [
                1282,
                1282,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1662_3efb5cbf",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getRevisionComparator() may expose internal representation by returning DocumentNodeStore.revisionComparator",
        "  Method": "getRevisionComparator",
        "   Field": "revisionComparator",
        "   Lines": [
            [
                1287,
                1287,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1761_f37ce716",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getBranches() may expose internal representation by returning DocumentNodeStore.branches",
        "  Method": "getBranches",
        "   Field": "branches",
        "   Lines": [
            [
                1306,
                1306,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1761_f37ce716",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.getRevisionComparator() may expose internal representation by returning DocumentNodeStore.revisionComparator",
        "  Method": "getRevisionComparator",
        "   Field": "revisionComparator",
        "   Lines": [
            [
                1316,
                1316,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2311_ca85ecce",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diff(String, String, String) where default case is missing",
        "  Method": "diff",
        "   Field": "",
        "   Lines": [
            [
                1277,
                1291,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2345_a0dc4c89",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diff(String, String, String) where default case is missing",
        "  Method": "diff",
        "   Field": "",
        "   Lines": [
            [
                1252,
                1266,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2363_90ea7aa5",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diff(String, String, String) where default case is missing",
        "  Method": "diff",
        "   Field": "",
        "   Lines": [
            [
                1267,
                1281,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2420_24cb1908",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.compare(DocumentNodeState, DocumentNodeState, NodeStateDiff) due to return value of called method",
        "  Method": "compare",
        "   Field": "",
        "   Lines": [
            [
                1307,
                1307,
                "SOURCE_LINE_INVOKED"
            ],
            [
                1298,
                1298,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2642_36fe017c",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.compare(DocumentNodeState, DocumentNodeState, NodeStateDiff) due to return value of called method",
        "  Method": "compare",
        "   Field": "",
        "   Lines": [
            [
                1288,
                1288,
                "SOURCE_LINE_INVOKED"
            ],
            [
                1279,
                1279,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3897_94c6c575",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.reset(RevisionVector, RevisionVector, DocumentNodeStoreBranch) due to return value of called method",
        "  Method": "reset",
        "   Field": "",
        "   Lines": [
            [
                1283,
                1283,
                "SOURCE_LINE_DEREF"
            ],
            [
                1283,
                1283,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3903_690fb9f4",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.reset(RevisionVector, RevisionVector) due to return value of called method",
        "  Method": "reset",
        "   Field": "",
        "   Lines": [
            [
                1289,
                1289,
                "SOURCE_LINE_DEREF"
            ],
            [
                1288,
                1288,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1662_3efb5cbf",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diff(String, String, String) where default case is missing",
        "  Method": "diff",
        "   Field": "",
        "   Lines": [
            [
                1173,
                1187,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1761_f37ce716",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diff(String, String, String) where default case is missing",
        "  Method": "diff",
        "   Field": "",
        "   Lines": [
            [
                1202,
                1216,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1779_9d36bede",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.diff(String, String, String) where default case is missing",
        "  Method": "diff",
        "   Field": "",
        "   Lines": [
            [
                1228,
                1242,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3433_b76b31f7",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field childNames in org.apache.jackrabbit.oak.plugins.document.DocumentNodeStore.applyChanges(Revision, String, boolean, List, List, List, DiffCache$Entry)",
        "  Method": "applyChanges",
        "   Field": "childNames",
        "   Lines": [
            [
                1165,
                1165,
                null
            ],
            [
                1189,
                1189,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3930_b939aa6e",
        "   Class": "org.apache.jackrabbit.oak.jcr.xml.SysViewImportHandler",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field props in org.apache.jackrabbit.oak.jcr.xml.SysViewImportHandler.endElement(String, String, String)",
        "  Method": "endElement",
        "   Field": "props",
        "   Lines": [
            [
                281,
                281,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-4038_557eec4f",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.property.PropertyIndexPlan",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "UrF",
        "    Type": "URF_UNREAD_FIELD",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Unread field: org.apache.jackrabbit.oak.plugins.index.property.PropertyIndexPlan.root",
        "  Method": "",
        "   Field": "root",
        "   Lines": [
            [
                101,
                101,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-4066_9a109aa3",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexEditorContext",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.index.lucene.LuceneIndexEditorContext.updateSuggester(Analyzer) due to return value of called method",
        "  Method": "updateSuggester",
        "   Field": "",
        "   Lines": [
            [
                290,
                290,
                "SOURCE_LINE_DEREF"
            ],
            [
                289,
                289,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2288_57bd2dc5",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.NodeDocument",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field revision in org.apache.jackrabbit.oak.plugins.document.NodeDocument.getNodeAtRevision(DocumentNodeStore, Revision, Revision)",
        "  Method": "getNodeAtRevision",
        "   Field": "revision",
        "   Lines": [
            [
                771,
                771,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2308_f4d5bbe1",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.NodeDocument",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field revision in org.apache.jackrabbit.oak.plugins.document.NodeDocument.getNodeAtRevision(DocumentNodeStore, Revision, Revision)",
        "  Method": "getNodeAtRevision",
        "   Field": "revision",
        "   Lines": [
            [
                771,
                771,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2336_d0f6715d",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.NodeDocument",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field revision in org.apache.jackrabbit.oak.plugins.document.NodeDocument.getNodeAtRevision(DocumentNodeStore, Revision, Revision)",
        "  Method": "getNodeAtRevision",
        "   Field": "revision",
        "   Lines": [
            [
                778,
                778,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-3474_ff81ef72",
        "   Class": "org.apache.jackrabbit.oak.plugins.document.NodeDocument",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field data in org.apache.jackrabbit.oak.plugins.document.NodeDocument.getLocalMap(String)",
        "  Method": "getLocalMap",
        "   Field": "data",
        "   Lines": [
            [
                1548,
                1548,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1308_69ba2a54",
        "   Class": "org.apache.jackrabbit.oak.query.xpath.XPathToSQL2Converter",
        "     Cat": "STYLE",
        "  Abbrev": "UC",
        "    Type": "UC_USELESS_CONDITION",
        "Priority": "3",
        "    Rank": "19",
        "     Msg": "Useless condition: it's known that this.currentSelector.isChild == true at this point",
        "  Method": "convert",
        "   Field": "",
        "   Lines": [
            [
                231,
                231,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1369_ce0b0955",
        "   Class": "org.apache.jackrabbit.oak.query.xpath.XPathToSQL2Converter",
        "     Cat": "STYLE",
        "  Abbrev": "UC",
        "    Type": "UC_USELESS_CONDITION",
        "Priority": "3",
        "    Rank": "19",
        "     Msg": "Useless condition: it's known that this.currentSelector.isChild == true at this point",
        "  Method": "convert",
        "   Field": "",
        "   Lines": [
            [
                231,
                231,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-2864_f51ea2a2",
        "   Class": "org.apache.jackrabbit.oak.query.xpath.XPathToSQL2Converter",
        "     Cat": "STYLE",
        "  Abbrev": "UC",
        "    Type": "UC_USELESS_CONDITION",
        "Priority": "3",
        "    Rank": "19",
        "     Msg": "Useless condition: it's known that this.currentSelector.isChild == true at this point",
        "  Method": "convert",
        "   Field": "",
        "   Lines": [
            [
                241,
                241,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-43_668f08f2",
        "   Class": "org.apache.jackrabbit.mk.core.MicroKernelImpl",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_FIELD",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Read of unwritten field props in org.apache.jackrabbit.mk.core.MicroKernelImpl.addNode(LinkedList, String, String, JsopTokenizer)",
        "  Method": "addNode",
        "   Field": "props",
        "   Lines": [
            [
                652,
                652,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-447_00df38d2",
        "   Class": "org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to nodes in org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder.isModified()",
        "  Method": "isModified",
        "   Field": "",
        "   Lines": [
            [
                275,
                275,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-47_b62f1c26",
        "   Class": "org.apache.jackrabbit.mk.simple.SimpleKernelImpl",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.jackrabbit.mk.simple.SimpleKernelImpl implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                67,
                559,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1168_c05cec12",
        "   Class": "org.apache.jackrabbit.oak.namepath.NamePathMapperImpl",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.jackrabbit.oak.namepath.NamePathMapperImpl.needsFullMapping(String) where default case is missing",
        "  Method": "needsFullMapping",
        "   Field": "",
        "   Lines": [
            [
                241,
                251,
                null
            ],
            [
                256,
                280,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-499_61381ea2",
        "   Class": "org.apache.jackrabbit.oak.query.SQL2Parser",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_FALLTHROUGH",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Switch statement found in org.apache.jackrabbit.oak.query.SQL2Parser.read() where one case falls through to the next case",
        "  Method": "read",
        "   Field": "",
        "   Lines": [
            [
                924,
                928,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-509_b896c926",
        "   Class": "org.apache.jackrabbit.oak.namepath.LocalNameMapper",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_METHOD_RETURN_RELAXING_ANNOTATION",
        "Priority": "1",
        "    Rank": "16",
        "     Msg": "Method org.apache.jackrabbit.oak.namepath.LocalNameMapper.getJcrName(String) overrides the return value nullness annotation in an incompatible way.",
        "  Method": "getJcrName",
        "   Field": "",
        "   Lines": [
            [
                42,
                81,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-520_ec961a38",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.p2.strategy.ContentMirrorStoreStrategy",
        "     Cat": "STYLE",
        "  Abbrev": "UC",
        "    Type": "UC_USELESS_OBJECT",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Useless object stored in variable parentQueue of method org.apache.jackrabbit.oak.plugins.index.p2.strategy.ContentMirrorStoreStrategy.remove(NodeBuilder, String, Iterable)",
        "  Method": "remove",
        "   Field": "",
        "   Lines": [
            [
                41,
                41,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-748_503451c1",
        "   Class": "org.apache.jackrabbit.oak.plugins.index.p2.strategy.ContentMirrorStoreStrategy",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "WMI",
        "    Type": "WMI_WRONG_MAP_ITERATOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.index.p2.strategy.ContentMirrorStoreStrategy.remove(NodeBuilder, String, Iterable) makes inefficient use of keySet iterator instead of entrySet iterator",
        "  Method": "remove",
        "   Field": "",
        "   Lines": [
            [
                92,
                92,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-579_7d72e6ed",
        "   Class": "org.apache.jackrabbit.oak.query.ast.ChildNodeJoinConditionImpl",
        "     Cat": "STYLE",
        "  Abbrev": "UwF",
        "    Type": "UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "ChildNodeJoinConditionImpl.childSelector not initialized in constructor and dereferenced in org.apache.jackrabbit.oak.query.ast.ChildNodeJoinConditionImpl.restrict(FilterImpl)",
        "  Method": "restrict",
        "   Field": "childSelector",
        "   Lines": [
            [
                68,
                68,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-579_7d72e6ed",
        "   Class": "org.apache.jackrabbit.oak.query.ast.ChildNodeJoinConditionImpl",
        "     Cat": "STYLE",
        "  Abbrev": "UwF",
        "    Type": "UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "ChildNodeJoinConditionImpl.parentSelector not initialized in constructor and dereferenced in org.apache.jackrabbit.oak.query.ast.ChildNodeJoinConditionImpl.restrict(FilterImpl)",
        "  Method": "restrict",
        "   Field": "parentSelector",
        "   Lines": [
            [
                74,
                74,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-579_7d72e6ed",
        "   Class": "org.apache.jackrabbit.oak.query.ast.DescendantNodeJoinConditionImpl",
        "     Cat": "STYLE",
        "  Abbrev": "UwF",
        "    Type": "UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "DescendantNodeJoinConditionImpl.ancestorSelector not initialized in constructor and dereferenced in org.apache.jackrabbit.oak.query.ast.DescendantNodeJoinConditionImpl.restrict(FilterImpl)",
        "  Method": "restrict",
        "   Field": "ancestorSelector",
        "   Lines": [
            [
                74,
                74,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-579_7d72e6ed",
        "   Class": "org.apache.jackrabbit.oak.query.ast.DescendantNodeJoinConditionImpl",
        "     Cat": "STYLE",
        "  Abbrev": "UwF",
        "    Type": "UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "DescendantNodeJoinConditionImpl.descendantSelector not initialized in constructor and dereferenced in org.apache.jackrabbit.oak.query.ast.DescendantNodeJoinConditionImpl.restrict(FilterImpl)",
        "  Method": "restrict",
        "   Field": "descendantSelector",
        "   Lines": [
            [
                68,
                68,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-579_7d72e6ed",
        "   Class": "org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl",
        "     Cat": "STYLE",
        "  Abbrev": "UwF",
        "    Type": "UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "EquiJoinConditionImpl.selector1 not initialized in constructor and dereferenced in org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl.restrict(FilterImpl)",
        "  Method": "restrict",
        "   Field": "selector1",
        "   Lines": [
            [
                108,
                108,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-579_7d72e6ed",
        "   Class": "org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl",
        "     Cat": "STYLE",
        "  Abbrev": "UwF",
        "    Type": "UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "EquiJoinConditionImpl.selector2 not initialized in constructor and dereferenced in org.apache.jackrabbit.oak.query.ast.EquiJoinConditionImpl.restrict(FilterImpl)",
        "  Method": "restrict",
        "   Field": "selector2",
        "   Lines": [
            [
                99,
                99,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-579_7d72e6ed",
        "   Class": "org.apache.jackrabbit.oak.query.ast.SameNodeJoinConditionImpl",
        "     Cat": "STYLE",
        "  Abbrev": "UwF",
        "    Type": "UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "SameNodeJoinConditionImpl.selector2 not initialized in constructor and dereferenced in org.apache.jackrabbit.oak.query.ast.SameNodeJoinConditionImpl.restrict(FilterImpl)",
        "  Method": "restrict",
        "   Field": "selector2",
        "   Lines": [
            [
                83,
                83,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-579_7d72e6ed",
        "   Class": "org.apache.jackrabbit.oak.query.ast.SelectorImpl",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field query in org.apache.jackrabbit.oak.query.ast.SelectorImpl.prepare()",
        "  Method": "prepare",
        "   Field": "query",
        "   Lines": [
            [
                109,
                109,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-579_7d72e6ed",
        "   Class": "org.apache.jackrabbit.oak.query.ast.SelectorImpl",
        "     Cat": "STYLE",
        "  Abbrev": "UwF",
        "    Type": "UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "SelectorImpl.index not initialized in constructor and dereferenced in org.apache.jackrabbit.oak.query.ast.SelectorImpl.execute(NodeState)",
        "  Method": "execute",
        "   Field": "index",
        "   Lines": [
            [
                114,
                114,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-579_7d72e6ed",
        "   Class": "org.apache.jackrabbit.oak.query.ast.SelectorImpl",
        "     Cat": "STYLE",
        "  Abbrev": "UwF",
        "    Type": "UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "SelectorImpl.index not initialized in constructor and dereferenced in org.apache.jackrabbit.oak.query.ast.SelectorImpl.getPlan(NodeState)",
        "  Method": "getPlan",
        "   Field": "index",
        "   Lines": [
            [
                121,
                121,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1075_79467350",
        "   Class": "org.apache.jackrabbit.oak.query.index.FilterImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.jackrabbit.oak.query.index.FilterImpl(SelectorImpl, String) may expose internal representation by storing an externally mutable object into FilterImpl.selector",
        "  Method": "<init>",
        "   Field": "selector",
        "   Lines": [
            [
                97,
                97,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1108_a8c925e0",
        "   Class": "org.apache.jackrabbit.oak.query.index.FilterImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.jackrabbit.oak.query.index.FilterImpl(SelectorImpl, String) may expose internal representation by storing an externally mutable object into FilterImpl.selector",
        "  Method": "<init>",
        "   Field": "selector",
        "   Lines": [
            [
                97,
                97,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-579_7d72e6ed",
        "   Class": "org.apache.jackrabbit.oak.query.index.FilterImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.jackrabbit.oak.query.index.FilterImpl(SelectorImpl, String) may expose internal representation by storing an externally mutable object into FilterImpl.selector",
        "  Method": "<init>",
        "   Field": "selector",
        "   Lines": [
            [
                82,
                82,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-621_00b4b8a0",
        "   Class": "org.apache.jackrabbit.oak.core.TreeImpl",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "IS",
        "    Type": "IS2_INCONSISTENT_SYNC",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Inconsistent synchronization of org.apache.jackrabbit.oak.core.TreeImpl.nodeBuilder; locked 50% of time",
        "  Method": "",
        "   Field": "nodeBuilder",
        "   Lines": [
            [
                216,
                216,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                219,
                219,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                423,
                423,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                426,
                426,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                424,
                424,
                "SOURCE_LINE_SYNC_ACCESS"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-448_999097e1",
        "   Class": "org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE",
        "Priority": "2",
        "    Rank": "13",
        "     Msg": "Possible null pointer dereference in org.apache.jackrabbit.oak.plugins.memory.MemoryNodeBuilder.isNew(String) due to return value of called method",
        "  Method": "isNew",
        "   Field": "",
        "   Lines": [
            [
                257,
                257,
                "SOURCE_LINE_DEREF"
            ],
            [
                257,
                257,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-846_7acb091a",
        "   Class": "org.apache.jackrabbit.mongomk.Commit",
        "     Cat": "STYLE",
        "  Abbrev": "UCF",
        "    Type": "UCF_USELESS_CONTROL_FLOW",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Useless control flow in org.apache.jackrabbit.mongomk.Commit.createOrUpdateNode(DocumentStore, UpdateOp)",
        "  Method": "createOrUpdateNode",
        "   Field": "",
        "   Lines": [
            [
                311,
                311,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-1186_52372042",
        "   Class": "org.apache.jackrabbit.oak.plugins.mongomk.NodeDocument",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "WMI",
        "    Type": "WMI_WRONG_MAP_ITERATOR",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.plugins.mongomk.NodeDocument.split(RevisionContext) makes inefficient use of keySet iterator instead of entrySet iterator",
        "  Method": "split",
        "   Field": "",
        "   Lines": [
            [
                682,
                682,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-278_db19e70f",
        "   Class": "org.apache.jackrabbit.oak.core.TreeImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.core.TreeImpl.remove() may expose internal representation by storing an externally mutable object into TreeImpl.parent",
        "  Method": "remove",
        "   Field": "parent",
        "   Lines": [
            [
                257,
                257,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-278_db19e70f",
        "   Class": "org.apache.jackrabbit.oak.core.TreeImpl",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "IS",
        "    Type": "IS2_INCONSISTENT_SYNC",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Inconsistent synchronization of org.apache.jackrabbit.oak.core.TreeImpl.nodeBuilder; locked 75% of time",
        "  Method": "",
        "   Field": "nodeBuilder",
        "   Lines": [
            [
                301,
                301,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                324,
                324,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                328,
                328,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                325,
                325,
                "SOURCE_LINE_SYNC_ACCESS"
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-93_0be7e8f0",
        "   Class": "org.apache.jackrabbit.oak.core.TreeImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.core.TreeImpl.getParent() may expose internal representation by returning TreeImpl.parent",
        "  Method": "getParent",
        "   Field": "parent",
        "   Lines": [
            [
                163,
                163,
                null
            ]
        ]
    },
    {
        "    Proj": "jackrabbit-oak_bugs-dot-jar_OAK-93_0be7e8f0",
        "   Class": "org.apache.jackrabbit.oak.core.TreeImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.jackrabbit.oak.core.TreeImpl.move(TreeImpl, String) may expose internal representation by storing an externally mutable object into TreeImpl.parent",
        "  Method": "move",
        "   Field": "parent",
        "   Lines": [
            [
                383,
                383,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-102_7f391872",
        "   Class": "org.apache.logging.log4j.core.net.Priority",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "BSHIFT",
        "    Type": "BSHIFT_WRONG_ADD_PRIORITY",
        "Priority": "3",
        "    Rank": "15",
        "     Msg": "Possible bad parsing of shift operation in org.apache.logging.log4j.core.net.Priority.getPriority(Facility, Level)",
        "  Method": "getPriority",
        "   Field": "",
        "   Lines": [
            [
                46,
                46,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-139_50e19247",
        "   Class": "org.apache.logging.log4j.core.appender.SocketAppender",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to prot in org.apache.logging.log4j.core.appender.SocketAppender.createAppender(String, String, String, String, String, String, String, String, Layout, Filter, String, Configuration)",
        "  Method": "createAppender",
        "   Field": "",
        "   Lines": [
            [
                118,
                118,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-1008_0c20bfd8",
        "   Class": "org.apache.logging.log4j.core.config.plugins.util.ResolverUtil",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.logging.log4j.core.config.plugins.util.ResolverUtil.getClasses() may expose internal representation by returning ResolverUtil.classMatches",
        "  Method": "getClasses",
        "   Field": "classMatches",
        "   Lines": [
            [
                103,
                103,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-1008_0c20bfd8",
        "   Class": "org.apache.logging.log4j.core.config.plugins.util.ResolverUtil",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.logging.log4j.core.config.plugins.util.ResolverUtil.setClassLoader(ClassLoader) may expose internal representation by storing an externally mutable object into ResolverUtil.classloader",
        "  Method": "setClassLoader",
        "   Field": "classloader",
        "   Lines": [
            [
                131,
                131,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-102_7f391872",
        "   Class": "org.apache.logging.log4j.core.net.Priority",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "BSHIFT",
        "    Type": "BSHIFT_WRONG_ADD_PRIORITY",
        "Priority": "3",
        "    Rank": "15",
        "     Msg": "Possible bad parsing of shift operation in org.apache.logging.log4j.core.net.Priority.getPriority(Facility, Level)",
        "  Method": "getPriority",
        "   Field": "",
        "   Lines": [
            [
                46,
                46,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-832_411dad65",
        "   Class": "org.apache.logging.log4j.core.impl.ThrowableProxy",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.logging.log4j.core.impl.ThrowableProxy(Throwable) may expose internal representation by storing an externally mutable object into ThrowableProxy.throwable",
        "  Method": "<init>",
        "   Field": "throwable",
        "   Lines": [
            [
                140,
                140,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-1069_e9b628ec",
        "   Class": "org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.logging.log4j.core.net.server.JsonInputStreamLogEventBridge.getEventIndices(String, int) where default case is missing",
        "  Method": "getEventIndices",
        "   Field": "",
        "   Lines": [
            [
                60,
                75,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-114_afcf92eb",
        "   Class": "org.apache.logging.log4j.message.StructuredDataMessage",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.logging.log4j.message.StructuredDataMessage implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                55,
                357,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-139_50e19247",
        "   Class": "org.apache.logging.log4j.core.appender.SocketAppender",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to prot in org.apache.logging.log4j.core.appender.SocketAppender.createAppender(String, String, String, String, String, String, String, String, Layout, Filter, String, Configuration)",
        "  Method": "createAppender",
        "   Field": "",
        "   Lines": [
            [
                118,
                118,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-293_25cb587a",
        "   Class": "org.apache.logging.log4j.core.config.ConfigurationFactory",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "DL",
        "    Type": "DL_SYNCHRONIZATION_ON_SHARED_CONSTANT",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Synchronization on interned String in org.apache.logging.log4j.core.config.ConfigurationFactory.getInstance()",
        "  Method": "getInstance",
        "   Field": "",
        "   Lines": [
            [
                101,
                101,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-260_9d817953",
        "   Class": "org.apache.logging.log4j.core.layout.XMLLayout",
        "     Cat": "STYLE",
        "  Abbrev": "PZLA",
        "    Type": "PZLA_PREFER_ZERO_LENGTH_ARRAYS",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Should org.apache.logging.log4j.core.layout.XMLLayout.getFooter() return a zero length array rather than null?",
        "  Method": "getFooter",
        "   Field": "",
        "   Lines": [
            [
                216,
                216,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-260_9d817953",
        "   Class": "org.apache.logging.log4j.core.layout.XMLLayout",
        "     Cat": "STYLE",
        "  Abbrev": "PZLA",
        "    Type": "PZLA_PREFER_ZERO_LENGTH_ARRAYS",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Should org.apache.logging.log4j.core.layout.XMLLayout.getHeader() return a zero length array rather than null?",
        "  Method": "getHeader",
        "   Field": "",
        "   Lines": [
            [
                198,
                198,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-470_50340d0c",
        "   Class": "org.apache.logging.log4j.core.LoggerContext",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "Nm",
        "    Type": "NM_SAME_SIMPLE_NAME_AS_INTERFACE",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "The class name org.apache.logging.log4j.core.LoggerContext shadows the simple name of implemented interface org.apache.logging.log4j.spi.LoggerContext",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                52,
                432,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-398_2c966ad9",
        "   Class": "org.apache.logging.log4j.core.config.BaseConfiguration",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.logging.log4j.core.config.BaseConfiguration.getProperties() may expose internal representation by returning BaseConfiguration.properties",
        "  Method": "getProperties",
        "   Field": "properties",
        "   Lines": [
            [
                133,
                133,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-492_24a3bed4",
        "   Class": "org.apache.logging.log4j.core.jmx.Server",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.logging.log4j.core.jmx.Server.escape(String) where default case is missing",
        "  Method": "escape",
        "   Field": "",
        "   Lines": [
            [
                75,
                88,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-492_a759d8ae",
        "   Class": "org.apache.logging.log4j.core.jmx.Server",
        "     Cat": "STYLE",
        "  Abbrev": "SF",
        "    Type": "SF_SWITCH_NO_DEFAULT",
        "Priority": "2",
        "    Rank": "19",
        "     Msg": "Switch statement found in org.apache.logging.log4j.core.jmx.Server.escape(String) where default case is missing",
        "  Method": "escape",
        "   Field": "",
        "   Lines": [
            [
                76,
                84,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-763_97203de8",
        "   Class": "org.apache.logging.log4j.message.LocalizedMessage",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to length in org.apache.logging.log4j.message.LocalizedMessage.readObject(ObjectInputStream)",
        "  Method": "readObject",
        "   Field": "",
        "   Lines": [
            [
                276,
                276,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-56_3eb44094",
        "   Class": "org.apache.logging.log4j.Level",
        "     Cat": "STYLE",
        "  Abbrev": "RCN",
        "    Type": "RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "Redundant nullcheck of level, which is known to be non-null in org.apache.logging.log4j.Level.toLevel(String, Level)",
        "  Method": "toLevel",
        "   Field": "",
        "   Lines": [
            [
                101,
                101,
                "SOURCE_REDUNDANT_NULL_CHECK"
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-177_f91ce934",
        "   Class": "org.apache.logging.log4j.core.appender.OutputStreamManager",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.logging.log4j.core.appender.OutputStreamManager.setFooter(byte[]) may expose internal representation by storing an externally mutable object into OutputStreamManager.footer",
        "  Method": "setFooter",
        "   Field": "footer",
        "   Lines": [
            [
                71,
                71,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-639_a5a1f1a2",
        "   Class": "org.apache.logging.log4j.core.async.AsyncLogger",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field config in org.apache.logging.log4j.core.async.AsyncLogger.actualAsyncLog(RingBufferLogEvent)",
        "  Method": "actualAsyncLog",
        "   Field": "config",
        "   Lines": [
            [
                284,
                284,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-639_a5a1f1a2",
        "   Class": "org.apache.logging.log4j.core.async.AsyncLogger",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field loggerConfig in org.apache.logging.log4j.core.async.AsyncLogger.actualAsyncLog(RingBufferLogEvent)",
        "  Method": "actualAsyncLog",
        "   Field": "loggerConfig",
        "   Lines": [
            [
                283,
                283,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-639_a5a1f1a2",
        "   Class": "org.apache.logging.log4j.core.async.AsyncLogger",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field loggerConfig in org.apache.logging.log4j.core.async.AsyncLogger.logMessage(String, Level, Marker, Message, Throwable)",
        "  Method": "logMessage",
        "   Field": "loggerConfig",
        "   Lines": [
            [
                238,
                238,
                null
            ],
            [
                241,
                241,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-639_a5a1f1a2",
        "   Class": "org.apache.logging.log4j.core.async.AsyncLoggerConfigHelper",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "SWL",
        "    Type": "SWL_SLEEP_WITH_LOCK_HELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "org.apache.logging.log4j.core.async.AsyncLoggerConfigHelper.release() calls Thread.sleep() with a lock held",
        "  Method": "release",
        "   Field": "",
        "   Lines": [
            [
                274,
                274,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-639_a5a1f1a2",
        "   Class": "org.apache.logging.log4j.core.async.AsyncLoggerConfigHelper",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "RC",
        "    Type": "RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Suspicious comparison of Boolean references in org.apache.logging.log4j.core.async.AsyncLoggerConfigHelper.callAppendersFromAnotherThread(LogEvent)",
        "  Method": "callAppendersFromAnotherThread",
        "   Field": "TRUE",
        "   Lines": [
            [
                322,
                322,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-668_60f64cc1",
        "   Class": "org.apache.logging.log4j.core.appender.AsyncAppender",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "RC",
        "    Type": "RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Suspicious comparison of Boolean references in org.apache.logging.log4j.core.appender.AsyncAppender.append(LogEvent)",
        "  Method": "append",
        "   Field": "TRUE",
        "   Lines": [
            [
                140,
                140,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-71_2afe3dff",
        "   Class": "org.apache.logging.log4j.core.appender.rolling.helper.FileRenameAction",
        "     Cat": "EXPERIMENTAL",
        "  Abbrev": "OBL",
        "    Type": "OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE",
        "Priority": "2",
        "    Rank": "20",
        "     Msg": "org.apache.logging.log4j.core.appender.rolling.helper.FileRenameAction.copyFile(File, File) may fail to clean up java.io.InputStream on checked exception",
        "  Method": "copyFile",
        "   Field": "",
        "   Lines": [
            [
                105,
                105,
                "SOURCE_LINE_OBLIGATION_CREATED"
            ],
            [
                106,
                106,
                "SOURCE_LINE_PATH_CONTINUES"
            ],
            [
                111,
                111,
                "SOURCE_LINE_PATH_CONTINUES"
            ],
            [
                112,
                112,
                "SOURCE_LINE_PATH_CONTINUES"
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-71_2afe3dff",
        "   Class": "org.apache.logging.log4j.core.appender.rolling.helper.FileRenameAction",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "RV",
        "    Type": "RV_RETURN_VALUE_IGNORED_BAD_PRACTICE",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Exceptional return value of java.io.File.createNewFile() ignored in org.apache.logging.log4j.core.appender.rolling.helper.FileRenameAction.copyFile(File, File)",
        "  Method": "copyFile",
        "   Field": "",
        "   Lines": [
            [
                97,
                97,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-763_97203de8",
        "   Class": "org.apache.logging.log4j.message.FormattedMessage",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.logging.log4j.message.FormattedMessage(String, Object[]) may expose internal representation by storing an externally mutable object into FormattedMessage.argArray",
        "  Method": "<init>",
        "   Field": "argArray",
        "   Lines": [
            [
                53,
                53,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-763_97203de8",
        "   Class": "org.apache.logging.log4j.message.FormattedMessage",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.logging.log4j.message.FormattedMessage(String, Object[], Throwable) may expose internal representation by storing an externally mutable object into FormattedMessage.throwable",
        "  Method": "<init>",
        "   Field": "throwable",
        "   Lines": [
            [
                48,
                48,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-914_f8a42197",
        "   Class": "org.apache.logging.log4j.core.impl.ThrowableProxy",
        "     Cat": "STYLE",
        "  Abbrev": "REC",
        "    Type": "REC_CATCH_EXCEPTION",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Exception is caught when Exception is not thrown in org.apache.logging.log4j.core.impl.ThrowableProxy.toCacheEntry(StackTraceElement, Class, boolean)",
        "  Method": "toCacheEntry",
        "   Field": "",
        "   Lines": [
            [
                503,
                503,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-832_411dad65",
        "   Class": "org.apache.logging.log4j.core.impl.ThrowableProxy",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.logging.log4j.core.impl.ThrowableProxy.getThrowable() may expose internal representation by returning ThrowableProxy.throwable",
        "  Method": "getThrowable",
        "   Field": "throwable",
        "   Lines": [
            [
                460,
                460,
                null
            ]
        ]
    },
    {
        "    Proj": "logging-log4j2_bugs-dot-jar_LOG4J2-965_43517f15",
        "   Class": "org.apache.logging.log4j.core.appender.ConsoleAppender",
        "     Cat": "STYLE",
        "  Abbrev": "REC",
        "    Type": "REC_CATCH_EXCEPTION",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Exception is caught when Exception is not thrown in org.apache.logging.log4j.core.appender.ConsoleAppender.getOutputStream(boolean, ConsoleAppender$Target)",
        "  Method": "getOutputStream",
        "   Field": "",
        "   Lines": [
            [
                206,
                206,
                null
            ]
        ]
    },
    {
        "    Proj": "flink_bugs-dot-jar_FLINK-1167_259f10c0",
        "   Class": "org.apache.flink.compiler.plandump.PlanJSONDumpGenerator",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Dead store to child2name in org.apache.flink.compiler.plandump.PlanJSONDumpGenerator.visit(DumpableNode, PrintWriter, boolean)",
        "  Method": "visit",
        "   Field": "",
        "   Lines": [
            [
                293,
                293,
                null
            ]
        ]
    },
    {
        "    Proj": "flink_bugs-dot-jar_FLINK-1167_259f10c0",
        "   Class": "org.apache.flink.compiler.plandump.PlanJSONDumpGenerator",
        "     Cat": "STYLE",
        "  Abbrev": "RCN",
        "    Type": "RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "Redundant nullcheck of channel, which is known to be non-null in org.apache.flink.compiler.plandump.PlanJSONDumpGenerator.visit(DumpableNode, PrintWriter, boolean)",
        "  Method": "visit",
        "   Field": "",
        "   Lines": [
            [
                364,
                364,
                "SOURCE_REDUNDANT_NULL_CHECK"
            ],
            [
                374,
                374,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "wicket_bugs-dot-jar_WICKET-5460_a3a5a40f",
        "   Class": "org.apache.wicket.Component",
        "     Cat": "STYLE",
        "  Abbrev": "DLS",
        "    Type": "DLS_DEAD_LOCAL_STORE",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Dead store to removed in org.apache.wicket.Component.detachFeedback()",
        "  Method": "detachFeedback",
        "   Field": "",
        "   Lines": [
            [
                1195,
                1195,
                null
            ]
        ]
    },
    {
        "    Proj": "wicket_bugs-dot-jar_WICKET-5578_5cdc1c8d",
        "   Class": "org.apache.wicket.Component",
        "     Cat": "STYLE",
        "  Abbrev": "BC",
        "    Type": "BC_UNCONFIRMED_CAST",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Unchecked/unconfirmed cast from Comparable to String in org.apache.wicket.Component.setMarkupIdImpl(Object)",
        "  Method": "setMarkupIdImpl",
        "   Field": "",
        "   Lines": [
            [
                2855,
                2855,
                null
            ]
        ]
    },
    {
        "    Proj": "wicket_bugs-dot-jar_WICKET-5655_d558004b",
        "   Class": "org.apache.wicket.Component",
        "     Cat": "STYLE",
        "  Abbrev": "BC",
        "    Type": "BC_UNCONFIRMED_CAST",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Unchecked/unconfirmed cast from Comparable to String in org.apache.wicket.Component.setMarkupIdImpl(Object)",
        "  Method": "setMarkupIdImpl",
        "   Field": "",
        "   Lines": [
            [
                2855,
                2855,
                null
            ]
        ]
    },
    {
        "    Proj": "wicket_bugs-dot-jar_WICKET-5724_b92591f6",
        "   Class": "org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler(Markup) may expose internal representation by storing an externally mutable object into HtmlHeaderSectionHandler.markup",
        "  Method": "<init>",
        "   Field": "markup",
        "   Lines": [
            [
                81,
                81,
                null
            ]
        ]
    },
    {
        "    Proj": "wicket_bugs-dot-jar_WICKET-5265_0eb596df",
        "   Class": "org.apache.wicket.feedback.FencedFeedbackPanel",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.wicket.feedback.FencedFeedbackPanel(String, Component, IFeedbackMessageFilter) may expose internal representation by storing an externally mutable object into FencedFeedbackPanel.fence",
        "  Method": "<init>",
        "   Field": "fence",
        "   Lines": [
            [
                137,
                137,
                null
            ]
        ]
    },
    {
        "    Proj": "wicket_bugs-dot-jar_WICKET-5497_724066f4",
        "   Class": "org.apache.wicket.ajax.json.JsonUtils",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "RCN",
        "    Type": "RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE",
        "Priority": "2",
        "    Rank": "11",
        "     Msg": "Nullcheck of value at line 61 of value previously dereferenced in org.apache.wicket.ajax.json.JsonUtils.asArray(Map)",
        "  Method": "asArray",
        "   Field": "",
        "   Lines": [
            [
                61,
                61,
                null
            ],
            [
                77,
                77,
                "SOURCE_REDUNDANT_NULL_CHECK"
            ]
        ]
    },
    {
        "    Proj": "wicket_bugs-dot-jar_WICKET-5500_825da305",
        "   Class": "org.apache.wicket.core.request.mapper.AbstractComponentMapper",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.wicket.core.request.mapper.AbstractComponentMapper implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                42,
                152,
                null
            ]
        ]
    },
    {
        "    Proj": "wicket_bugs-dot-jar_WICKET-5460_a3a5a40f",
        "   Class": "org.apache.wicket.Component",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "MC",
        "    Type": "MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Overridable method onInstantiation is called from constructor new org.apache.wicket.Component(String, IModel).",
        "  Method": "<init>",
        "   Field": "",
        "   Lines": [
            [
                682,
                682,
                null
            ]
        ]
    },
    {
        "    Proj": "wicket_bugs-dot-jar_WICKET-5546_f1af9e03",
        "   Class": "org.apache.wicket.Component",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "MC",
        "    Type": "MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Overridable method onInstantiation is called from constructor new org.apache.wicket.Component(String, IModel).",
        "  Method": "<init>",
        "   Field": "",
        "   Lines": [
            [
                683,
                683,
                null
            ]
        ]
    },
    {
        "    Proj": "wicket_bugs-dot-jar_WICKET-5578_5cdc1c8d",
        "   Class": "org.apache.wicket.Component",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "MC",
        "    Type": "MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Overridable method init is called from constructor new org.apache.wicket.Component(String, IModel).",
        "  Method": "<init>",
        "   Field": "",
        "   Lines": [
            [
                684,
                684,
                null
            ]
        ]
    },
    {
        "    Proj": "wicket_bugs-dot-jar_WICKET-5578_5cdc1c8d",
        "   Class": "org.apache.wicket.Component",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "MC",
        "    Type": "MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Overridable method onInstantiation is called from constructor new org.apache.wicket.Component(String, IModel).",
        "  Method": "<init>",
        "   Field": "",
        "   Lines": [
            [
                686,
                686,
                null
            ]
        ]
    },
    {
        "    Proj": "wicket_bugs-dot-jar_WICKET-5655_d558004b",
        "   Class": "org.apache.wicket.Component",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "MC",
        "    Type": "MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Overridable method init is called from constructor new org.apache.wicket.Component(String, IModel).",
        "  Method": "<init>",
        "   Field": "",
        "   Lines": [
            [
                684,
                684,
                null
            ]
        ]
    },
    {
        "    Proj": "wicket_bugs-dot-jar_WICKET-5655_d558004b",
        "   Class": "org.apache.wicket.Component",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "MC",
        "    Type": "MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Overridable method onInstantiation is called from constructor new org.apache.wicket.Component(String, IModel).",
        "  Method": "<init>",
        "   Field": "",
        "   Lines": [
            [
                686,
                686,
                null
            ]
        ]
    },
    {
        "    Proj": "wicket_bugs-dot-jar_WICKET-2079_ceac38b1",
        "   Class": "org.apache.wicket.Page",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "DE",
        "    Type": "DE_MIGHT_IGNORE",
        "Priority": "3",
        "    Rank": "19",
        "     Msg": "org.apache.wicket.Page.isBookmarkable() might ignore java.lang.Exception",
        "  Method": "isBookmarkable",
        "   Field": "",
        "   Lines": [
            [
                705,
                705,
                null
            ],
            [
                705,
                705,
                null
            ]
        ]
    },
    {
        "    Proj": "wicket_bugs-dot-jar_WICKET-2079_ceac38b1",
        "   Class": "org.apache.wicket.Page",
        "     Cat": "STYLE",
        "  Abbrev": "REC",
        "    Type": "REC_CATCH_EXCEPTION",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Exception is caught when Exception is not thrown in org.apache.wicket.Page.isBookmarkable()",
        "  Method": "isBookmarkable",
        "   Field": "",
        "   Lines": [
            [
                696,
                696,
                null
            ],
            [
                705,
                705,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "wicket_bugs-dot-jar_WICKET-2368_fae1601b",
        "   Class": "org.apache.wicket.Page",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "DE",
        "    Type": "DE_MIGHT_IGNORE",
        "Priority": "3",
        "    Rank": "19",
        "     Msg": "org.apache.wicket.Page.isBookmarkable() might ignore java.lang.Exception",
        "  Method": "isBookmarkable",
        "   Field": "",
        "   Lines": [
            [
                706,
                706,
                null
            ],
            [
                706,
                706,
                null
            ]
        ]
    },
    {
        "    Proj": "wicket_bugs-dot-jar_WICKET-2368_fae1601b",
        "   Class": "org.apache.wicket.Page",
        "     Cat": "STYLE",
        "  Abbrev": "REC",
        "    Type": "REC_CATCH_EXCEPTION",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Exception is caught when Exception is not thrown in org.apache.wicket.Page.isBookmarkable()",
        "  Method": "isBookmarkable",
        "   Field": "",
        "   Lines": [
            [
                697,
                697,
                null
            ],
            [
                706,
                706,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "wicket_bugs-dot-jar_WICKET-5783_7b8b6767",
        "   Class": "org.apache.wicket.ajax.AjaxEventBehavior",
        "     Cat": "I18N",
        "  Abbrev": "Dm",
        "    Type": "DM_CONVERT_CASE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Use of non-localized String.toUpperCase() or String.toLowerCase() in new org.apache.wicket.ajax.AjaxEventBehavior(String)",
        "  Method": "<init>",
        "   Field": "",
        "   Lines": [
            [
                72,
                72,
                null
            ]
        ]
    },
    {
        "    Proj": "wicket_bugs-dot-jar_WICKET-5724_b92591f6",
        "   Class": "org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.wicket.markup.parser.filter.HtmlHeaderSectionHandler(Markup) may expose internal representation by storing an externally mutable object into HtmlHeaderSectionHandler.markup",
        "  Method": "<init>",
        "   Field": "markup",
        "   Lines": [
            [
                81,
                81,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-434_133cbc2d",
        "   Class": "org.apache.commons.math.optimization.linear.SimplexTableau",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "MC",
        "    Type": "MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Overridable method initializeColumnLabels is called from constructor new org.apache.commons.math.optimization.linear.SimplexTableau(LinearObjectiveFunction, Collection, GoalType, boolean, double).",
        "  Method": "<init>",
        "   Field": "",
        "   Lines": [
            [
                122,
                122,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-320_c06cc933",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU() may expose internal representation by returning SingularValueDecompositionImpl.cachedU",
        "  Method": "getU",
        "   Field": "cachedU",
        "   Lines": [
            [
                166,
                166,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-320_c06cc933",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getUT() may expose internal representation by returning SingularValueDecompositionImpl.cachedUt",
        "  Method": "getUT",
        "   Field": "cachedUt",
        "   Lines": [
            [
                179,
                179,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-327_262fe4c0",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getS() may expose internal representation by returning SingularValueDecompositionImpl.cachedS",
        "  Method": "getS",
        "   Field": "cachedS",
        "   Lines": [
            [
                162,
                162,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-327_262fe4c0",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV() may expose internal representation by returning SingularValueDecompositionImpl.cachedV",
        "  Method": "getV",
        "   Field": "cachedV",
        "   Lines": [
            [
                173,
                173,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-327_262fe4c0",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT() may expose internal representation by returning SingularValueDecompositionImpl.cachedVt",
        "  Method": "getVT",
        "   Field": "cachedVt",
        "   Lines": [
            [
                182,
                182,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-377_c640932d",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getS() may expose internal representation by returning SingularValueDecompositionImpl.cachedS",
        "  Method": "getS",
        "   Field": "cachedS",
        "   Lines": [
            [
                184,
                184,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-377_c640932d",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getUT() may expose internal representation by returning SingularValueDecompositionImpl.cachedUt",
        "  Method": "getUT",
        "   Field": "cachedUt",
        "   Lines": [
            [
                171,
                171,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-320_b2f3f6db",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getS() may expose internal representation by returning SingularValueDecompositionImpl.cachedS",
        "  Method": "getS",
        "   Field": "cachedS",
        "   Lines": [
            [
                225,
                225,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-320_c06cc933",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getS() may expose internal representation by returning SingularValueDecompositionImpl.cachedS",
        "  Method": "getS",
        "   Field": "cachedS",
        "   Lines": [
            [
                193,
                193,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-320_c06cc933",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU() may expose internal representation by returning SingularValueDecompositionImpl.cachedU",
        "  Method": "getU",
        "   Field": "cachedU",
        "   Lines": [
            [
                166,
                166,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-320_c06cc933",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getUT() may expose internal representation by returning SingularValueDecompositionImpl.cachedUt",
        "  Method": "getUT",
        "   Field": "cachedUt",
        "   Lines": [
            [
                179,
                179,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-320_c06cc933",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV() may expose internal representation by returning SingularValueDecompositionImpl.cachedV",
        "  Method": "getV",
        "   Field": "cachedV",
        "   Lines": [
            [
                244,
                244,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-320_c06cc933",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT() may expose internal representation by returning SingularValueDecompositionImpl.cachedVt",
        "  Method": "getVT",
        "   Field": "cachedVt",
        "   Lines": [
            [
                257,
                257,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-327_262fe4c0",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getS() may expose internal representation by returning SingularValueDecompositionImpl.cachedS",
        "  Method": "getS",
        "   Field": "cachedS",
        "   Lines": [
            [
                162,
                162,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-327_262fe4c0",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU() may expose internal representation by returning SingularValueDecompositionImpl.cachedU",
        "  Method": "getU",
        "   Field": "cachedU",
        "   Lines": [
            [
                143,
                143,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-327_262fe4c0",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getUT() may expose internal representation by returning SingularValueDecompositionImpl.cachedUt",
        "  Method": "getUT",
        "   Field": "cachedUt",
        "   Lines": [
            [
                153,
                153,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-327_262fe4c0",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV() may expose internal representation by returning SingularValueDecompositionImpl.cachedV",
        "  Method": "getV",
        "   Field": "cachedV",
        "   Lines": [
            [
                173,
                173,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-327_262fe4c0",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT() may expose internal representation by returning SingularValueDecompositionImpl.cachedVt",
        "  Method": "getVT",
        "   Field": "cachedVt",
        "   Lines": [
            [
                182,
                182,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-377_c640932d",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getS() may expose internal representation by returning SingularValueDecompositionImpl.cachedS",
        "  Method": "getS",
        "   Field": "cachedS",
        "   Lines": [
            [
                184,
                184,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-377_c640932d",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU() may expose internal representation by returning SingularValueDecompositionImpl.cachedU",
        "  Method": "getU",
        "   Field": "cachedU",
        "   Lines": [
            [
                159,
                159,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-377_c640932d",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getUT() may expose internal representation by returning SingularValueDecompositionImpl.cachedUt",
        "  Method": "getUT",
        "   Field": "cachedUt",
        "   Lines": [
            [
                171,
                171,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-320_b2f3f6db",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getS() may expose internal representation by returning SingularValueDecompositionImpl.cachedS",
        "  Method": "getS",
        "   Field": "cachedS",
        "   Lines": [
            [
                225,
                225,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-320_b2f3f6db",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU() may expose internal representation by returning SingularValueDecompositionImpl.cachedU",
        "  Method": "getU",
        "   Field": "cachedU",
        "   Lines": [
            [
                198,
                198,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-320_b2f3f6db",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getUT() may expose internal representation by returning SingularValueDecompositionImpl.cachedUt",
        "  Method": "getUT",
        "   Field": "cachedUt",
        "   Lines": [
            [
                211,
                211,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-320_b2f3f6db",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV() may expose internal representation by returning SingularValueDecompositionImpl.cachedV",
        "  Method": "getV",
        "   Field": "cachedV",
        "   Lines": [
            [
                280,
                280,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-320_b2f3f6db",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT() may expose internal representation by returning SingularValueDecompositionImpl.cachedVt",
        "  Method": "getVT",
        "   Field": "cachedVt",
        "   Lines": [
            [
                293,
                293,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-320_c06cc933",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getS() may expose internal representation by returning SingularValueDecompositionImpl.cachedS",
        "  Method": "getS",
        "   Field": "cachedS",
        "   Lines": [
            [
                193,
                193,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-320_c06cc933",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU() may expose internal representation by returning SingularValueDecompositionImpl.cachedU",
        "  Method": "getU",
        "   Field": "cachedU",
        "   Lines": [
            [
                166,
                166,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-320_c06cc933",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getUT() may expose internal representation by returning SingularValueDecompositionImpl.cachedUt",
        "  Method": "getUT",
        "   Field": "cachedUt",
        "   Lines": [
            [
                179,
                179,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-320_c06cc933",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV() may expose internal representation by returning SingularValueDecompositionImpl.cachedV",
        "  Method": "getV",
        "   Field": "cachedV",
        "   Lines": [
            [
                244,
                244,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-320_c06cc933",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT() may expose internal representation by returning SingularValueDecompositionImpl.cachedVt",
        "  Method": "getVT",
        "   Field": "cachedVt",
        "   Lines": [
            [
                257,
                257,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-327_262fe4c0",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getS() may expose internal representation by returning SingularValueDecompositionImpl.cachedS",
        "  Method": "getS",
        "   Field": "cachedS",
        "   Lines": [
            [
                162,
                162,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-327_262fe4c0",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU() may expose internal representation by returning SingularValueDecompositionImpl.cachedU",
        "  Method": "getU",
        "   Field": "cachedU",
        "   Lines": [
            [
                143,
                143,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-327_262fe4c0",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getUT() may expose internal representation by returning SingularValueDecompositionImpl.cachedUt",
        "  Method": "getUT",
        "   Field": "cachedUt",
        "   Lines": [
            [
                153,
                153,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-327_262fe4c0",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV() may expose internal representation by returning SingularValueDecompositionImpl.cachedV",
        "  Method": "getV",
        "   Field": "cachedV",
        "   Lines": [
            [
                173,
                173,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-327_262fe4c0",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT() may expose internal representation by returning SingularValueDecompositionImpl.cachedVt",
        "  Method": "getVT",
        "   Field": "cachedVt",
        "   Lines": [
            [
                182,
                182,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-377_c640932d",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getS() may expose internal representation by returning SingularValueDecompositionImpl.cachedS",
        "  Method": "getS",
        "   Field": "cachedS",
        "   Lines": [
            [
                184,
                184,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-377_c640932d",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU() may expose internal representation by returning SingularValueDecompositionImpl.cachedU",
        "  Method": "getU",
        "   Field": "cachedU",
        "   Lines": [
            [
                159,
                159,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-377_c640932d",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getUT() may expose internal representation by returning SingularValueDecompositionImpl.cachedUt",
        "  Method": "getUT",
        "   Field": "cachedUt",
        "   Lines": [
            [
                171,
                171,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-377_c640932d",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV() may expose internal representation by returning SingularValueDecompositionImpl.cachedV",
        "  Method": "getV",
        "   Field": "cachedV",
        "   Lines": [
            [
                195,
                195,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-377_c640932d",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT() may expose internal representation by returning SingularValueDecompositionImpl.cachedVt",
        "  Method": "getVT",
        "   Field": "cachedVt",
        "   Lines": [
            [
                207,
                207,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-327_262fe4c0",
        "   Class": "org.apache.commons.math.linear.SingularValueDecompositionImpl",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU() may expose internal representation by returning SingularValueDecompositionImpl.cachedU",
        "  Method": "getU",
        "   Field": "cachedU",
        "   Lines": [
            [
                143,
                143,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-434_133cbc2d",
        "   Class": "org.apache.commons.math.optimization.linear.SimplexTableau",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "MC",
        "    Type": "MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Overridable method initializeColumnLabels is called from constructor new org.apache.commons.math.optimization.linear.SimplexTableau(LinearObjectiveFunction, Collection, GoalType, boolean, double).",
        "  Method": "<init>",
        "   Field": "",
        "   Lines": [
            [
                122,
                122,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-305_ef9b639a",
        "   Class": "org.apache.commons.math.util.MathUtils",
        "     Cat": "PERFORMANCE",
        "  Abbrev": "Bx",
        "    Type": "DM_FP_NUMBER_CTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "org.apache.commons.math.util.MathUtils.hash(double) invokes inefficient new Double(double) constructor; use Double.valueOf(double) instead",
        "  Method": "hash",
        "   Field": "",
        "   Lines": [
            [
                681,
                681,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-695_7980a242",
        "   Class": "org.apache.commons.math.ode.AbstractIntegrator",
        "     Cat": "STYLE",
        "  Abbrev": "UrF",
        "    Type": "URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "Unread public/protected field: org.apache.commons.math.ode.AbstractIntegrator.resetOccurred",
        "  Method": "",
        "   Field": "resetOccurred",
        "   Lines": [
            [
                281,
                281,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-705_645d642b",
        "   Class": "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "3",
        "    Rank": "17",
        "     Msg": "Read of unwritten public or protected field interpolatedState in org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.computeInterpolatedStateAndDerivatives(double, double)",
        "  Method": "computeInterpolatedStateAndDerivatives",
        "   Field": "interpolatedState",
        "   Lines": [
            [
                323,
                323,
                null
            ],
            [
                371,
                371,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                331,
                331,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-294_2c8a114f",
        "   Class": "org.apache.commons.math.random.RandomDataImpl",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "DMI",
        "    Type": "DMI_RANDOM_USED_ONLY_ONCE",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "Random object created and used only once in org.apache.commons.math.random.RandomDataImpl.reSeedSecure(long)",
        "  Method": "reSeedSecure",
        "   Field": "",
        "   Lines": [
            [
                597,
                597,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-309_0596e314",
        "   Class": "org.apache.commons.math.random.RandomDataImpl",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "DMI",
        "    Type": "DMI_RANDOM_USED_ONLY_ONCE",
        "Priority": "1",
        "    Rank": "14",
        "     Msg": "Random object created and used only once in org.apache.commons.math.random.RandomDataImpl.reSeedSecure(long)",
        "  Method": "reSeedSecure",
        "   Field": "",
        "   Lines": [
            [
                586,
                586,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-724_9c8bb934",
        "   Class": "org.apache.commons.math.random.RandomDataImpl",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "FL",
        "    Type": "FL_FLOATS_AS_LOOP_COUNTERS",
        "Priority": "2",
        "    Rank": "7",
        "     Msg": "Using floating-point loop counters can lead to unexpected behavior.",
        "  Method": "nextUniform",
        "   Field": "",
        "   Lines": [
            [
                599,
                599,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-1058_4ebd967c",
        "   Class": "org.apache.commons.math3.special.Beta",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "FL",
        "    Type": "FL_FLOATS_AS_LOOP_COUNTERS",
        "Priority": "2",
        "    Rank": "7",
        "     Msg": "Using floating-point loop counters can lead to unexpected behavior.",
        "  Method": "logBeta",
        "   Field": "",
        "   Lines": [
            [
                452,
                452,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-1058_4ebd967c",
        "   Class": "org.apache.commons.math3.special.Beta",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "FL",
        "    Type": "FL_FLOATS_AS_LOOP_COUNTERS",
        "Priority": "2",
        "    Rank": "7",
        "     Msg": "Using floating-point loop counters can lead to unexpected behavior.",
        "  Method": "logBeta",
        "   Field": "",
        "   Lines": [
            [
                460,
                460,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-1058_4ebd967c",
        "   Class": "org.apache.commons.math3.special.Beta",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "FL",
        "    Type": "FL_FLOATS_AS_LOOP_COUNTERS",
        "Priority": "2",
        "    Rank": "7",
        "     Msg": "Using floating-point loop counters can lead to unexpected behavior.",
        "  Method": "logBeta",
        "   Field": "",
        "   Lines": [
            [
                480,
                480,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-1067_aff82362",
        "   Class": "org.apache.commons.math3.special.Beta",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "FL",
        "    Type": "FL_FLOATS_AS_LOOP_COUNTERS",
        "Priority": "2",
        "    Rank": "7",
        "     Msg": "Using floating-point loop counters can lead to unexpected behavior.",
        "  Method": "logBeta",
        "   Field": "",
        "   Lines": [
            [
                452,
                452,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-1067_aff82362",
        "   Class": "org.apache.commons.math3.special.Beta",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "FL",
        "    Type": "FL_FLOATS_AS_LOOP_COUNTERS",
        "Priority": "2",
        "    Rank": "7",
        "     Msg": "Using floating-point loop counters can lead to unexpected behavior.",
        "  Method": "logBeta",
        "   Field": "",
        "   Lines": [
            [
                460,
                460,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-1067_aff82362",
        "   Class": "org.apache.commons.math3.special.Beta",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "FL",
        "    Type": "FL_FLOATS_AS_LOOP_COUNTERS",
        "Priority": "2",
        "    Rank": "7",
        "     Msg": "Using floating-point loop counters can lead to unexpected behavior.",
        "  Method": "logBeta",
        "   Field": "",
        "   Lines": [
            [
                480,
                480,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-1252_09fe956a",
        "   Class": "org.apache.commons.math4.util.ResizableDoubleArray",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Test for floating point equality in org.apache.commons.math4.util.ResizableDoubleArray.equals(Object)",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                819,
                819,
                null
            ],
            [
                820,
                820,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-757_76b7413d",
        "   Class": "org.apache.commons.math4.util.ResizableDoubleArray",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.commons.math4.util.ResizableDoubleArray.getInternalValues() may expose internal representation by returning ResizableDoubleArray.internalArray",
        "  Method": "getInternalValues",
        "   Field": "internalArray",
        "   Lines": [
            [
                880,
                880,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-757_76b7413d",
        "   Class": "org.apache.commons.math4.util.ResizableDoubleArray",
        "     Cat": "STYLE",
        "  Abbrev": "FE",
        "    Type": "FE_FLOATING_POINT_EQUALITY",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Test for floating point equality in org.apache.commons.math4.util.ResizableDoubleArray.equals(Object)",
        "  Method": "equals",
        "   Field": "",
        "   Lines": [
            [
                1182,
                1182,
                null
            ],
            [
                1183,
                1183,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-757_76b7413d",
        "   Class": "org.apache.commons.math4.util.ResizableDoubleArray",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "IS",
        "    Type": "IS2_INCONSISTENT_SYNC",
        "Priority": "2",
        "    Rank": "17",
        "     Msg": "Inconsistent synchronization of org.apache.commons.math4.util.ResizableDoubleArray.expansionMode; locked 77% of time",
        "  Method": "",
        "   Field": "expansionMode",
        "   Lines": [
            [
                1037,
                1037,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                817,
                817,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                1184,
                1184,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1184,
                1184,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1137,
                1137,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1137,
                1137,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1089,
                1089,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1207,
                1207,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                696,
                696,
                "SOURCE_LINE_SYNC_ACCESS"
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-757_76b7413d",
        "   Class": "org.apache.commons.math4.util.ResizableDoubleArray",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "IS",
        "    Type": "IS2_INCONSISTENT_SYNC",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Inconsistent synchronization of org.apache.commons.math4.util.ResizableDoubleArray.contractionCriterion; locked 88% of time",
        "  Method": "",
        "   Field": "contractionCriterion",
        "   Lines": [
            [
                753,
                753,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                1182,
                1182,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1182,
                1182,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1135,
                1135,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1135,
                1135,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1092,
                1092,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1090,
                1090,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1206,
                1206,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                934,
                934,
                "SOURCE_LINE_SYNC_ACCESS"
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-757_76b7413d",
        "   Class": "org.apache.commons.math4.util.ResizableDoubleArray",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "IS",
        "    Type": "IS2_INCONSISTENT_SYNC",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Inconsistent synchronization of org.apache.commons.math4.util.ResizableDoubleArray.expansionFactor; locked 88% of time",
        "  Method": "",
        "   Field": "expansionFactor",
        "   Lines": [
            [
                804,
                804,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                1183,
                1183,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1183,
                1183,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1136,
                1136,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1136,
                1136,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1205,
                1205,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                699,
                699,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                697,
                697,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                999,
                999,
                "SOURCE_LINE_SYNC_ACCESS"
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-757_76b7413d",
        "   Class": "org.apache.commons.math4.util.ResizableDoubleArray",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "IS",
        "    Type": "IS2_INCONSISTENT_SYNC",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Inconsistent synchronization of org.apache.commons.math4.util.ResizableDoubleArray.internalArray; locked 94% of time",
        "  Method": "",
        "   Field": "internalArray",
        "   Lines": [
            [
                851,
                851,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                903,
                903,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                838,
                838,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                518,
                518,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                520,
                520,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                950,
                950,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                976,
                976,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                979,
                979,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                482,
                482,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                484,
                484,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                491,
                491,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                785,
                785,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1190,
                1190,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1190,
                1190,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1138,
                1138,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1138,
                1138,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1139,
                1139,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1139,
                1139,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1139,
                1139,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1092,
                1092,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1090,
                1090,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1208,
                1208,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                442,
                442,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                445,
                445,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                880,
                880,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                699,
                699,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                697,
                697,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                704,
                704,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                704,
                704,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                705,
                705,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                599,
                599,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                600,
                600,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                716,
                716,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                716,
                716,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                717,
                717,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1074,
                1074,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                457,
                457,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                459,
                459,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                769,
                769,
                "SOURCE_LINE_SYNC_ACCESS"
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-757_76b7413d",
        "   Class": "org.apache.commons.math4.util.ResizableDoubleArray",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "IS",
        "    Type": "IS2_INCONSISTENT_SYNC",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Inconsistent synchronization of org.apache.commons.math4.util.ResizableDoubleArray.startIndex; locked 96% of time",
        "  Method": "",
        "   Field": "startIndex",
        "   Lines": [
            [
                918,
                918,
                "SOURCE_LINE_UNSYNC_ACCESS"
            ],
            [
                1108,
                1108,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                672,
                672,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                672,
                672,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                517,
                517,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                951,
                951,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                587,
                587,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                976,
                976,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                979,
                979,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                977,
                977,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                482,
                482,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                484,
                484,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                488,
                488,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                488,
                488,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                491,
                491,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                785,
                785,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1186,
                1186,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1186,
                1186,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1142,
                1142,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1142,
                1142,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1210,
                1210,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                442,
                442,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                445,
                445,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                599,
                599,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                603,
                603,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                1073,
                1073,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                457,
                457,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                460,
                460,
                "SOURCE_LINE_SYNC_ACCESS"
            ],
            [
                769,
                769,
                "SOURCE_LINE_SYNC_ACCESS"
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-757_76b7413d",
        "   Class": "org.apache.commons.math4.util.ResizableDoubleArray",
        "     Cat": "STYLE",
        "  Abbrev": "UC",
        "    Type": "UC_USELESS_CONDITION",
        "Priority": "3",
        "    Rank": "19",
        "     Msg": "Useless condition: it's known that expansionMode == 1 at this point",
        "  Method": "setExpansionMode",
        "   Field": "",
        "   Lines": [
            [
                1023,
                1023,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-828_a49e443c",
        "   Class": "org.apache.commons.math3.optimization.linear.SimplexSolver",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "RC",
        "    Type": "RC_REF_COMPARISON",
        "Priority": "1",
        "    Rank": "1",
        "     Msg": "Suspicious comparison of Integer references in org.apache.commons.math3.optimization.linear.SimplexSolver.getPivotRow(SimplexTableau, int)",
        "  Method": "getPivotRow",
        "   Field": "",
        "   Lines": [
            [
                137,
                137,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-828_a49e443c",
        "   Class": "org.apache.commons.math3.optimization.linear.SimplexSolver",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "RC",
        "    Type": "RC_REF_COMPARISON",
        "Priority": "1",
        "    Rank": "1",
        "     Msg": "Suspicious comparison of Integer references in org.apache.commons.math3.optimization.linear.SimplexSolver.getPivotRow(SimplexTableau, int)",
        "  Method": "getPivotRow",
        "   Field": "",
        "   Lines": [
            [
                138,
                138,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-864_abe53a53",
        "   Class": "org.apache.commons.math3.optimization.direct.CMAESOptimizer",
        "     Cat": "STYLE",
        "  Abbrev": "RCN",
        "    Type": "RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Redundant nullcheck of lastResult, which is known to be non-null in org.apache.commons.math3.optimization.direct.CMAESOptimizer.doOptimize()",
        "  Method": "doOptimize",
        "   Field": "",
        "   Lines": [
            [
                419,
                419,
                "SOURCE_REDUNDANT_NULL_CHECK"
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-780_dd6cefb0",
        "   Class": "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() may expose internal representation by returning PolygonsSet.vertices",
        "  Method": "getVertices",
        "   Field": "vertices",
        "   Lines": [
            [
                280,
                280,
                null
            ]
        ]
    },
    {
        "    Proj": "commons-math_bugs-dot-jar_MATH-950_424cbd20",
        "   Class": "org.apache.commons.math3.ode.AbstractIntegrator",
        "     Cat": "STYLE",
        "  Abbrev": "UrF",
        "    Type": "URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "Unread public/protected field: org.apache.commons.math3.ode.AbstractIntegrator.resetOccurred",
        "  Method": "",
        "   Field": "resetOccurred",
        "   Lines": [
            [
                366,
                366,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-3727_ff2713d1",
        "   Class": "org.apache.camel.processor.MulticastProcessor",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.camel.processor.MulticastProcessor.getCamelContext() may expose internal representation by returning MulticastProcessor.camelContext",
        "  Method": "getCamelContext",
        "   Field": "camelContext",
        "   Lines": [
            [
                183,
                183,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8081_2e985f9b",
        "   Class": "org.apache.camel.processor.MulticastProcessor",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.processor.MulticastProcessor(CamelContext, Collection, AggregationStrategy, boolean, ExecutorService, boolean, boolean, boolean, long, Processor, boolean, boolean) may expose internal representation by storing an externally mutable object into MulticastProcessor.processors",
        "  Method": "<init>",
        "   Field": "processors",
        "   Lines": [
            [
                181,
                181,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4482_e38494f1",
        "   Class": "org.apache.camel.processor.Splitter",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.processor.Splitter implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                55,
                210,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-6723_b92d6237",
        "   Class": "org.apache.camel.processor.Splitter",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.processor.Splitter implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                57,
                255,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-7100_00a9b02b",
        "   Class": "org.apache.camel.processor.Splitter",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.processor.Splitter implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                57,
                257,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-9444_baece126",
        "   Class": "org.apache.camel.processor.Splitter",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.processor.Splitter implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                55,
                280,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4467_79168a23",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                136,
                2352,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4682_1e54865c",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                136,
                2408,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8053_cac72b14",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                160,
                3212,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8125_36e7b668",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                162,
                3222,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8964_ea8ee025",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                171,
                3865,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-3448_b345dd82",
        "   Class": "org.apache.camel.processor.exceptionpolicy.ExceptionPolicyKey",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.camel.processor.exceptionpolicy.ExceptionPolicyKey.getWhen() may expose internal representation by returning ExceptionPolicyKey.when",
        "  Method": "getWhen",
        "   Field": "when",
        "   Lines": [
            [
                42,
                42,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-3448_b345dd82",
        "   Class": "org.apache.camel.processor.exceptionpolicy.ExceptionPolicyKey",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.processor.exceptionpolicy.ExceptionPolicyKey(Class, WhenDefinition) may expose internal representation by storing an externally mutable object into ExceptionPolicyKey.when",
        "  Method": "<init>",
        "   Field": "when",
        "   Lines": [
            [
                34,
                34,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4482_e38494f1",
        "   Class": "org.apache.camel.processor.Splitter",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.processor.Splitter implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                55,
                210,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-6723_b92d6237",
        "   Class": "org.apache.camel.processor.Splitter",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.processor.Splitter implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                57,
                255,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-7100_00a9b02b",
        "   Class": "org.apache.camel.processor.Splitter",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.processor.Splitter implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                57,
                257,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-9444_baece126",
        "   Class": "org.apache.camel.processor.Splitter",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.processor.Splitter implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                55,
                280,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4467_79168a23",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                136,
                2352,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4682_1e54865c",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                136,
                2408,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8053_cac72b14",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                160,
                3212,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8125_36e7b668",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                162,
                3222,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8964_ea8ee025",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                171,
                3865,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-5681_78c73502",
        "   Class": "org.apache.camel.processor.MulticastProcessor",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_LOAD_OF_KNOWN_NULL_VALUE",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Load of known null value in org.apache.camel.processor.MulticastProcessor.createErrorHandler(RouteContext, Exchange, Processor)",
        "  Method": "createErrorHandler",
        "   Field": "",
        "   Lines": [
            [
                891,
                891,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-6604_4209fabb",
        "   Class": "org.apache.camel.processor.RecipientListProcessor",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.processor.RecipientListProcessor(CamelContext, ProducerCache, Iterator) may expose internal representation by storing an externally mutable object into RecipientListProcessor.iter",
        "  Method": "<init>",
        "   Field": "iter",
        "   Lines": [
            [
                122,
                122,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-3789_9319e139",
        "   Class": "org.apache.camel.component.file.FileOperations",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_LOAD_OF_KNOWN_NULL_VALUE",
        "Priority": "3",
        "    Rank": "19",
        "     Msg": "Load of known null value in org.apache.camel.component.file.FileOperations.writeFileByFile(File, File)",
        "  Method": "writeFileByFile",
        "   Field": "",
        "   Lines": [
            [
                240,
                240,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-3847_de9399f3",
        "   Class": "org.apache.camel.impl.converter.BaseTypeConverterRegistry",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "JLM",
        "    Type": "JLM_JSR166_UTILCONCURRENT_MONITORENTER",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Synchronization performed on java.util.concurrent.ConcurrentHashMap in org.apache.camel.impl.converter.BaseTypeConverterRegistry.doConvertTo(Class, Exchange, Object)",
        "  Method": "doConvertTo",
        "   Field": "misses",
        "   Lines": [
            [
                226,
                226,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-7459_57ba1bde",
        "   Class": "org.apache.camel.util.URISupport",
        "     Cat": "STYLE",
        "  Abbrev": "UC",
        "    Type": "UC_USELESS_CONDITION",
        "Priority": "3",
        "    Rank": "19",
        "     Msg": "Useless condition: it's known that isRaw == false at this point",
        "  Method": "parseQuery",
        "   Field": "",
        "   Lines": [
            [
                203,
                203,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-6936_4954d573",
        "   Class": "org.apache.camel.component.file.GenericFileConsumer",
        "     Cat": "STYLE",
        "  Abbrev": "UrF",
        "    Type": "URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "Unread public/protected field: org.apache.camel.component.file.GenericFileConsumer.pendingExchanges",
        "  Method": "",
        "   Field": "pendingExchanges",
        "   Lines": [
            [
                102,
                102,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-6936_4954d573",
        "   Class": "org.apache.camel.component.file.GenericFileConsumer",
        "     Cat": "STYLE",
        "  Abbrev": "UrF",
        "    Type": "URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "Unread public/protected field: org.apache.camel.component.file.GenericFileConsumer.shutdownRunningTask",
        "  Method": "",
        "   Field": "shutdownRunningTask",
        "   Lines": [
            [
                101,
                101,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4467_79168a23",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                136,
                2352,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4682_1e54865c",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                136,
                2408,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8053_cac72b14",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.camel.impl.DefaultCamelContext.setTypeConverterRegistry(TypeConverterRegistry) may expose internal representation by storing an externally mutable object into DefaultCamelContext.typeConverterRegistry",
        "  Method": "setTypeConverterRegistry",
        "   Field": "typeConverterRegistry",
        "   Lines": [
            [
                1532,
                1532,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8053_cac72b14",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                160,
                3212,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8125_36e7b668",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.camel.impl.DefaultCamelContext.getTypeConverterRegistry() may expose internal representation by returning DefaultCamelContext.typeConverterRegistry",
        "  Method": "getTypeConverterRegistry",
        "   Field": "typeConverterRegistry",
        "   Lines": [
            [
                1532,
                1532,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8125_36e7b668",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                162,
                3222,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8964_ea8ee025",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                171,
                3865,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4482_e38494f1",
        "   Class": "org.apache.camel.processor.Splitter",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.processor.Splitter implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                55,
                210,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-6723_b92d6237",
        "   Class": "org.apache.camel.processor.Splitter",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.processor.Splitter implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                57,
                255,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-7100_00a9b02b",
        "   Class": "org.apache.camel.processor.Splitter",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.processor.Splitter implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                57,
                257,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-9444_baece126",
        "   Class": "org.apache.camel.processor.Splitter",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.processor.Splitter implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                55,
                280,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4467_79168a23",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                136,
                2352,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4682_1e54865c",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                136,
                2408,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8053_cac72b14",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                160,
                3212,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8125_36e7b668",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                162,
                3222,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8964_ea8ee025",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                171,
                3865,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8137_53b4e90c",
        "   Class": "org.apache.camel.component.bean.BeanInfo",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "MC",
        "    Type": "MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Overridable method getType is called from constructor new org.apache.camel.component.bean.BeanInfo(CamelContext, Class, Method, ParameterMappingStrategy).",
        "  Method": "<init>",
        "   Field": "",
        "   Lines": [
            [
                132,
                132,
                null
            ],
            [
                134,
                134,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8624_597883fa",
        "   Class": "org.apache.camel.component.bean.BeanInfo",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "MC",
        "    Type": "MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Overridable method getType is called from constructor new org.apache.camel.component.bean.BeanInfo(CamelContext, Class, Method, ParameterMappingStrategy).",
        "  Method": "<init>",
        "   Field": "",
        "   Lines": [
            [
                133,
                133,
                null
            ],
            [
                135,
                135,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-9032_108d94f7",
        "   Class": "org.apache.camel.component.bean.BeanInfo",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "MC",
        "    Type": "MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Overridable method getType is called from constructor new org.apache.camel.component.bean.BeanInfo(CamelContext, Class, Method, ParameterMappingStrategy).",
        "  Method": "<init>",
        "   Field": "",
        "   Lines": [
            [
                133,
                133,
                null
            ],
            [
                135,
                135,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-9243_1957a828",
        "   Class": "org.apache.camel.component.bean.BeanInfo",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "MC",
        "    Type": "MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Overridable method getType is called from constructor new org.apache.camel.component.bean.BeanInfo(CamelContext, Class, Method, ParameterMappingStrategy).",
        "  Method": "<init>",
        "   Field": "",
        "   Lines": [
            [
                133,
                133,
                null
            ],
            [
                135,
                135,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-3789_9319e139",
        "   Class": "org.apache.camel.component.file.FileOperations",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_LOAD_OF_KNOWN_NULL_VALUE",
        "Priority": "3",
        "    Rank": "19",
        "     Msg": "Load of known null value in org.apache.camel.component.file.FileOperations.writeFileByFile(File, File)",
        "  Method": "writeFileByFile",
        "   Field": "",
        "   Lines": [
            [
                240,
                240,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-5261_55c2e2d8",
        "   Class": "org.apache.camel.component.seda.SedaEndpoint",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.camel.component.seda.SedaEndpoint.getQueue() may expose internal representation by returning SedaEndpoint.queue",
        "  Method": "getQueue",
        "   Field": "queue",
        "   Lines": [
            [
                103,
                103,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-7018_3244c1e5",
        "   Class": "org.apache.camel.component.seda.SedaEndpoint",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.component.seda.SedaEndpoint(String, Component, BlockingQueue, int) may expose internal representation by storing an externally mutable object into SedaEndpoint.queue",
        "  Method": "<init>",
        "   Field": "queue",
        "   Lines": [
            [
                97,
                97,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-7018_3244c1e5",
        "   Class": "org.apache.camel.component.seda.SedaEndpoint",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "MC",
        "    Type": "MC_OVERRIDABLE_METHOD_CALL_IN_CONSTRUCTOR",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Overridable method getComponent is called from constructor new org.apache.camel.component.seda.SedaEndpoint(String, Component, BlockingQueue, int).",
        "  Method": "<init>",
        "   Field": "",
        "   Lines": [
            [
                102,
                102,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-5261_55c2e2d8",
        "   Class": "org.apache.camel.component.seda.SedaProducer",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.component.seda.SedaProducer(SedaEndpoint, BlockingQueue, WaitForTaskToComplete, long, boolean) may expose internal representation by storing an externally mutable object into SedaProducer.endpoint",
        "  Method": "<init>",
        "   Field": "endpoint",
        "   Lines": [
            [
                54,
                54,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-5261_55c2e2d8",
        "   Class": "org.apache.camel.component.seda.SedaProducer",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.component.seda.SedaProducer(SedaEndpoint, BlockingQueue, WaitForTaskToComplete, long, boolean) may expose internal representation by storing an externally mutable object into SedaProducer.queue",
        "  Method": "<init>",
        "   Field": "queue",
        "   Lines": [
            [
                53,
                53,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-5432_93935780",
        "   Class": "org.apache.camel.component.seda.SedaProducer",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.component.seda.SedaProducer(SedaEndpoint, BlockingQueue, WaitForTaskToComplete, long, boolean) may expose internal representation by storing an externally mutable object into SedaProducer.endpoint",
        "  Method": "<init>",
        "   Field": "endpoint",
        "   Lines": [
            [
                53,
                53,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-5432_93935780",
        "   Class": "org.apache.camel.component.seda.SedaProducer",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.component.seda.SedaProducer(SedaEndpoint, BlockingQueue, WaitForTaskToComplete, long, boolean) may expose internal representation by storing an externally mutable object into SedaProducer.queue",
        "  Method": "<init>",
        "   Field": "queue",
        "   Lines": [
            [
                52,
                52,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-9700_4d03e9de",
        "   Class": "org.apache.camel.component.seda.SedaProducer",
        "     Cat": "STYLE",
        "  Abbrev": "UrF",
        "    Type": "URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Unread public/protected field: org.apache.camel.component.seda.SedaProducer.queue",
        "  Method": "",
        "   Field": "queue",
        "   Lines": [
            [
                64,
                64,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-5571_0e87b84f",
        "   Class": "org.apache.camel.component.bean.AbstractCamelInvocationHandler",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "RV",
        "    Type": "RV_RETURN_VALUE_IGNORED_BAD_PRACTICE",
        "Priority": "3",
        "    Rank": "19",
        "     Msg": "Exceptional return value of java.util.concurrent.ExecutorService.submit(Runnable) ignored in org.apache.camel.component.bean.AbstractCamelInvocationHandler.invokeWithbody(Method, Object, ExchangePattern)",
        "  Method": "invokeWithbody",
        "   Field": "",
        "   Lines": [
            [
                95,
                95,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-5571_0e87b84f",
        "   Class": "org.apache.camel.component.bean.CamelInvocationHandler",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.component.bean.CamelInvocationHandler implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                36,
                44,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8081_2e985f9b",
        "   Class": "org.apache.camel.processor.MulticastProcessor",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.camel.processor.MulticastProcessor.getCamelContext() may expose internal representation by returning MulticastProcessor.camelContext",
        "  Method": "getCamelContext",
        "   Field": "camelContext",
        "   Lines": [
            [
                205,
                205,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4354_96e40c3c",
        "   Class": "org.apache.camel.impl.ProducerCache",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.camel.impl.ProducerCache.getCamelContext() may expose internal representation by returning ProducerCache.camelContext",
        "  Method": "getCamelContext",
        "   Field": "camelContext",
        "   Lines": [
            [
                87,
                87,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-9143_08077733",
        "   Class": "org.apache.camel.impl.ProducerCache",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.impl.ProducerCache(Object, CamelContext, ServicePool, Map) may expose internal representation by storing an externally mutable object into ProducerCache.pool",
        "  Method": "<init>",
        "   Field": "pool",
        "   Lines": [
            [
                79,
                79,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-9143_08077733",
        "   Class": "org.apache.camel.impl.ProducerCache",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.impl.ProducerCache(Object, CamelContext, ServicePool, Map) may expose internal representation by storing an externally mutable object into ProducerCache.producers",
        "  Method": "<init>",
        "   Field": "producers",
        "   Lines": [
            [
                80,
                80,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-6889_cd40b712",
        "   Class": "org.apache.camel.processor.ChoiceProcessor",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.camel.processor.ChoiceProcessor.getFilters() may expose internal representation by returning ChoiceProcessor.filters",
        "  Method": "getFilters",
        "   Field": "filters",
        "   Lines": [
            [
                137,
                137,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-6889_cd40b712",
        "   Class": "org.apache.camel.processor.ChoiceProcessor",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.processor.ChoiceProcessor(List, Processor) may expose internal representation by storing an externally mutable object into ChoiceProcessor.filters",
        "  Method": "<init>",
        "   Field": "filters",
        "   Lines": [
            [
                46,
                46,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-6667_1fc7bd7a",
        "   Class": "org.apache.camel.processor.LoopProcessor",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field processor in org.apache.camel.processor.LoopProcessor.process(Exchange, AsyncCallback, AtomicInteger, AtomicInteger)",
        "  Method": "process",
        "   Field": "processor",
        "   Lines": [
            [
                103,
                103,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-6723_b92d6237",
        "   Class": "org.apache.camel.impl.DefaultExchange",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.camel.impl.DefaultExchange.getContext() may expose internal representation by returning DefaultExchange.context",
        "  Method": "getContext",
        "   Field": "context",
        "   Lines": [
            [
                106,
                106,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-6723_b92d6237",
        "   Class": "org.apache.camel.processor.Splitter",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.processor.Splitter implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                57,
                255,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-7100_00a9b02b",
        "   Class": "org.apache.camel.processor.Splitter",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.processor.Splitter implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                57,
                257,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-9444_baece126",
        "   Class": "org.apache.camel.processor.Splitter",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.processor.Splitter implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                55,
                280,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-6889_cd40b712",
        "   Class": "org.apache.camel.processor.ChoiceProcessor",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.processor.ChoiceProcessor(List, Processor) may expose internal representation by storing an externally mutable object into ChoiceProcessor.filters",
        "  Method": "<init>",
        "   Field": "filters",
        "   Lines": [
            [
                46,
                46,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-6964_6b2ffb30",
        "   Class": "org.apache.camel.component.file.GenericFileOnCompletion",
        "     Cat": "STYLE",
        "  Abbrev": "RV",
        "    Type": "RV_CHECK_FOR_POSITIVE_INDEXOF",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "org.apache.camel.component.file.GenericFileOnCompletion.processStrategyCommit(GenericFileProcessStrategy, Exchange, GenericFile) checks to see if result of String.indexOf is positive",
        "  Method": "processStrategyCommit",
        "   Field": "",
        "   Lines": [
            [
                128,
                128,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4482_e38494f1",
        "   Class": "org.apache.camel.processor.Splitter",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.processor.Splitter implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                55,
                210,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-6723_b92d6237",
        "   Class": "org.apache.camel.processor.Splitter",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.processor.Splitter implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                57,
                255,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-7100_00a9b02b",
        "   Class": "org.apache.camel.processor.Splitter",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.processor.Splitter implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                57,
                257,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-9444_baece126",
        "   Class": "org.apache.camel.processor.Splitter",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.processor.Splitter implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                55,
                280,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-7448_35bde2b2",
        "   Class": "org.apache.camel.processor.Throttler",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field log in org.apache.camel.processor.Throttler.calculateDelay(Exchange)",
        "  Method": "calculateDelay",
        "   Field": "log",
        "   Lines": [
            [
                120,
                120,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-7239_ae419224",
        "   Class": "org.apache.camel.processor.validation.ValidatingProcessor",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.camel.processor.validation.ValidatingProcessor.setSchemaFactory(SchemaFactory) may expose internal representation by storing an externally mutable object into ValidatingProcessor.schemaFactory",
        "  Method": "setSchemaFactory",
        "   Field": "schemaFactory",
        "   Lines": [
            [
                253,
                253,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-5681_78c73502",
        "   Class": "org.apache.camel.processor.MulticastProcessor",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_LOAD_OF_KNOWN_NULL_VALUE",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Load of known null value in org.apache.camel.processor.MulticastProcessor.createErrorHandler(RouteContext, Exchange, Processor)",
        "  Method": "createErrorHandler",
        "   Field": "",
        "   Lines": [
            [
                891,
                891,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-5681_78c73502",
        "   Class": "org.apache.camel.processor.MulticastProcessor",
        "     Cat": "MT_CORRECTNESS",
        "  Abbrev": "RV",
        "    Type": "RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED",
        "Priority": "3",
        "    Rank": "13",
        "     Msg": "Return value of putIfAbsent is ignored, but answer is reused in org.apache.camel.processor.MulticastProcessor.createErrorHandler(RouteContext, Exchange, Processor)",
        "  Method": "createErrorHandler",
        "   Field": "",
        "   Lines": [
            [
                888,
                888,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-7359_9cb09d14",
        "   Class": "org.apache.camel.language.simple.ast.SimpleFunctionExpression",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "3",
        "    Rank": "17",
        "     Msg": "Read of unwritten public or protected field token in org.apache.camel.language.simple.ast.SimpleFunctionExpression.createSimpleExpressionBodyOrHeader(String, boolean)",
        "  Method": "createSimpleExpressionBodyOrHeader",
        "   Field": "token",
        "   Lines": [
            [
                200,
                200,
                null
            ],
            [
                226,
                226,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                236,
                236,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                242,
                242,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                280,
                280,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                212,
                212,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-7359_9cb09d14",
        "   Class": "org.apache.camel.language.simple.ast.SimpleFunctionExpression",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "3",
        "    Rank": "17",
        "     Msg": "Read of unwritten public or protected field token in org.apache.camel.language.simple.ast.SimpleFunctionExpression.createSimpleExpressionBodyOrHeader(String, boolean)",
        "  Method": "createSimpleExpressionBodyOrHeader",
        "   Field": "token",
        "   Lines": [
            [
                200,
                200,
                null
            ],
            [
                226,
                226,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                236,
                236,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                242,
                242,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                280,
                280,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                212,
                212,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-7359_e6fbbf04",
        "   Class": "org.apache.camel.language.simple.ast.SimpleFunctionExpression",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "3",
        "    Rank": "17",
        "     Msg": "Read of unwritten public or protected field token in org.apache.camel.language.simple.ast.SimpleFunctionExpression.createSimpleExpressionBodyOrHeader(String, boolean)",
        "  Method": "createSimpleExpressionBodyOrHeader",
        "   Field": "token",
        "   Lines": [
            [
                209,
                209,
                null
            ],
            [
                223,
                223,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                199,
                199,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                233,
                233,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                239,
                239,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                277,
                277,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-7973_799b45df",
        "   Class": "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field log in org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer.process(Exchange, AsyncCallback)",
        "  Method": "process",
        "   Field": "log",
        "   Lines": [
            [
                100,
                100,
                null
            ],
            [
                129,
                129,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ],
            [
                133,
                133,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8584_dd0f74c0",
        "   Class": "org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field log in org.apache.camel.processor.loadbalancer.CircuitBreakerLoadBalancer.logState()",
        "  Method": "logState",
        "   Field": "log",
        "   Lines": [
            [
                167,
                167,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4467_79168a23",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                136,
                2352,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4682_1e54865c",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                136,
                2408,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8053_cac72b14",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                160,
                3212,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8125_36e7b668",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                162,
                3222,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8964_ea8ee025",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                171,
                3865,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8125_36e7b668",
        "   Class": "org.apache.camel.impl.CamelPostProcessorHelper",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_PARAM_DEREF",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Null passed for non-null parameter of String.startsWith(String) in org.apache.camel.impl.CamelPostProcessorHelper.getInjectionPropertyValue(Class, String, String, String, Object, String)",
        "  Method": "getInjectionPropertyValue",
        "   Field": "",
        "   Lines": [
            [
                240,
                240,
                "SOURCE_LINE_INVOKED"
            ],
            [
                234,
                234,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4467_79168a23",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.camel.impl.DefaultCamelContext.getPackageScanClassResolver() may expose internal representation by returning DefaultCamelContext.packageScanClassResolver",
        "  Method": "getPackageScanClassResolver",
        "   Field": "packageScanClassResolver",
        "   Lines": [
            [
                2114,
                2114,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4467_79168a23",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                136,
                2352,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4682_1e54865c",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                136,
                2408,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8053_cac72b14",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.camel.impl.DefaultCamelContext.getShutdownStrategy() may expose internal representation by returning DefaultCamelContext.shutdownStrategy",
        "  Method": "getShutdownStrategy",
        "   Field": "shutdownStrategy",
        "   Lines": [
            [
                3081,
                3081,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8053_cac72b14",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.camel.impl.DefaultCamelContext.setShutdownStrategy(ShutdownStrategy) may expose internal representation by storing an externally mutable object into DefaultCamelContext.shutdownStrategy",
        "  Method": "setShutdownStrategy",
        "   Field": "shutdownStrategy",
        "   Lines": [
            [
                3085,
                3085,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8053_cac72b14",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                160,
                3212,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8125_36e7b668",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                162,
                3222,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8964_ea8ee025",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                171,
                3865,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8146_17475d80",
        "   Class": "org.apache.camel.impl.ScheduledPollConsumer",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.ScheduledPollConsumer implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                44,
                563,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-6918_5761250c",
        "   Class": "org.apache.camel.processor.SendProcessor",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.camel.processor.SendProcessor.getDestination() may expose internal representation by returning SendProcessor.destination",
        "  Method": "getDestination",
        "   Field": "destination",
        "   Lines": [
            [
                145,
                145,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8227_54d7fc59",
        "   Class": "org.apache.camel.processor.SendProcessor",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "RCN",
        "    Type": "RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE",
        "Priority": "2",
        "    Rank": "11",
        "     Msg": "Nullcheck of exchange at line 136 of value previously dereferenced in org.apache.camel.processor.SendProcessor.process(Exchange, AsyncCallback)",
        "  Method": "process",
        "   Field": "",
        "   Lines": [
            [
                105,
                105,
                null
            ],
            [
                136,
                136,
                "SOURCE_REDUNDANT_NULL_CHECK"
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4467_79168a23",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.camel.impl.DefaultCamelContext.getInterceptStrategies() may expose internal representation by returning DefaultCamelContext.interceptStrategies",
        "  Method": "getInterceptStrategies",
        "   Field": "interceptStrategies",
        "   Lines": [
            [
                1131,
                1131,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4467_79168a23",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                136,
                2352,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4682_1e54865c",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.camel.impl.DefaultCamelContext.getInterceptStrategies() may expose internal representation by returning DefaultCamelContext.interceptStrategies",
        "  Method": "getInterceptStrategies",
        "   Field": "interceptStrategies",
        "   Lines": [
            [
                1152,
                1152,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4682_1e54865c",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.camel.impl.DefaultCamelContext.getRouteDefinitions() may expose internal representation by returning DefaultCamelContext.routeDefinitions",
        "  Method": "getRouteDefinitions",
        "   Field": "routeDefinitions",
        "   Lines": [
            [
                1139,
                1139,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4682_1e54865c",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.camel.impl.DefaultCamelContext.setLifecycleStrategies(List) may expose internal representation by storing an externally mutable object into DefaultCamelContext.lifecycleStrategies",
        "  Method": "setLifecycleStrategies",
        "   Field": "lifecycleStrategies",
        "   Lines": [
            [
                1131,
                1131,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4682_1e54865c",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                136,
                2408,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8053_cac72b14",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                160,
                3212,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8125_36e7b668",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                162,
                3222,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-8964_ea8ee025",
        "   Class": "org.apache.camel.impl.DefaultCamelContext",
        "     Cat": "STYLE",
        "  Abbrev": "RI",
        "    Type": "RI_REDUNDANT_INTERFACES",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Class org.apache.camel.impl.DefaultCamelContext implements same interface as superclass",
        "  Method": "",
        "   Field": "",
        "   Lines": [
            [
                171,
                3865,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4354_96e40c3c",
        "   Class": "org.apache.camel.impl.ProducerCache",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.camel.impl.ProducerCache.getCamelContext() may expose internal representation by returning ProducerCache.camelContext",
        "  Method": "getCamelContext",
        "   Field": "camelContext",
        "   Lines": [
            [
                87,
                87,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4354_96e40c3c",
        "   Class": "org.apache.camel.impl.ProducerCache",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.impl.ProducerCache(Object, CamelContext, ServicePool, Map) may expose internal representation by storing an externally mutable object into ProducerCache.pool",
        "  Method": "<init>",
        "   Field": "pool",
        "   Lines": [
            [
                69,
                69,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-4354_96e40c3c",
        "   Class": "org.apache.camel.impl.ProducerCache",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.impl.ProducerCache(Object, CamelContext, ServicePool, Map) may expose internal representation by storing an externally mutable object into ProducerCache.producers",
        "  Method": "<init>",
        "   Field": "producers",
        "   Lines": [
            [
                70,
                70,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-5683_0c3c7d1b",
        "   Class": "org.apache.camel.impl.ProducerCache",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.impl.ProducerCache(Object, CamelContext, ServicePool, Map) may expose internal representation by storing an externally mutable object into ProducerCache.camelContext",
        "  Method": "<init>",
        "   Field": "camelContext",
        "   Lines": [
            [
                73,
                73,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-5683_0c3c7d1b",
        "   Class": "org.apache.camel.impl.ProducerCache",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.impl.ProducerCache(Object, CamelContext, ServicePool, Map) may expose internal representation by storing an externally mutable object into ProducerCache.pool",
        "  Method": "<init>",
        "   Field": "pool",
        "   Lines": [
            [
                74,
                74,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-5683_0c3c7d1b",
        "   Class": "org.apache.camel.impl.ProducerCache",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.impl.ProducerCache(Object, CamelContext, ServicePool, Map) may expose internal representation by storing an externally mutable object into ProducerCache.producers",
        "  Method": "<init>",
        "   Field": "producers",
        "   Lines": [
            [
                75,
                75,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-6948_f744afd9",
        "   Class": "org.apache.camel.impl.ProducerCache",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.impl.ProducerCache(Object, CamelContext, ServicePool, Map) may expose internal representation by storing an externally mutable object into ProducerCache.camelContext",
        "  Method": "<init>",
        "   Field": "camelContext",
        "   Lines": [
            [
                73,
                73,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-6948_f744afd9",
        "   Class": "org.apache.camel.impl.ProducerCache",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.impl.ProducerCache(Object, CamelContext, ServicePool, Map) may expose internal representation by storing an externally mutable object into ProducerCache.pool",
        "  Method": "<init>",
        "   Field": "pool",
        "   Lines": [
            [
                74,
                74,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-6948_f744afd9",
        "   Class": "org.apache.camel.impl.ProducerCache",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.impl.ProducerCache(Object, CamelContext, ServicePool, Map) may expose internal representation by storing an externally mutable object into ProducerCache.producers",
        "  Method": "<init>",
        "   Field": "producers",
        "   Lines": [
            [
                75,
                75,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-7736_7ad36e3d",
        "   Class": "org.apache.camel.impl.ProducerCache",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.impl.ProducerCache(Object, CamelContext, ServicePool, Map) may expose internal representation by storing an externally mutable object into ProducerCache.camelContext",
        "  Method": "<init>",
        "   Field": "camelContext",
        "   Lines": [
            [
                73,
                73,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-7736_7ad36e3d",
        "   Class": "org.apache.camel.impl.ProducerCache",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.impl.ProducerCache(Object, CamelContext, ServicePool, Map) may expose internal representation by storing an externally mutable object into ProducerCache.pool",
        "  Method": "<init>",
        "   Field": "pool",
        "   Lines": [
            [
                74,
                74,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-7736_7ad36e3d",
        "   Class": "org.apache.camel.impl.ProducerCache",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.impl.ProducerCache(Object, CamelContext, ServicePool, Map) may expose internal representation by storing an externally mutable object into ProducerCache.producers",
        "  Method": "<init>",
        "   Field": "producers",
        "   Lines": [
            [
                75,
                75,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-9143_08077733",
        "   Class": "org.apache.camel.impl.ProducerCache",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.impl.ProducerCache(Object, CamelContext, ServicePool, Map) may expose internal representation by storing an externally mutable object into ProducerCache.pool",
        "  Method": "<init>",
        "   Field": "pool",
        "   Lines": [
            [
                79,
                79,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-9143_08077733",
        "   Class": "org.apache.camel.impl.ProducerCache",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI2",
        "    Type": "EI_EXPOSE_REP2",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "new org.apache.camel.impl.ProducerCache(Object, CamelContext, ServicePool, Map) may expose internal representation by storing an externally mutable object into ProducerCache.producers",
        "  Method": "<init>",
        "   Field": "producers",
        "   Lines": [
            [
                80,
                80,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-9340_1cab39f6",
        "   Class": "org.apache.camel.processor.idempotent.FileIdempotentRepository",
        "     Cat": "BAD_PRACTICE",
        "  Abbrev": "RV",
        "    Type": "RV_RETURN_VALUE_IGNORED_BAD_PRACTICE",
        "Priority": "2",
        "    Rank": "16",
        "     Msg": "Exceptional return value of java.io.File.mkdirs() ignored in org.apache.camel.processor.idempotent.FileIdempotentRepository.loadStore()",
        "  Method": "loadStore",
        "   Field": "",
        "   Lines": [
            [
                293,
                293,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-7990_d581c4a4",
        "   Class": "org.apache.camel.processor.idempotent.IdempotentConsumer",
        "     Cat": "MALICIOUS_CODE",
        "  Abbrev": "EI",
        "    Type": "EI_EXPOSE_REP",
        "Priority": "2",
        "    Rank": "18",
        "     Msg": "org.apache.camel.processor.idempotent.IdempotentConsumer.getIdempotentRepository() may expose internal representation by returning IdempotentConsumer.idempotentRepository",
        "  Method": "getIdempotentRepository",
        "   Field": "idempotentRepository",
        "   Lines": [
            [
                146,
                146,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-9641_9a6e6d8a",
        "   Class": "org.apache.camel.language.simple.ast.SimpleFunctionExpression",
        "     Cat": "CORRECTNESS",
        "  Abbrev": "NP",
        "    Type": "NP_NULL_PARAM_DEREF",
        "Priority": "2",
        "    Rank": "8",
        "     Msg": "Null passed for non-null parameter of ifStartsWithReturnRemainder(String, String) in org.apache.camel.language.simple.ast.SimpleFunctionExpression.createSimpleExpression(String, boolean)",
        "  Method": "createSimpleExpression",
        "   Field": "",
        "   Lines": [
            [
                151,
                151,
                "SOURCE_LINE_INVOKED"
            ],
            [
                145,
                145,
                "SOURCE_LINE_KNOWN_NULL"
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-9672_84922699",
        "   Class": "org.apache.camel.management.DefaultManagementObjectStrategy",
        "     Cat": "STYLE",
        "  Abbrev": "BC",
        "    Type": "BC_UNCONFIRMED_CAST",
        "Priority": "3",
        "    Rank": "20",
        "     Msg": "Unchecked/unconfirmed cast from org.apache.camel.model.ProcessorDefinition<?> to org.apache.camel.model.FilterDefinition in org.apache.camel.management.DefaultManagementObjectStrategy.getManagedObjectForProcessor(CamelContext, Processor, ProcessorDefinition, Route)",
        "  Method": "getManagedObjectForProcessor",
        "   Field": "",
        "   Lines": [
            [
                310,
                310,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-9673_7944093f",
        "   Class": "org.apache.camel.processor.FinallyProcessor",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field processor in org.apache.camel.processor.FinallyProcessor.process(Exchange, AsyncCallback)",
        "  Method": "process",
        "   Field": "processor",
        "   Lines": [
            [
                56,
                56,
                null
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-9700_4d03e9de",
        "   Class": "org.apache.camel.component.seda.SedaProducer",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field log in org.apache.camel.component.seda.SedaProducer.addToQueue(Exchange)",
        "  Method": "addToQueue",
        "   Field": "log",
        "   Lines": [
            [
                234,
                234,
                null
            ],
            [
                224,
                224,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    },
    {
        "    Proj": "camel_bugs-dot-jar_CAMEL-9700_4d03e9de",
        "   Class": "org.apache.camel.component.seda.SedaProducer",
        "     Cat": "STYLE",
        "  Abbrev": "NP",
        "    Type": "NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD",
        "Priority": "2",
        "    Rank": "14",
        "     Msg": "Read of unwritten public or protected field log in org.apache.camel.component.seda.SedaProducer.process(Exchange, AsyncCallback)",
        "  Method": "process",
        "   Field": "log",
        "   Lines": [
            [
                165,
                165,
                null
            ],
            [
                123,
                123,
                "SOURCE_LINE_ANOTHER_INSTANCE"
            ]
        ]
    }
]